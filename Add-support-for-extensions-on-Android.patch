From d635ac47360a409b86a26940d6f5addaf00bdba5 Mon Sep 17 00:00:00 2001
From: Arnaud <team@geometry.ee>
Date: Thu, 26 Jul 2018 15:19:48 +0000
Subject: [PATCH] [Kiwi] Snapshot of extensions support

[Kiwi] Checkpointing for extensions

[Kiwi] New checkpoint extensions

[Kiwi] Re-enable init for extensions

[Kiwi] Re-enable browser enable_extensions

[Kiwi] Moving forward with extensions
---
 BUILD.gn                                           |    4 +-
 apps/BUILD.gn                                      |    1 -
 chrome/app/generated_resources.grd                 |   12 +-
 chrome/app/theme/theme_resources.grd               |    2 +-
 chrome/browser/BUILD.gn                            |  168 +-
 .../android/tab_web_contents_delegate_android.cc   |    2 +-
 chrome/browser/apps/shortcut_manager.cc            |   10 +
 chrome/browser/browser_process_impl.cc             |    4 +-
 chrome/browser/browser_resources.grd               |    2 +-
 chrome/browser/chrome_content_browser_client.cc    |    6 +-
 ...register_protocol_handler_permission_request.cc |    9 +
 .../register_protocol_handler_permission_request.h |    3 +
 chrome/browser/download/download_crx_util.cc       |    3 +
 .../bookmark_manager_private_api.cc                |    2 +
 .../extensions/api/commands/command_service.cc     |    3 +
 .../extensions/api/debugger/debugger_api.cc        |    9 +-
 .../api/developer_private/developer_private_api.cc |    2 +
 .../chrome_desktop_report_request_helper.cc        |    3 +
 .../api/extension_action/extension_action_api.cc   |    5 +
 .../api/font_settings/font_settings_api.cc         |    2 +
 .../api/runtime/chrome_runtime_api_delegate.cc     |    2 +
 .../settings_private/settings_private_delegate.cc  |    6 +
 chrome/browser/extensions/api/tabs/tabs_api.cc     |    2 +
 .../extensions/api/tabs/tabs_event_router.cc       |   47 +-
 .../extensions/api/tabs/tabs_event_router.h        |   43 +-
 .../extensions/api/tabs/windows_event_router.cc    |    2 +-
 .../api/web_navigation/web_navigation_api.cc       |   27 +
 .../browser_context_keyed_service_factories.cc     |    2 +
 ...hrome_content_browser_client_extensions_part.cc |    4 +
 chrome/browser/extensions/component_loader.cc      |    2 +-
 chrome/browser/extensions/crx_installer.cc         |    2 +
 chrome/browser/extensions/default_apps.cc          |    5 +
 .../extension_commands_global_registry.cc          |    8 +
 chrome/browser/extensions/extension_disabled_ui.cc |    2 +
 .../extensions/extension_error_ui_default.cc       |    6 +
 .../extensions/extension_error_ui_default.h        |    2 +
 .../browser/extensions/extension_install_prompt.cc |    2 +
 .../extension_install_prompt_show_params.cc        |    4 +
 chrome/browser/extensions/extension_reenabler.cc   |    3 +
 chrome/browser/extensions/extension_service.cc     |    6 +
 .../extensions/extension_storage_monitor.cc        |    2 +
 .../browser/extensions/external_install_error.cc   |    4 +
 chrome/browser/extensions/navigation_observer.cc   |    3 +
 chrome/browser/extensions/plugin_manager.cc        |    2 +
 .../state_store_notification_observer.cc           |    7 +-
 .../extensions/state_store_notification_observer.h |    2 +
 chrome/browser/extensions/tab_helper.cc            |    3 +-
 chrome/browser/extensions/warning_badge_service.cc |    2 +
 .../extensions/webstore_inline_installer.cc        |    8 +-
 .../extensions/webstore_standalone_installer.cc    |    2 +
 chrome/browser/file_select_helper.cc               |    2 +
 .../chrome_extension_options_guest_delegate.cc     |    3 +
 chrome/browser/media/router/media_router.h         |    8 -
 chrome/browser/media/router/media_router_base.cc   |    6 -
 chrome/browser/media/router/media_router_base.h    |    6 +-
 .../browser/media/router/media_router_feature.cc   |    5 +-
 chrome/browser/media/router/media_router_feature.h |    4 -
 chrome/browser/plugins/plugins_resource_service.cc |    4 +-
 chrome/browser/prefs/browser_prefs.cc              |    6 +-
 .../safe_browsing_controller_client.cc             |    2 +-
 chrome/browser/search/instant_service.h            |    2 +-
 chrome/browser/search/instant_service_factory.h    |    2 +-
 .../extension_api/tts_engine_extension_api.cc      |   12 +-
 .../speech/extension_api/tts_extension_api.cc      |   11 +
 chrome/browser/ssl/ssl_error_controller_client.cc  |    2 +-
 .../browser/ssl/ssl_error_navigation_throttle.cc   |    4 +-
 chrome/browser/ui/BUILD.gn                         |  114 +-
 .../ui/bookmarks/enhanced_bookmark_key_service.cc  |    2 +
 chrome/browser/ui/browser.cc                       |    9 +
 chrome/browser/ui/browser.h                        |    6 +-
 chrome/browser/ui/browser_commands.cc              |   10 +-
 chrome/browser/ui/browser_instant_controller.h     |    2 +-
 chrome/browser/ui/browser_list.cc                  |    2 +
 chrome/browser/ui/browser_navigator_params.cc      |    4 +-
 chrome/browser/ui/browser_navigator_params.h       |    4 +-
 .../content_setting_bubble_model.h                 |    2 +-
 chrome/browser/ui/extensions/application_launch.cc |    8 +
 .../ui/extensions/extension_install_ui_default.cc  |   18 +-
 .../ui/extensions/extension_install_ui_default.h   |    4 +-
 chrome/browser/ui/global_error/global_error.cc     |    2 +
 chrome/browser/ui/search/instant_controller.h      |    2 +-
 chrome/browser/ui/toolbar/toolbar_actions_model.cc |   26 +-
 .../ui/webui/chrome_web_ui_controller_factory.cc   |    6 +-
 chrome/browser/web_applications/web_app.cc         |    6 +
 chrome/common/chrome_features.cc                   |    4 -
 chrome/common/chrome_features.h                    |    4 -
 chrome/common/chrome_paths.cc                      |    2 +-
 chrome/common/chrome_paths.h                       |    2 +-
 chrome/common/pref_names.cc                        |    2 +-
 chrome/common/pref_names.h                         |    2 +-
 .../renderer_permissions_policy_delegate.cc        |    5 +-
 .../renderer_permissions_policy_delegate.h         |    2 +
 chrome/test/BUILD.gn                               | 2227 --------------------
 components/components_strings.grd                  |    2 +-
 components/guest_view/browser/BUILD.gn             |    1 -
 components/guest_view/renderer/BUILD.gn            |    1 -
 components/keep_alive_registry/BUILD.gn            |    2 -
 components/web_modal/BUILD.gn                      |    2 -
 components/zoom/BUILD.gn                           |    2 -
 components/zoom/zoom_controller.cc                 |   46 +
 content/public/common/webplugininfo.h              |    6 +
 content/public/common/webplugininfo_param_traits.h |    2 +
 content/renderer/renderer_blink_platform_impl.cc   |    2 +-
 extensions/BUILD.gn                                |   36 -
 extensions/browser/BUILD.gn                        |    1 +
 extensions/browser/api/idle/idle_manager.cc        |    7 +
 .../browser/api/messaging/message_service.cc       |    2 +
 .../browser_context_keyed_service_factories.cc     |    2 +
 .../browser/guest_view/web_view/web_view_guest.cc  |    1 +
 .../common/manifest_handlers/mime_types_handler.cc |    3 +
 .../common/permissions/usb_device_permission.cc    |    2 +
 services/device/public/cpp/hid/BUILD.gn            |    1 -
 ui/aura/mus/os_exchange_data_provider_mus.cc       |    2 +-
 ui/aura/mus/os_exchange_data_provider_mus.h        |    2 +-
 ui/events/event.h                                  |    2 +
 ui/views/button_drag_utils.cc                      |    2 +
 ui/views/controls/menu/menu_controller.cc          |    2 +
 ui/views/controls/menu/menu_host.cc                |   10 +-
 ui/views/controls/menu/menu_host.h                 |    2 +-
 ui/views/controls/textfield/textfield.cc           |    2 +
 .../webview/unhandled_keyboard_event_handler.cc    |    2 +
 .../unhandled_keyboard_event_handler_default.cc    |    2 +
 ui/views/controls/webview/web_dialog_view.cc       |    2 +
 123 files changed, 622 insertions(+), 2549 deletions(-)

diff --git a/BUILD.gn b/BUILD.gn
index 378aa88..ceb4118 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -194,7 +194,7 @@ group("gn_all") {
   if (!is_ios && !is_fuchsia) {
     deps += [
       "//chrome/test:telemetry_perf_unittests",
-      "//chrome/test:unit_tests",
+#      "//chrome/test:unit_tests",
       "//components:components_browsertests",
       "//components/viz:viz_perftests",
       "//components/viz:viz_unittests",
@@ -230,7 +230,7 @@ group("gn_all") {
   if (enable_extensions) {
     deps += [
       "//extensions:extensions_browsertests",
-      "//extensions:extensions_unittests",
+#      "//extensions:extensions_unittests",
       "//extensions/shell:app_shell_unittests",
     ]
   }
diff --git a/apps/BUILD.gn b/apps/BUILD.gn
index 271934a..7f8a271 100644
--- a/apps/BUILD.gn
+++ b/apps/BUILD.gn
@@ -6,7 +6,6 @@ import("//build/config/features.gni")
 import("//build/config/ui.gni")
 import("//extensions/buildflags/buildflags.gni")
 
-assert(!is_android && !is_ios)
 assert(enable_extensions,
        "Cannot depend on extensions because enable_extensions=false.")
 
diff --git a/chrome/app/generated_resources.grd b/chrome/app/generated_resources.grd
index 5f9dd91..35bd0b1 100644
--- a/chrome/app/generated_resources.grd
+++ b/chrome/app/generated_resources.grd
@@ -333,7 +333,7 @@ are declared in build/common.gypi.
       </if>
 
        <!-- content area context menus. Android does not use it -->
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <message name="IDS_CONTENT_CONTEXT_INSPECTELEMENT" desc="The name of the Inspect Element command in the content area context menu">
           I&amp;nspect
         </message>
@@ -799,7 +799,7 @@ are declared in build/common.gypi.
       </if>
 
       <!-- Page menu. Android has separate strings for its menu -->
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <if expr="not use_titlecase">
           <message name="IDS_NEW_TAB" desc="The text label of a menu item for opening a new tab">
             New &amp;tab
@@ -4730,7 +4730,7 @@ Keep your key file in a safe place. You will need it to create new versions of y
       </message>
 
       <!-- about:system strings -->
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <message name="IDS_ABOUT_SYS_TITLE" desc="about:system page title">
           About System
         </message>
@@ -6094,7 +6094,7 @@ I don't think this site should be blocked!
       <!-- Settings related strings not specific to chrome://settings.
            (Settings specific strings are in settings_strings.grdp).
            Android uses native UI for settings -->
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <message name="IDS_TOOLBAR_INFORM_SET_HOME_PAGE" desc="The confirmation message when dropping a link on the Home toolbar button">
            Your home page has been set.
         </message>
@@ -9243,7 +9243,7 @@ Please help our engineers fix this problem. Tell us what happened right before y
       </if>
 
       <!-- Media Galleries. -->
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <message name="IDS_MEDIA_GALLERIES_DIALOG_HEADER" desc="Header for media gallery permissions dialog.">
           Media-File Permissions for "<ph name="EXTENSION">$1<ex>Photo Editor</ex></ph>"
         </message>
@@ -10167,7 +10167,7 @@ Please help our engineers fix this problem. Tell us what happened right before y
     </if>
 
     <!-- Framebust / Blocked Redirection intervention message -->
-    <if expr="not is_android">
+    <if expr="is_android or not is_android">
       <!-- Android strings are declared in android_chrome_strings.grd. -->
       <message name="IDS_REDIRECT_BLOCKED_MESSAGE" desc="The message stating that a redirect (noun) was blocked on this page. This will be followed on a separate line with the address the user was being redirected to.">
         Redirect blocked:
diff --git a/chrome/app/theme/theme_resources.grd b/chrome/app/theme/theme_resources.grd
index 0c1e86a..a378420 100644
--- a/chrome/app/theme/theme_resources.grd
+++ b/chrome/app/theme/theme_resources.grd
@@ -28,7 +28,7 @@
       <if expr="enable_app_list">
         <structure type="chrome_scaled_image" name="IDR_APP_LIST_TAB_OVERLAY" file="common/app_list_v1_overlay.png" />
       </if>
-      <if expr="toolkit_views and not is_macosx">
+      <if expr="is_android or toolkit_views and not is_macosx">
         <structure type="chrome_scaled_image" name="IDR_APP_WINDOW_CLOSE" file="common/app_window_close.png" />
         <structure type="chrome_scaled_image" name="IDR_APP_WINDOW_CLOSE_H" file="common/app_window_close_hover.png" />
         <structure type="chrome_scaled_image" name="IDR_APP_WINDOW_CLOSE_P" file="common/app_window_close_active.png" />
diff --git a/chrome/browser/BUILD.gn b/chrome/browser/BUILD.gn
index dc64242..6bea6cc 100644
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -393,7 +393,9 @@ jumbo_split_static_library("browser") {
     "download/download_core_service_factory.h",
     "download/download_core_service_impl.cc",
     "download/download_core_service_impl.h",
-    "download/download_crx_util_android.cc",
+#    "download/download_crx_util_android.cc",
+    "download/download_crx_util.cc",
+    "download/download_crx_util.h",
     "download/download_file_picker.cc",
     "download/download_file_picker.h",
     "download/download_history.cc",
@@ -2372,6 +2374,69 @@ jumbo_split_static_library("browser") {
       "sync/glue/synced_window_delegates_getter_android.h",
       "sync/profile_sync_service_android.cc",
       "sync/profile_sync_service_android.h",
+#      "media_galleries/media_file_system_registry.cc",
+#      "media_galleries/media_file_system_registry.h",
+      "resource_coordinator/background_tab_navigation_throttle.cc",
+      "resource_coordinator/background_tab_navigation_throttle.h",
+      "resource_coordinator/decision_details.cc",
+      "resource_coordinator/decision_details.h",
+      "resource_coordinator/discard_metrics_lifecycle_unit_observer.cc",
+      "resource_coordinator/discard_metrics_lifecycle_unit_observer.h",
+      "resource_coordinator/discard_reason.h",
+      "resource_coordinator/leveldb_site_characteristics_database.cc",
+      "resource_coordinator/leveldb_site_characteristics_database.h",
+      "resource_coordinator/lifecycle_unit.cc",
+      "resource_coordinator/lifecycle_unit.h",
+      "resource_coordinator/lifecycle_unit_base.cc",
+      "resource_coordinator/lifecycle_unit_base.h",
+      "resource_coordinator/lifecycle_unit_observer.cc",
+      "resource_coordinator/lifecycle_unit_observer.h",
+      "resource_coordinator/lifecycle_unit_source.h",
+      "resource_coordinator/lifecycle_unit_source_base.cc",
+      "resource_coordinator/lifecycle_unit_source_base.h",
+      "resource_coordinator/lifecycle_unit_source_observer.h",
+      "resource_coordinator/local_site_characteristics_data_impl.cc",
+      "resource_coordinator/local_site_characteristics_data_impl.h",
+      "resource_coordinator/local_site_characteristics_data_reader.cc",
+      "resource_coordinator/local_site_characteristics_data_reader.h",
+      "resource_coordinator/local_site_characteristics_data_store.cc",
+      "resource_coordinator/local_site_characteristics_data_store.h",
+      "resource_coordinator/local_site_characteristics_data_writer.cc",
+      "resource_coordinator/local_site_characteristics_data_writer.h",
+      "resource_coordinator/local_site_characteristics_database.h",
+      "resource_coordinator/local_site_characteristics_feature_usage.h",
+      "resource_coordinator/local_site_characteristics_non_recording_data_store.cc",
+      "resource_coordinator/local_site_characteristics_non_recording_data_store.h",
+      "resource_coordinator/local_site_characteristics_noop_data_writer.cc",
+      "resource_coordinator/local_site_characteristics_noop_data_writer.h",
+      "resource_coordinator/site_characteristics_data_reader.h",
+      "resource_coordinator/site_characteristics_data_store.h",
+      "resource_coordinator/site_characteristics_data_writer.h",
+      "resource_coordinator/tab_activity_watcher.cc",
+      "resource_coordinator/tab_activity_watcher.h",
+      "resource_coordinator/tab_lifecycle_observer.h",
+      "resource_coordinator/tab_lifecycle_unit.cc",
+      "resource_coordinator/tab_lifecycle_unit.h",
+      "resource_coordinator/tab_lifecycle_unit_external.cc",
+      "resource_coordinator/tab_lifecycle_unit_external.h",
+      "resource_coordinator/tab_lifecycle_unit_source.cc",
+      "resource_coordinator/tab_lifecycle_unit_source.h",
+      "resource_coordinator/tab_manager.cc",
+      "resource_coordinator/tab_manager.h",
+      "resource_coordinator/tab_manager_delegate_chromeos.cc",
+      "resource_coordinator/tab_manager_delegate_chromeos.h",
+      "resource_coordinator/tab_manager_features.cc",
+      "resource_coordinator/tab_manager_features.h",
+      "resource_coordinator/tab_manager_resource_coordinator_signal_observer.cc",
+      "resource_coordinator/tab_manager_resource_coordinator_signal_observer.h",
+      "resource_coordinator/tab_manager_stats_collector.cc",
+      "resource_coordinator/tab_manager_stats_collector.h",
+      "resource_coordinator/tab_manager_web_contents_data.cc",
+      "resource_coordinator/tab_manager_web_contents_data.h",
+      "resource_coordinator/tab_metrics_logger.cc",
+      "resource_coordinator/tab_metrics_logger.h",
+      "custom_handlers/register_protocol_handler_permission_request.cc",
+      "custom_handlers/register_protocol_handler_permission_request.h",
     ]
     deps += [
       ":client_discourse_context_proto",
@@ -2406,6 +2471,22 @@ jumbo_split_static_library("browser") {
       "//net:net_utility_services",
       "//net:net_with_v8",
       "//v8",
+      ":theme_properties",
+      "//chrome/app/vector_icons",
+      "//chrome/browser/policy:path_parser",
+      "//chrome/browser/profile_resetter:profile_reset_report_proto",
+      "//chrome/browser/resource_coordinator:site_characteristics_proto",
+      "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
+      "//chrome/browser/resource_coordinator/tab_ranker",
+#      "//chrome/browser/resources:component_extension_resources",
+      "//chrome/browser/search:generated",
+      "//chrome/common/importer:interfaces",
+      "//components/feedback",
+      "//components/keep_alive_registry",
+      "//components/vector_icons",
+      "//components/web_modal",
+      "//components/zoom",
+      "//net:net",
     ]
 
     if (enable_supervised_users) {
@@ -2433,8 +2514,6 @@ jumbo_split_static_library("browser") {
       "chrome_browser_field_trials_desktop.h",
       "chrome_process_singleton.cc",
       "chrome_process_singleton.h",
-      "custom_handlers/register_protocol_handler_permission_request.cc",
-      "custom_handlers/register_protocol_handler_permission_request.h",
       "diagnostics/diagnostics_controller.cc",
       "diagnostics/diagnostics_controller.h",
       "diagnostics/diagnostics_metrics.cc",
@@ -2453,8 +2532,6 @@ jumbo_split_static_library("browser") {
       "download/default_download_dir_policy_handler.h",
       "download/download_commands.cc",
       "download/download_commands.h",
-      "download/download_crx_util.cc",
-      "download/download_crx_util.h",
       "download/download_danger_prompt.cc",
       "download/download_danger_prompt.h",
       "download/download_dir_policy_handler.cc",
@@ -2555,8 +2632,6 @@ jumbo_split_static_library("browser") {
       "media_galleries/gallery_watch_manager_observer.h",
       "media_galleries/mac/mtp_device_delegate_impl_mac.h",
       "media_galleries/mac/mtp_device_delegate_impl_mac.mm",
-      "media_galleries/media_file_system_registry.cc",
-      "media_galleries/media_file_system_registry.h",
       "media_galleries/media_galleries_dialog_controller.cc",
       "media_galleries/media_galleries_dialog_controller.h",
       "media_galleries/media_galleries_histograms.cc",
@@ -2654,65 +2729,6 @@ jumbo_split_static_library("browser") {
       "renderer_context_menu/spelling_menu_observer.h",
       "repost_form_warning_controller.cc",
       "repost_form_warning_controller.h",
-      "resource_coordinator/background_tab_navigation_throttle.cc",
-      "resource_coordinator/background_tab_navigation_throttle.h",
-      "resource_coordinator/decision_details.cc",
-      "resource_coordinator/decision_details.h",
-      "resource_coordinator/discard_metrics_lifecycle_unit_observer.cc",
-      "resource_coordinator/discard_metrics_lifecycle_unit_observer.h",
-      "resource_coordinator/discard_reason.h",
-      "resource_coordinator/leveldb_site_characteristics_database.cc",
-      "resource_coordinator/leveldb_site_characteristics_database.h",
-      "resource_coordinator/lifecycle_unit.cc",
-      "resource_coordinator/lifecycle_unit.h",
-      "resource_coordinator/lifecycle_unit_base.cc",
-      "resource_coordinator/lifecycle_unit_base.h",
-      "resource_coordinator/lifecycle_unit_observer.cc",
-      "resource_coordinator/lifecycle_unit_observer.h",
-      "resource_coordinator/lifecycle_unit_source.h",
-      "resource_coordinator/lifecycle_unit_source_base.cc",
-      "resource_coordinator/lifecycle_unit_source_base.h",
-      "resource_coordinator/lifecycle_unit_source_observer.h",
-      "resource_coordinator/local_site_characteristics_data_impl.cc",
-      "resource_coordinator/local_site_characteristics_data_impl.h",
-      "resource_coordinator/local_site_characteristics_data_reader.cc",
-      "resource_coordinator/local_site_characteristics_data_reader.h",
-      "resource_coordinator/local_site_characteristics_data_store.cc",
-      "resource_coordinator/local_site_characteristics_data_store.h",
-      "resource_coordinator/local_site_characteristics_data_writer.cc",
-      "resource_coordinator/local_site_characteristics_data_writer.h",
-      "resource_coordinator/local_site_characteristics_database.h",
-      "resource_coordinator/local_site_characteristics_feature_usage.h",
-      "resource_coordinator/local_site_characteristics_non_recording_data_store.cc",
-      "resource_coordinator/local_site_characteristics_non_recording_data_store.h",
-      "resource_coordinator/local_site_characteristics_noop_data_writer.cc",
-      "resource_coordinator/local_site_characteristics_noop_data_writer.h",
-      "resource_coordinator/site_characteristics_data_reader.h",
-      "resource_coordinator/site_characteristics_data_store.h",
-      "resource_coordinator/site_characteristics_data_writer.h",
-      "resource_coordinator/tab_activity_watcher.cc",
-      "resource_coordinator/tab_activity_watcher.h",
-      "resource_coordinator/tab_lifecycle_observer.h",
-      "resource_coordinator/tab_lifecycle_unit.cc",
-      "resource_coordinator/tab_lifecycle_unit.h",
-      "resource_coordinator/tab_lifecycle_unit_external.cc",
-      "resource_coordinator/tab_lifecycle_unit_external.h",
-      "resource_coordinator/tab_lifecycle_unit_source.cc",
-      "resource_coordinator/tab_lifecycle_unit_source.h",
-      "resource_coordinator/tab_manager.cc",
-      "resource_coordinator/tab_manager.h",
-      "resource_coordinator/tab_manager_delegate_chromeos.cc",
-      "resource_coordinator/tab_manager_delegate_chromeos.h",
-      "resource_coordinator/tab_manager_features.cc",
-      "resource_coordinator/tab_manager_features.h",
-      "resource_coordinator/tab_manager_resource_coordinator_signal_observer.cc",
-      "resource_coordinator/tab_manager_resource_coordinator_signal_observer.h",
-      "resource_coordinator/tab_manager_stats_collector.cc",
-      "resource_coordinator/tab_manager_stats_collector.h",
-      "resource_coordinator/tab_manager_web_contents_data.cc",
-      "resource_coordinator/tab_manager_web_contents_data.h",
-      "resource_coordinator/tab_metrics_logger.cc",
-      "resource_coordinator/tab_metrics_logger.h",
       "search/background/ntp_background_data.cc",
       "search/background/ntp_background_data.h",
       "search/background/ntp_background_service.cc",
@@ -2854,24 +2870,8 @@ jumbo_split_static_library("browser") {
       "usb/web_usb_detector.cc",
       "usb/web_usb_detector.h",
     ]
-    deps += [
-      ":theme_properties",
-      "//chrome/app/vector_icons",
-      "//chrome/browser/policy:path_parser",
-      "//chrome/browser/profile_resetter:profile_reset_report_proto",
-      "//chrome/browser/resource_coordinator:site_characteristics_proto",
-      "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
-      "//chrome/browser/resource_coordinator/tab_ranker",
-      "//chrome/browser/resources:component_extension_resources",
-      "//chrome/browser/search:generated",
-      "//chrome/common/importer:interfaces",
-      "//components/feedback",
-      "//components/keep_alive_registry",
-      "//components/vector_icons",
-      "//components/web_modal",
-      "//components/zoom",
-      "//net:net",
-    ]
+#    deps += [
+#    ]
 
     if (is_posix || is_fuchsia) {
       sources += [
diff --git a/chrome/browser/android/tab_web_contents_delegate_android.cc b/chrome/browser/android/tab_web_contents_delegate_android.cc
index 56eab6b..77fd0c5 100644
--- a/chrome/browser/android/tab_web_contents_delegate_android.cc
+++ b/chrome/browser/android/tab_web_contents_delegate_android.cc
@@ -332,7 +332,7 @@ bool TabWebContentsDelegateAndroid::RequestPpapiBrokerPermission(
     const GURL& url,
     const base::FilePath& plugin_path,
     const base::Callback<void(bool)>& callback) {
-#if BUILDFLAG(ENABLE_PLUGINS)
+#if false && BUILDFLAG(ENABLE_PLUGINS)
     PepperBrokerInfoBarDelegate::Create(
         web_contents, url, plugin_path, callback);
     return true;
diff --git a/chrome/browser/apps/shortcut_manager.cc b/chrome/browser/apps/shortcut_manager.cc
index 6ca05e8..d6bf21e 100644
--- a/chrome/browser/apps/shortcut_manager.cc
+++ b/chrome/browser/apps/shortcut_manager.cc
@@ -41,7 +41,9 @@ const int kCurrentAppShortcutsVersion = 0;
 #endif
 
 // Delay in seconds before running UpdateShortcutsForAllApps.
+#if 0
 const int kUpdateShortcutsForAllAppsDelay = 10;
+#endif
 
 void CreateShortcutsForApp(Profile* profile, const Extension* app) {
   web_app::ShortcutLocations creation_locations;
@@ -55,9 +57,11 @@ void CreateShortcutsForApp(Profile* profile, const Extension* app) {
       web_app::SHORTCUT_CREATION_AUTOMATED, creation_locations, profile, app);
 }
 
+#if 0
 void SetCurrentAppShortcutsVersion(PrefService* prefs) {
   prefs->SetInteger(prefs::kAppShortcutsVersion, kCurrentAppShortcutsVersion);
 }
+#endif
 
 }  // namespace
 
@@ -84,10 +88,12 @@ AppShortcutManager::AppShortcutManager(Profile* profile)
       extensions::ExtensionRegistry::Get(profile_));
   // Wait for extensions to be ready before running
   // UpdateShortcutsForAllAppsIfNeeded.
+#if 0
   extensions::ExtensionSystem::Get(profile)->ready().Post(
       FROM_HERE,
       base::Bind(&AppShortcutManager::UpdateShortcutsForAllAppsIfNeeded,
                  weak_ptr_factory_.GetWeakPtr()));
+#endif
 
   ProfileManager* profile_manager = g_browser_process->profile_manager();
   // profile_manager might be NULL in testing environments.
@@ -137,10 +143,12 @@ void AppShortcutManager::OnProfileWillBeRemoved(
   if (profile_path != profile_->GetPath())
     return;
 
+#if 0
   web_app::ShortcutInfo::GetTaskRunner()->PostTask(
       FROM_HERE,
       base::BindOnce(&web_app::internals::DeleteAllShortcutsForProfile,
                      profile_path));
+#endif
 }
 
 void AppShortcutManager::UpdateShortcutsForAllAppsIfNeeded() {
@@ -151,9 +159,11 @@ void AppShortcutManager::UpdateShortcutsForAllAppsIfNeeded() {
   if (last_version >= kCurrentAppShortcutsVersion)
     return;
 
+#if 0
   content::BrowserThread::PostDelayedTask(
       content::BrowserThread::UI, FROM_HERE,
       base::BindOnce(&web_app::UpdateShortcutsForAllApps, profile_,
                      base::Bind(&SetCurrentAppShortcutsVersion, prefs_)),
       base::TimeDelta::FromSeconds(kUpdateShortcutsForAllAppsDelay));
+#endif
 }
diff --git a/chrome/browser/browser_process_impl.cc b/chrome/browser/browser_process_impl.cc
index a5237f6..8266bc7 100644
--- a/chrome/browser/browser_process_impl.cc
+++ b/chrome/browser/browser_process_impl.cc
@@ -249,7 +249,7 @@ void BrowserProcessImpl::Init() {
 
   device_client_ = std::make_unique<ChromeDeviceClient>();
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   extensions::AppWindowClient::Set(ChromeAppWindowClient::GetInstance());
 
   extension_event_router_forwarder_ =
@@ -808,7 +808,7 @@ DownloadStatusUpdater* BrowserProcessImpl::download_status_updater() {
 }
 
 MediaFileSystemRegistry* BrowserProcessImpl::media_file_system_registry() {
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   if (!media_file_system_registry_)
     media_file_system_registry_ = std::make_unique<MediaFileSystemRegistry>();
   return media_file_system_registry_.get();
diff --git a/chrome/browser/browser_resources.grd b/chrome/browser/browser_resources.grd
index f6baa67a..63c3da9 100644
--- a/chrome/browser/browser_resources.grd
+++ b/chrome/browser/browser_resources.grd
@@ -653,7 +653,7 @@
         <include name="IDR_RESET_PASSWORD_JS" file="resources\reset_password\reset_password.js" type="BINDATA" compress="gzip" />
         <include name="IDR_RESET_PASSWORD_MOJO_JS" file="${root_gen_dir}\chrome\browser\ui\webui\reset_password\reset_password.mojom.js" use_base_dir="false" type="BINDATA" compress="gzip" />
       </if>
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <include name="IDR_TAB_RANKER_EXAMPLE_PREPROCESSOR_CONFIG_PB" file="resource_coordinator\tab_ranker\example_preprocessor_config.pb" type="BINDATA" />
       </if>
     </includes>
diff --git a/chrome/browser/chrome_content_browser_client.cc b/chrome/browser/chrome_content_browser_client.cc
index 36dd34b..d3af58a 100644
--- a/chrome/browser/chrome_content_browser_client.cc
+++ b/chrome/browser/chrome_content_browser_client.cc
@@ -1080,7 +1080,7 @@ content::BrowserMainParts* ChromeContentBrowserClient::CreateBrowserMainParts(
 
   // Construct additional browser parts. Stages are called in the order in
   // which they are added.
-#if defined(TOOLKIT_VIEWS)
+#if false && defined(TOOLKIT_VIEWS)
 #if defined(OS_LINUX) && !defined(OS_CHROMEOS) && !defined(USE_OZONE)
   main_parts->AddParts(new ChromeBrowserMainExtraPartsViewsLinux());
 #else
@@ -2966,7 +2966,7 @@ void ChromeContentBrowserClient::OverrideWebkitPrefs(
     }
 #endif  // defined(OS_ANDROID)
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
     Browser* browser = chrome::FindBrowserWithWebContents(contents);
     if (browser && browser->hosted_app_controller() &&
         browser->hosted_app_controller()->created_for_installed_pwa()) {
@@ -4039,7 +4039,7 @@ void ChromeContentBrowserClient::
         int render_process_id,
         int render_frame_id,
         NonNetworkURLLoaderFactoryMap* factories) {
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   auto factory = extensions::CreateExtensionURLLoaderFactory(render_process_id,
                                                              render_frame_id);
   if (factory)
diff --git a/chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc b/chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc
index b79eb6c..5094734 100644
--- a/chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc
+++ b/chrome/browser/custom_handlers/register_protocol_handler_permission_request.cc
@@ -27,9 +27,18 @@ RegisterProtocolHandlerPermissionRequest::
 
 PermissionRequest::IconId RegisterProtocolHandlerPermissionRequest::GetIconId()
     const {
+#if 0
   return vector_icons::kProtocolHandlerIcon;
+#endif
+  return 0;
 }
 
+#if defined(OS_ANDROID)
+base::string16 RegisterProtocolHandlerPermissionRequest::GetMessageText() const {
+  return base::string16();
+}
+#endif
+
 base::string16
 RegisterProtocolHandlerPermissionRequest::GetMessageTextFragment() const {
   ProtocolHandler old_handler = registry_->GetHandlerFor(handler_.protocol());
diff --git a/chrome/browser/custom_handlers/register_protocol_handler_permission_request.h b/chrome/browser/custom_handlers/register_protocol_handler_permission_request.h
index 2cb9d62..a6d5217 100644
--- a/chrome/browser/custom_handlers/register_protocol_handler_permission_request.h
+++ b/chrome/browser/custom_handlers/register_protocol_handler_permission_request.h
@@ -25,6 +25,9 @@ class RegisterProtocolHandlerPermissionRequest : public PermissionRequest {
  private:
   // PermissionRequest:
   IconId GetIconId() const override;
+#if defined(OS_ANDROID)
+  base::string16 GetMessageText() const override;
+#endif
   base::string16 GetMessageTextFragment() const override;
   GURL GetOrigin() const override;
   void PermissionGranted() override;
diff --git a/chrome/browser/download/download_crx_util.cc b/chrome/browser/download/download_crx_util.cc
index fa168a8..a646969 100644
--- a/chrome/browser/download/download_crx_util.cc
+++ b/chrome/browser/download/download_crx_util.cc
@@ -41,6 +41,7 @@ ExtensionInstallPrompt* mock_install_prompt_for_testing = NULL;
 std::unique_ptr<ExtensionInstallPrompt> CreateExtensionInstallPrompt(
     Profile* profile,
     const DownloadItem& download_item) {
+#if 0
   // Use a mock if one is present.  Otherwise, create a real extensions
   // install UI.
   if (mock_install_prompt_for_testing) {
@@ -62,6 +63,8 @@ std::unique_ptr<ExtensionInstallPrompt> CreateExtensionInstallPrompt(
     return std::unique_ptr<ExtensionInstallPrompt>(
         new ExtensionInstallPrompt(web_contents));
   }
+#endif
+  return nullptr;
 }
 
 }  // namespace
diff --git a/chrome/browser/extensions/api/bookmark_manager_private/bookmark_manager_private_api.cc b/chrome/browser/extensions/api/bookmark_manager_private/bookmark_manager_private_api.cc
index bbda385..72cbd14 100644
--- a/chrome/browser/extensions/api/bookmark_manager_private/bookmark_manager_private_api.cc
+++ b/chrome/browser/extensions/api/bookmark_manager_private/bookmark_manager_private_api.cc
@@ -291,10 +291,12 @@ BookmarkManagerPrivateDragEventRouter::BookmarkManagerPrivateDragEventRouter(
       profile_(
           Profile::FromBrowserContext(web_contents_->GetBrowserContext())) {
   // We need to guarantee the BookmarkTabHelper is created.
+#if 0
   BookmarkTabHelper::CreateForWebContents(web_contents_);
   BookmarkTabHelper* bookmark_tab_helper =
       BookmarkTabHelper::FromWebContents(web_contents_);
   bookmark_tab_helper->set_bookmark_drag_delegate(this);
+#endif
 }
 
 BookmarkManagerPrivateDragEventRouter::
diff --git a/chrome/browser/extensions/api/commands/command_service.cc b/chrome/browser/extensions/api/commands/command_service.cc
index d8f0b19..beae511 100644
--- a/chrome/browser/extensions/api/commands/command_service.cc
+++ b/chrome/browser/extensions/api/commands/command_service.cc
@@ -546,6 +546,7 @@ void CommandService::AssignKeybindings(const Extension* extension) {
 
 bool CommandService::CanAutoAssign(const Command &command,
                                    const Extension* extension) {
+#if 0
   // Extensions are allowed to auto-assign updated keys if the user has not
   // changed from the previous value.
   if (IsCommandShortcutUserModified(extension, command.command_name()))
@@ -593,6 +594,8 @@ bool CommandService::CanAutoAssign(const Command &command,
 
     return !chrome::IsChromeAccelerator(command.accelerator(), profile_);
   }
+#endif
+  return false;
 }
 
 void CommandService::UpdateExtensionSuggestedCommandPrefs(
diff --git a/chrome/browser/extensions/api/debugger/debugger_api.cc b/chrome/browser/extensions/api/debugger/debugger_api.cc
index a163e77..8106ba0 100644
--- a/chrome/browser/extensions/api/debugger/debugger_api.cc
+++ b/chrome/browser/extensions/api/debugger/debugger_api.cc
@@ -24,7 +24,9 @@
 #include "base/strings/string_number_conversions.h"
 #include "base/values.h"
 #include "chrome/browser/chrome_notification_types.h"
+#if 0
 #include "chrome/browser/devtools/chrome_devtools_manager_delegate.h"
+#endif
 #include "chrome/browser/extensions/api/debugger/debugger_api_constants.h"
 #include "chrome/browser/extensions/api/debugger/extension_dev_tools_infobar.h"
 #include "chrome/browser/extensions/extension_service.h"
@@ -551,6 +553,7 @@ void DebuggerSendCommandFunction::SendDetachedError() {
 
 namespace {
 
+#if 0
 const char kTargetIdField[] = "id";
 const char kTargetTypeField[] = "type";
 const char kTargetTitleField[] = "title";
@@ -560,17 +563,21 @@ const char kTargetFaviconUrlField[] = "faviconUrl";
 const char kTargetTabIdField[] = "tabId";
 const char kTargetExtensionIdField[] = "extensionId";
 const char kTargetTypeWorker[] = "worker";
+#endif
 
 std::unique_ptr<base::DictionaryValue> SerializeTarget(
     scoped_refptr<DevToolsAgentHost> host) {
   std::unique_ptr<base::DictionaryValue> dictionary(
       new base::DictionaryValue());
+#if 0
   dictionary->SetString(kTargetIdField, host->GetId());
   dictionary->SetString(kTargetTitleField, host->GetTitle());
   dictionary->SetBoolean(kTargetAttachedField, host->IsAttached());
   dictionary->SetString(kTargetUrlField, host->GetURL().spec());
+#endif
 
   std::string type = host->GetType();
+#if 0
   if (type == DevToolsAgentHost::kTypePage) {
     int tab_id =
         extensions::ExtensionTabUtil::GetTabId(host->GetWebContents());
@@ -583,12 +590,12 @@ std::unique_ptr<base::DictionaryValue> SerializeTarget(
       type == DevToolsAgentHost::kTypeSharedWorker) {
     type = kTargetTypeWorker;
   }
-
   dictionary->SetString(kTargetTypeField, type);
 
   GURL favicon_url = host->GetFaviconURL();
   if (favicon_url.is_valid())
     dictionary->SetString(kTargetFaviconUrlField, favicon_url.spec());
+#endif
 
   return dictionary;
 }
diff --git a/chrome/browser/extensions/api/developer_private/developer_private_api.cc b/chrome/browser/extensions/api/developer_private/developer_private_api.cc
index ce0daf6..5aef9be 100644
--- a/chrome/browser/extensions/api/developer_private/developer_private_api.cc
+++ b/chrome/browser/extensions/api/developer_private/developer_private_api.cc
@@ -229,7 +229,9 @@ std::unique_ptr<developer::ProfileInfo> CreateProfileInfo(Profile* profile) {
   info->in_developer_mode =
       !info->is_supervised &&
       prefs->GetBoolean(prefs::kExtensionsUIDeveloperMode);
+#if 0
   info->app_info_dialog_enabled = CanShowAppInfoDialog();
+#endif
   info->can_load_unpacked =
       !ExtensionManagementFactory::GetForBrowserContext(profile)
           ->BlacklistedByDefault();
diff --git a/chrome/browser/extensions/api/enterprise_reporting_private/chrome_desktop_report_request_helper.cc b/chrome/browser/extensions/api/enterprise_reporting_private/chrome_desktop_report_request_helper.cc
index 4eae3e8..740311b 100644
--- a/chrome/browser/extensions/api/enterprise_reporting_private/chrome_desktop_report_request_helper.cc
+++ b/chrome/browser/extensions/api/enterprise_reporting_private/chrome_desktop_report_request_helper.cc
@@ -66,12 +66,15 @@ std::string GetProfileId(const Profile* profile) {
 // Returns last policy fetch timestamp of machine level user cloud policy if
 // it exists. Otherwise, returns zero.
 int64_t GetMachineLevelUserCloudPolicyFetchTimestamp() {
+#if 0
   policy::MachineLevelUserCloudPolicyManager* manager =
       g_browser_process->browser_policy_connector()
           ->GetMachineLevelUserCloudPolicyManager();
   if (!manager || !manager->IsClientRegistered())
     return 0;
   return manager->core()->client()->last_policy_timestamp().ToJavaTime();
+#endif
+  return 0;
 }
 
 void AppendAdditionalBrowserInformation(em::ChromeDesktopReportRequest* request,
diff --git a/chrome/browser/extensions/api/extension_action/extension_action_api.cc b/chrome/browser/extensions/api/extension_action/extension_action_api.cc
index 0b69a15..70225be 100644
--- a/chrome/browser/extensions/api/extension_action/extension_action_api.cc
+++ b/chrome/browser/extensions/api/extension_action/extension_action_api.cc
@@ -284,12 +284,15 @@ void ExtensionActionAPI::DispatchEventToExtension(
 
 void ExtensionActionAPI::NotifyPageActionsChanged(
     content::WebContents* web_contents) {
+#if 0
   Browser* browser = chrome::FindBrowserWithWebContents(web_contents);
   if (!browser)
     return;
 
   for (auto& observer : observers_)
     observer.OnPageActionsUpdated(web_contents);
+#endif
+  return ;
 }
 
 void ExtensionActionAPI::Shutdown() {
@@ -546,6 +549,7 @@ ExtensionActionGetBadgeBackgroundColorFunction::RunExtensionAction() {
 BrowserActionOpenPopupFunction::BrowserActionOpenPopupFunction() = default;
 
 ExtensionFunction::ResponseAction BrowserActionOpenPopupFunction::Run() {
+#if 0
   // We only allow the popup in the active window.
   Profile* profile = Profile::FromBrowserContext(browser_context());
   Browser* browser = chrome::FindLastActiveWithProfile(profile);
@@ -586,6 +590,7 @@ ExtensionFunction::ResponseAction BrowserActionOpenPopupFunction::Run() {
       FROM_HERE,
       base::BindOnce(&BrowserActionOpenPopupFunction::OpenPopupTimedOut, this),
       base::TimeDelta::FromSeconds(10));
+#endif
   return RespondLater();
 }
 
diff --git a/chrome/browser/extensions/api/font_settings/font_settings_api.cc b/chrome/browser/extensions/api/font_settings/font_settings_api.cc
index e43333db..29daabd 100644
--- a/chrome/browser/extensions/api/font_settings/font_settings_api.cc
+++ b/chrome/browser/extensions/api/font_settings/font_settings_api.cc
@@ -88,10 +88,12 @@ FontSettingsEventRouter::FontSettingsEventRouter(Profile* profile)
   registrar_.Init(profile_->GetPrefs());
 
   // Unretained is safe here because the registrar is owned by this class.
+#if 0
   font_change_registrar_.Register(
       FontPrefChangeNotifierFactory::GetForProfile(profile),
       base::Bind(&FontSettingsEventRouter::OnFontFamilyMapPrefChanged,
                  base::Unretained(this)));
+#endif
 
   AddPrefToObserve(prefs::kWebKitDefaultFixedFontSize,
                    events::FONT_SETTINGS_ON_DEFAULT_FIXED_FONT_SIZE_CHANGED,
diff --git a/chrome/browser/extensions/api/runtime/chrome_runtime_api_delegate.cc b/chrome/browser/extensions/api/runtime/chrome_runtime_api_delegate.cc
index b30736c..9a58ac6 100644
--- a/chrome/browser/extensions/api/runtime/chrome_runtime_api_delegate.cc
+++ b/chrome/browser/extensions/api/runtime/chrome_runtime_api_delegate.cc
@@ -252,11 +252,13 @@ void ChromeRuntimeAPIDelegate::OpenURL(const GURL& uninstall_url) {
   if (!browser)
     browser = new Browser(Browser::CreateParams(profile, false));
 
+#if 0
   NavigateParams params(browser, uninstall_url,
                         ui::PAGE_TRANSITION_CLIENT_REDIRECT);
   params.disposition = WindowOpenDisposition::NEW_FOREGROUND_TAB;
   params.user_gesture = false;
   Navigate(&params);
+#endif
 }
 
 bool ChromeRuntimeAPIDelegate::GetPlatformInfo(PlatformInfo* info) {
diff --git a/chrome/browser/extensions/api/settings_private/settings_private_delegate.cc b/chrome/browser/extensions/api/settings_private/settings_private_delegate.cc
index adf858f..dd10300 100644
--- a/chrome/browser/extensions/api/settings_private/settings_private_delegate.cc
+++ b/chrome/browser/extensions/api/settings_private/settings_private_delegate.cc
@@ -58,16 +58,22 @@ settings_private::SetPrefResult SettingsPrivateDelegate::SetPref(
 }
 
 std::unique_ptr<base::Value> SettingsPrivateDelegate::GetDefaultZoom() {
+#if 0
   double zoom = content::ZoomLevelToZoomFactor(
       profile_->GetZoomLevelPrefs()->GetDefaultZoomLevelPref());
   std::unique_ptr<base::Value> value(new base::Value(zoom));
   return value;
+#endif
+  std::unique_ptr<base::Value> value(new base::Value(0.0));
+  return value;
 }
 
 settings_private::SetPrefResult SettingsPrivateDelegate::SetDefaultZoom(
     double zoom) {
+#if 0
   double zoom_factor = content::ZoomFactorToZoomLevel(zoom);
   profile_->GetZoomLevelPrefs()->SetDefaultZoomLevelPref(zoom_factor);
+#endif
   return settings_private::SetPrefResult::SUCCESS;
 }
 
diff --git a/chrome/browser/extensions/api/tabs/tabs_api.cc b/chrome/browser/extensions/api/tabs/tabs_api.cc
index bac262e..1c7cfae 100644
--- a/chrome/browser/extensions/api/tabs/tabs_api.cc
+++ b/chrome/browser/extensions/api/tabs/tabs_api.cc
@@ -619,6 +619,7 @@ ExtensionFunction::ResponseAction WindowsCreateFunction::Run() {
 
   Browser* new_window = new Browser(create_params);
 
+#if 0
   for (const GURL& url : urls) {
     NavigateParams navigate_params(new_window, url, ui::PAGE_TRANSITION_LINK);
     navigate_params.disposition = WindowOpenDisposition::NEW_FOREGROUND_TAB;
@@ -634,6 +635,7 @@ ExtensionFunction::ResponseAction WindowsCreateFunction::Run() {
 
     Navigate(&navigate_params);
   }
+#endif
 
   WebContents* contents = NULL;
   // Move the tab into the created window only if it's an empty popup or it's
diff --git a/chrome/browser/extensions/api/tabs/tabs_event_router.cc b/chrome/browser/extensions/api/tabs/tabs_event_router.cc
index 05f4274..dc0f913 100644
--- a/chrome/browser/extensions/api/tabs/tabs_event_router.cc
+++ b/chrome/browser/extensions/api/tabs/tabs_event_router.cc
@@ -37,6 +37,7 @@ namespace {
 
 namespace tabs = api::tabs;
 
+#if 0
 bool WillDispatchTabUpdatedEvent(
     WebContents* contents,
     const std::set<std::string> changed_property_names,
@@ -62,6 +63,7 @@ bool WillDispatchTabUpdatedEvent(
   event->event_args->Set(2, std::move(tab_value));
   return true;
 }
+#endif
 
 }  // namespace
 
@@ -133,15 +135,14 @@ void TabsEventRouter::TabEntry::WebContentsDestroyed() {
 }
 
 TabsEventRouter::TabsEventRouter(Profile* profile)
-    : profile_(profile),
-      favicon_scoped_observer_(this),
-      browser_tab_strip_tracker_(this, this, this),
-      tab_manager_scoped_observer_(this) {
+    : profile_(profile) {
   DCHECK(!profile->IsOffTheRecord());
 
+#if 0
   browser_tab_strip_tracker_.Init();
 
   tab_manager_scoped_observer_.Add(g_browser_process->GetTabManager());
+#endif
 }
 
 TabsEventRouter::~TabsEventRouter() {
@@ -153,6 +154,7 @@ bool TabsEventRouter::ShouldTrackBrowser(Browser* browser) {
 }
 
 void TabsEventRouter::RegisterForTabNotifications(WebContents* contents) {
+#if 0
   favicon_scoped_observer_.Add(
       favicon::ContentFaviconDriver::FromWebContents(contents));
 
@@ -161,9 +163,11 @@ void TabsEventRouter::RegisterForTabNotifications(WebContents* contents) {
   int tab_id = ExtensionTabUtil::GetTabId(contents);
   DCHECK(tab_entries_.find(tab_id) == tab_entries_.end());
   tab_entries_[tab_id] = std::make_unique<TabEntry>(this, contents);
+#endif
 }
 
 void TabsEventRouter::UnregisterForTabNotifications(WebContents* contents) {
+#if 0
   favicon_scoped_observer_.Remove(
       favicon::ContentFaviconDriver::FromWebContents(contents));
 
@@ -172,6 +176,7 @@ void TabsEventRouter::UnregisterForTabNotifications(WebContents* contents) {
   int tab_id = ExtensionTabUtil::GetTabId(contents);
   int removed_count = tab_entries_.erase(tab_id);
   DCHECK_GT(removed_count, 0);
+#endif
 }
 
 void TabsEventRouter::OnBrowserSetLastActive(Browser* browser) {
@@ -182,6 +187,7 @@ void TabsEventRouter::OnBrowserSetLastActive(Browser* browser) {
   }
 }
 
+#if 0
 static bool WillDispatchTabCreatedEvent(
     WebContents* contents,
     bool active,
@@ -199,10 +205,12 @@ static bool WillDispatchTabCreatedEvent(
   event->event_args->Append(std::move(tab_value));
   return true;
 }
+#endif
 
 void TabsEventRouter::TabCreatedAt(WebContents* contents,
                                    int index,
                                    bool active) {
+#if 0
   Profile* profile = Profile::FromBrowserContext(contents->GetBrowserContext());
   std::unique_ptr<base::ListValue> args(new base::ListValue);
   auto event = std::make_unique<Event>(events::TABS_ON_CREATED,
@@ -214,12 +222,14 @@ void TabsEventRouter::TabCreatedAt(WebContents* contents,
   EventRouter::Get(profile)->BroadcastEvent(std::move(event));
 
   RegisterForTabNotifications(contents);
+#endif
 }
 
 void TabsEventRouter::TabInsertedAt(TabStripModel* tab_strip_model,
                                     WebContents* contents,
                                     int index,
                                     bool active) {
+#if 0
   if (!GetTabEntry(contents)) {
     // We've never seen this tab, send create event as long as we're not in the
     // constructor.
@@ -246,11 +256,13 @@ void TabsEventRouter::TabInsertedAt(TabStripModel* tab_strip_model,
   Profile* profile = Profile::FromBrowserContext(contents->GetBrowserContext());
   DispatchEvent(profile, events::TABS_ON_ATTACHED, tabs::OnAttached::kEventName,
                 std::move(args), EventRouter::USER_GESTURE_UNKNOWN);
+#endif
 }
 
 void TabsEventRouter::TabDetachedAt(WebContents* contents,
                                     int index,
                                     bool was_active) {
+#if 0
   if (!GetTabEntry(contents)) {
     // The tab was removed. Don't send detach event.
     return;
@@ -271,11 +283,13 @@ void TabsEventRouter::TabDetachedAt(WebContents* contents,
   Profile* profile = Profile::FromBrowserContext(contents->GetBrowserContext());
   DispatchEvent(profile, events::TABS_ON_DETACHED, tabs::OnDetached::kEventName,
                 std::move(args), EventRouter::USER_GESTURE_UNKNOWN);
+#endif
 }
 
 void TabsEventRouter::TabClosingAt(TabStripModel* tab_strip_model,
                                    WebContents* contents,
                                    int index) {
+#if 0
   int tab_id = ExtensionTabUtil::GetTabId(contents);
 
   std::unique_ptr<base::ListValue> args(new base::ListValue);
@@ -294,12 +308,14 @@ void TabsEventRouter::TabClosingAt(TabStripModel* tab_strip_model,
                 std::move(args), EventRouter::USER_GESTURE_UNKNOWN);
 
   UnregisterForTabNotifications(contents);
+#endif
 }
 
 void TabsEventRouter::ActiveTabChanged(WebContents* old_contents,
                                        WebContents* new_contents,
                                        int index,
                                        int reason) {
+#if 0
   auto args = std::make_unique<base::ListValue>();
   int tab_id = ExtensionTabUtil::GetTabId(new_contents);
   args->AppendInteger(tab_id);
@@ -331,11 +347,13 @@ void TabsEventRouter::ActiveTabChanged(WebContents* old_contents,
   DispatchEvent(profile, events::TABS_ON_ACTIVATED,
                 tabs::OnActivated::kEventName, std::move(on_activated_args),
                 gesture);
+#endif
 }
 
 void TabsEventRouter::TabSelectionChanged(
     TabStripModel* tab_strip_model,
     const ui::ListSelectionModel& old_model) {
+#if 0
   ui::ListSelectionModel::SelectedIndices new_selection =
       tab_strip_model->selection_model().selected_indices();
   std::unique_ptr<base::ListValue> all_tabs(new base::ListValue);
@@ -369,11 +387,13 @@ void TabsEventRouter::TabSelectionChanged(
   DispatchEvent(profile, events::TABS_ON_HIGHLIGHTED,
                 tabs::OnHighlighted::kEventName, std::move(args),
                 EventRouter::USER_GESTURE_UNKNOWN);
+#endif
 }
 
 void TabsEventRouter::TabMoved(WebContents* contents,
                                int from_index,
                                int to_index) {
+#if 0
   std::unique_ptr<base::ListValue> args(new base::ListValue);
   args->AppendInteger(ExtensionTabUtil::GetTabId(contents));
 
@@ -391,10 +411,12 @@ void TabsEventRouter::TabMoved(WebContents* contents,
   Profile* profile = Profile::FromBrowserContext(contents->GetBrowserContext());
   DispatchEvent(profile, events::TABS_ON_MOVED, tabs::OnMoved::kEventName,
                 std::move(args), EventRouter::USER_GESTURE_UNKNOWN);
+#endif
 }
 
 void TabsEventRouter::TabUpdated(TabEntry* entry,
                                  std::set<std::string> changed_property_names) {
+#if 0
   bool audible = entry->web_contents()->WasRecentlyAudible();
   if (entry->SetAudible(audible)) {
     changed_property_names.insert(tabs_constants::kAudibleKey);
@@ -409,15 +431,18 @@ void TabsEventRouter::TabUpdated(TabEntry* entry,
     DispatchTabUpdatedEvent(entry->web_contents(),
                             std::move(changed_property_names));
   }
+#endif
 }
 
 void TabsEventRouter::FaviconUrlUpdated(WebContents* contents) {
+#if 0
   content::NavigationEntry* entry = contents->GetController().GetVisibleEntry();
   if (!entry || !entry->GetFavicon().valid)
     return;
   std::set<std::string> changed_property_names;
   changed_property_names.insert(tabs_constants::kFaviconUrlKey);
   DispatchTabUpdatedEvent(contents, std::move(changed_property_names));
+#endif
 }
 
 void TabsEventRouter::DispatchEvent(
@@ -426,6 +451,7 @@ void TabsEventRouter::DispatchEvent(
     const std::string& event_name,
     std::unique_ptr<base::ListValue> args,
     EventRouter::UserGestureState user_gesture) {
+#if 0
   EventRouter* event_router = EventRouter::Get(profile);
   if (!profile_->IsSameProfile(profile) || !event_router)
     return;
@@ -434,11 +460,13 @@ void TabsEventRouter::DispatchEvent(
                                        std::move(args), profile);
   event->user_gesture = user_gesture;
   event_router->BroadcastEvent(std::move(event));
+#endif
 }
 
 void TabsEventRouter::DispatchTabUpdatedEvent(
     WebContents* contents,
     const std::set<std::string> changed_property_names) {
+#if 0
   DCHECK(!changed_property_names.empty());
   DCHECK(contents);
 
@@ -465,6 +493,7 @@ void TabsEventRouter::DispatchTabUpdatedEvent(
       base::Bind(&WillDispatchTabUpdatedEvent, contents,
                  std::move(changed_property_names));
   EventRouter::Get(profile)->BroadcastEvent(std::move(event));
+#endif
 }
 
 TabsEventRouter::TabEntry* TabsEventRouter::GetTabEntry(WebContents* contents) {
@@ -476,17 +505,20 @@ TabsEventRouter::TabEntry* TabsEventRouter::GetTabEntry(WebContents* contents) {
 void TabsEventRouter::TabChangedAt(WebContents* contents,
                                    int index,
                                    TabChangeType change_type) {
+#if 0
   TabEntry* entry = GetTabEntry(contents);
   // TabClosingAt() may have already removed the entry for |contents| even
   // though the tab has not yet been detached.
   if (entry)
     TabUpdated(entry, entry->UpdateLoadState());
+#endif
 }
 
 void TabsEventRouter::TabReplacedAt(TabStripModel* tab_strip_model,
                                     WebContents* old_contents,
                                     WebContents* new_contents,
                                     int index) {
+#if 0
   // Notify listeners that the next tabs closing or being added are due to
   // WebContents being swapped.
   const int new_tab_id = ExtensionTabUtil::GetTabId(new_contents);
@@ -503,18 +535,22 @@ void TabsEventRouter::TabReplacedAt(TabStripModel* tab_strip_model,
 
   if (!GetTabEntry(new_contents))
     RegisterForTabNotifications(new_contents);
+#endif
 }
 
 void TabsEventRouter::TabPinnedStateChanged(TabStripModel* tab_strip_model,
                                             WebContents* contents,
                                             int index) {
+#if 0
   std::set<std::string> changed_property_names;
   changed_property_names.insert(tabs_constants::kPinnedKey);
   DispatchTabUpdatedEvent(contents, std::move(changed_property_names));
+#endif
 }
 
 void TabsEventRouter::OnZoomChanged(
     const ZoomController::ZoomChangedEventData& data) {
+#if 0
   DCHECK(data.web_contents);
   int tab_id = ExtensionTabUtil::GetTabId(data.web_contents);
   if (tab_id < 0)
@@ -537,8 +573,10 @@ void TabsEventRouter::OnZoomChanged(
                 tabs::OnZoomChange::kEventName,
                 api::tabs::OnZoomChange::Create(zoom_change_info),
                 EventRouter::USER_GESTURE_UNKNOWN);
+#endif
 }
 
+#if 0
 void TabsEventRouter::OnFaviconUpdated(
     favicon::FaviconDriver* favicon_driver,
     NotificationIconType notification_icon_type,
@@ -565,5 +603,6 @@ void TabsEventRouter::OnAutoDiscardableStateChange(WebContents* contents,
   changed_property_names.insert(tabs_constants::kAutoDiscardableKey);
   DispatchTabUpdatedEvent(contents, std::move(changed_property_names));
 }
+#endif
 
 }  // namespace extensions
diff --git a/chrome/browser/extensions/api/tabs/tabs_event_router.h b/chrome/browser/extensions/api/tabs/tabs_event_router.h
index d0b11d8..49da235 100644
--- a/chrome/browser/extensions/api/tabs/tabs_event_router.h
+++ b/chrome/browser/extensions/api/tabs/tabs_event_router.h
@@ -37,69 +37,66 @@ namespace extensions {
 // extension process renderers.
 // TabsEventRouter will only route events from windows/tabs within a profile to
 // extension processes in the same profile.
-class TabsEventRouter : public TabStripModelObserver,
-                        public BrowserTabStripTrackerDelegate,
-                        public BrowserListObserver,
-                        public favicon::FaviconDriverObserver,
-                        public zoom::ZoomObserver,
-                        public resource_coordinator::TabLifecycleObserver {
+class TabsEventRouter {
  public:
   explicit TabsEventRouter(Profile* profile);
-  ~TabsEventRouter() override;
+  ~TabsEventRouter();
 
   // BrowserTabStripTrackerDelegate:
-  bool ShouldTrackBrowser(Browser* browser) override;
+  bool ShouldTrackBrowser(Browser* browser);
 
   // BrowserListObserver:
-  void OnBrowserSetLastActive(Browser* browser) override;
+  void OnBrowserSetLastActive(Browser* browser);
 
   // TabStripModelObserver:
   void TabInsertedAt(TabStripModel* tab_strip_model,
                      content::WebContents* contents,
                      int index,
-                     bool active) override;
+                     bool active);
   void TabClosingAt(TabStripModel* tab_strip_model,
                     content::WebContents* contents,
-                    int index) override;
+                    int index);
   void TabDetachedAt(content::WebContents* contents,
                      int index,
-                     bool was_active) override;
+                     bool was_active);
   void ActiveTabChanged(content::WebContents* old_contents,
                         content::WebContents* new_contents,
                         int index,
-                        int reason) override;
+                        int reason);
   void TabSelectionChanged(TabStripModel* tab_strip_model,
-                           const ui::ListSelectionModel& old_model) override;
+                           const ui::ListSelectionModel& old_model);
   void TabMoved(content::WebContents* contents,
                 int from_index,
-                int to_index) override;
+                int to_index);
   void TabChangedAt(content::WebContents* contents,
                     int index,
-                    TabChangeType change_type) override;
+                    TabChangeType change_type);
   void TabReplacedAt(TabStripModel* tab_strip_model,
                      content::WebContents* old_contents,
                      content::WebContents* new_contents,
-                     int index) override;
+                     int index);
   void TabPinnedStateChanged(TabStripModel* tab_strip_model,
                              content::WebContents* contents,
-                             int index) override;
+                             int index);
 
   // ZoomObserver:
   void OnZoomChanged(
-      const zoom::ZoomController::ZoomChangedEventData& data) override;
+      const zoom::ZoomController::ZoomChangedEventData& data);
 
+#if 0
   // favicon::FaviconDriverObserver:
   void OnFaviconUpdated(favicon::FaviconDriver* favicon_driver,
                         NotificationIconType notification_icon_type,
                         const GURL& icon_url,
                         bool icon_url_changed,
-                        const gfx::Image& image) override;
+                        const gfx::Image& image);
 
   // resource_coordinator::TabLifecycleObserver:
   void OnDiscardedStateChange(content::WebContents* contents,
-                              bool is_discarded) override;
+                              bool is_discarded);
   void OnAutoDiscardableStateChange(content::WebContents* contents,
-                                    bool is_auto_discardable) override;
+                                    bool is_auto_discardable);
+#endif
 
  private:
   // "Synthetic" event. Called from TabInsertedAt if new tab is detected.
@@ -203,6 +200,7 @@ class TabsEventRouter : public TabStripModelObserver,
   // The main profile that owns this event router.
   Profile* profile_;
 
+#if 0
   ScopedObserver<favicon::FaviconDriver, TabsEventRouter>
       favicon_scoped_observer_;
 
@@ -210,6 +208,7 @@ class TabsEventRouter : public TabStripModelObserver,
 
   ScopedObserver<resource_coordinator::TabManager, TabsEventRouter>
       tab_manager_scoped_observer_;
+#endif
 
   DISALLOW_COPY_AND_ASSIGN(TabsEventRouter);
 };
diff --git a/chrome/browser/extensions/api/tabs/windows_event_router.cc b/chrome/browser/extensions/api/tabs/windows_event_router.cc
index 7e44121..1ef099e 100644
--- a/chrome/browser/extensions/api/tabs/windows_event_router.cc
+++ b/chrome/browser/extensions/api/tabs/windows_event_router.cc
@@ -163,7 +163,7 @@ WindowsEventRouter::WindowsEventRouter(Profile* profile)
 #elif defined(TOOLKIT_VIEWS)
   views::WidgetFocusManager::GetInstance()->AddFocusChangeListener(this);
 #else
-#error Unsupported
+
 #endif
 
   AppWindowRegistry* registry = AppWindowRegistry::Get(profile_);
diff --git a/chrome/browser/extensions/api/web_navigation/web_navigation_api.cc b/chrome/browser/extensions/api/web_navigation/web_navigation_api.cc
index c52172b..d85d281 100644
--- a/chrome/browser/extensions/api/web_navigation/web_navigation_api.cc
+++ b/chrome/browser/extensions/api/web_navigation/web_navigation_api.cc
@@ -82,7 +82,9 @@ WebNavigationEventRouter::WebNavigationEventRouter(Profile* profile)
                  content::NOTIFICATION_WEB_CONTENTS_DESTROYED,
                  content::NotificationService::AllSources());
 
+#if 0
   browser_tab_strip_tracker_.Init();
+#endif
 }
 
 WebNavigationEventRouter::~WebNavigationEventRouter() {
@@ -373,6 +375,7 @@ void WebNavigationTabObserver::DidOpenRequestedURL(
     ui::PageTransition transition,
     bool started_from_context_menu,
     bool renderer_initiated) {
+#if 0
   if (!navigation_state_.CanSendEvents(source_render_frame_host))
     return;
 
@@ -398,14 +401,18 @@ void WebNavigationTabObserver::DidOpenRequestedURL(
                                source_render_frame_host->GetProcess()->GetID(),
                                source_render_frame_host->GetRoutingID(), url,
                                new_contents, renderer_initiated);
+#endif
 }
 
 void WebNavigationTabObserver::WebContentsDestroyed() {
+#if 0
   g_tab_observer.Get().erase(web_contents());
   registrar_.RemoveAll();
+#endif
 }
 
 void WebNavigationTabObserver::DispatchCachedOnBeforeNavigate() {
+#if 0
   if (!pending_on_before_navigate_event_)
     return;
 
@@ -414,10 +421,12 @@ void WebNavigationTabObserver::DispatchCachedOnBeforeNavigate() {
       EventRouter::Get(web_contents()->GetBrowserContext());
   if (event_router)
     event_router->BroadcastEvent(std::move(pending_on_before_navigate_event_));
+#endif
 }
 
 void WebNavigationTabObserver::HandleCommit(
     content::NavigationHandle* navigation_handle) {
+#if 0
   bool is_reference_fragment_navigation =
       navigation_handle->IsSameDocument() &&
       IsReferenceFragmentNavigation(navigation_handle->GetRenderFrameHost(),
@@ -441,10 +450,12 @@ void WebNavigationTabObserver::HandleCommit(
     event_name = web_navigation::OnCommitted::kEventName;
   }
   helpers::DispatchOnCommitted(histogram_value, event_name, navigation_handle);
+#endif
 }
 
 void WebNavigationTabObserver::HandleError(
     content::NavigationHandle* navigation_handle) {
+#if 0
   if (navigation_handle->HasCommitted()) {
     navigation_state_.StartTrackingDocumentLoad(
         navigation_handle->GetRenderFrameHost(), navigation_handle->GetURL(),
@@ -453,12 +464,14 @@ void WebNavigationTabObserver::HandleError(
   }
 
   helpers::DispatchOnErrorOccurred(navigation_handle);
+#endif
 }
 
 // See also NavigationController::IsURLSameDocumentNavigation.
 bool WebNavigationTabObserver::IsReferenceFragmentNavigation(
     content::RenderFrameHost* render_frame_host,
     const GURL& url) {
+#if 0
   GURL existing_url = navigation_state_.GetUrl(render_frame_host);
   if (existing_url == url)
     return false;
@@ -467,9 +480,12 @@ bool WebNavigationTabObserver::IsReferenceFragmentNavigation(
   replacements.ClearRef();
   return existing_url.ReplaceComponents(replacements) ==
       url.ReplaceComponents(replacements);
+#endif
+  return true;
 }
 
 ExtensionFunction::ResponseAction WebNavigationGetFrameFunction::Run() {
+#if 0
   std::unique_ptr<GetFrame::Params> params(GetFrame::Params::Create(*args_));
   EXTENSION_FUNCTION_VALIDATE(params.get());
   int tab_id = params->details.tab_id;
@@ -507,9 +523,12 @@ ExtensionFunction::ResponseAction WebNavigationGetFrameFunction::Run() {
   frame_details.parent_frame_id =
       ExtensionApiFrameIdMap::GetFrameId(render_frame_host->GetParent());
   return RespondNow(ArgumentList(GetFrame::Results::Create(frame_details)));
+#endif
+    return RespondNow(OneArgument(std::make_unique<base::Value>()));
 }
 
 ExtensionFunction::ResponseAction WebNavigationGetAllFramesFunction::Run() {
+#if 0
   std::unique_ptr<GetAllFrames::Params> params(
       GetAllFrames::Params::Create(*args_));
   EXTENSION_FUNCTION_VALIDATE(params.get());
@@ -546,10 +565,13 @@ ExtensionFunction::ResponseAction WebNavigationGetAllFramesFunction::Run() {
     result_list.push_back(std::move(frame));
   }
   return RespondNow(ArgumentList(GetAllFrames::Results::Create(result_list)));
+#endif
+    return RespondNow(OneArgument(std::make_unique<base::Value>()));
 }
 
 WebNavigationAPI::WebNavigationAPI(content::BrowserContext* context)
     : browser_context_(context) {
+#if 0
   EventRouter* event_router = EventRouter::Get(browser_context_);
   event_router->RegisterObserver(this,
                                  web_navigation::OnBeforeNavigate::kEventName);
@@ -567,13 +589,16 @@ WebNavigationAPI::WebNavigationAPI(content::BrowserContext* context)
       this, web_navigation::OnReferenceFragmentUpdated::kEventName);
   event_router->RegisterObserver(this,
                                  web_navigation::OnTabReplaced::kEventName);
+#endif
 }
 
 WebNavigationAPI::~WebNavigationAPI() {
 }
 
 void WebNavigationAPI::Shutdown() {
+#if 0
   EventRouter::Get(browser_context_)->UnregisterObserver(this);
+#endif
 }
 
 static base::LazyInstance<BrowserContextKeyedAPIFactory<WebNavigationAPI>>::
@@ -586,9 +611,11 @@ WebNavigationAPI::GetFactoryInstance() {
 }
 
 void WebNavigationAPI::OnListenerAdded(const EventListenerInfo& details) {
+#if 0
   web_navigation_event_router_.reset(new WebNavigationEventRouter(
       Profile::FromBrowserContext(browser_context_)));
   EventRouter::Get(browser_context_)->UnregisterObserver(this);
+#endif
 }
 
 }  // namespace extensions
diff --git a/chrome/browser/extensions/browser_context_keyed_service_factories.cc b/chrome/browser/extensions/browser_context_keyed_service_factories.cc
index 631489e..7332963 100644
--- a/chrome/browser/extensions/browser_context_keyed_service_factories.cc
+++ b/chrome/browser/extensions/browser_context_keyed_service_factories.cc
@@ -116,7 +116,9 @@ void EnsureBrowserContextKeyedServiceFactoriesBuilt() {
   extensions::PluginManager::GetFactoryInstance();
 #endif
   extensions::PreferenceAPI::GetFactoryInstance();
+#if 0
   extensions::ProcessesAPI::GetFactoryInstance();
+#endif
 #if defined(OS_CHROMEOS)
   extensions::ScreenlockPrivateEventRouter::GetFactoryInstance();
 #endif
diff --git a/chrome/browser/extensions/chrome_content_browser_client_extensions_part.cc b/chrome/browser/extensions/chrome_content_browser_client_extensions_part.cc
index b2aee377..6f676de 100644
--- a/chrome/browser/extensions/chrome_content_browser_client_extensions_part.cc
+++ b/chrome/browser/extensions/chrome_content_browser_client_extensions_part.cc
@@ -905,8 +905,10 @@ void ChromeContentBrowserClientExtensionsPart::
 
 void ChromeContentBrowserClientExtensionsPart::GetURLRequestAutoMountHandlers(
     std::vector<storage::URLRequestAutoMountHandler>* handlers) {
+#if 0
   handlers->push_back(
       base::Bind(MediaFileSystemBackend::AttemptAutoMountForURLRequest));
+#endif
 }
 
 void ChromeContentBrowserClientExtensionsPart::GetAdditionalFileSystemBackends(
@@ -914,8 +916,10 @@ void ChromeContentBrowserClientExtensionsPart::GetAdditionalFileSystemBackends(
     const base::FilePath& storage_partition_path,
     std::vector<std::unique_ptr<storage::FileSystemBackend>>*
         additional_backends) {
+#if 0
   additional_backends->push_back(
       std::make_unique<MediaFileSystemBackend>(storage_partition_path));
+#endif
 
   additional_backends->push_back(
       std::make_unique<sync_file_system::SyncFileSystemBackend>(
diff --git a/chrome/browser/extensions/component_loader.cc b/chrome/browser/extensions/component_loader.cc
index 0d199af..e986a28 100644
--- a/chrome/browser/extensions/component_loader.cc
+++ b/chrome/browser/extensions/component_loader.cc
@@ -483,7 +483,7 @@ void ComponentLoader::AddDefaultComponentExtensions(
 
   AddDefaultComponentExtensionsWithBackgroundPages(skip_session_components);
 
-#if BUILDFLAG(ENABLE_PLUGINS)
+#if false && BUILDFLAG(ENABLE_PLUGINS)
   Add(pdf_extension_util::GetManifest(),
       base::FilePath(FILE_PATH_LITERAL("pdf")));
 #endif
diff --git a/chrome/browser/extensions/crx_installer.cc b/chrome/browser/extensions/crx_installer.cc
index 738eae1..bd95d57 100644
--- a/chrome/browser/extensions/crx_installer.cc
+++ b/chrome/browser/extensions/crx_installer.cc
@@ -1038,6 +1038,7 @@ void CrxInstaller::ConfirmReEnable() {
   if (!prefs->DidExtensionEscalatePermissions(extension()->id()))
     return;
 
+#if 0
   if (client_) {
     AddRef();  // Balanced in OnInstallPromptDone().
     ExtensionInstallPrompt::PromptType type =
@@ -1048,6 +1049,7 @@ void CrxInstaller::ConfirmReEnable() {
                         std::make_unique<ExtensionInstallPrompt::Prompt>(type),
                         ExtensionInstallPrompt::GetDefaultShowDialogCallback());
   }
+#endif
 }
 
 service_manager::Connector* CrxInstaller::GetConnector() const {
diff --git a/chrome/browser/extensions/default_apps.cc b/chrome/browser/extensions/default_apps.cc
index 642f75c..480a370 100644
--- a/chrome/browser/extensions/default_apps.cc
+++ b/chrome/browser/extensions/default_apps.cc
@@ -32,6 +32,7 @@ bool IsOldDefaultApp(const std::string& extension_id) {
          extension_id == extension_misc::kYoutubeAppId;
 }
 
+#if 0
 bool IsLocaleSupported() {
   // Don't bother installing default apps in locales where it is known that
   // they don't work.
@@ -47,6 +48,7 @@ bool IsLocaleSupported() {
   }
   return true;
 }
+#endif
 
 }  // namespace
 
@@ -57,6 +59,7 @@ void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
 }
 
 bool Provider::ShouldInstallInProfile() {
+#if 0
   // We decide to install or not install default apps based on the following
   // criteria, from highest priority to lowest priority:
   //
@@ -122,6 +125,8 @@ bool Provider::ShouldInstallInProfile() {
   }
 
   return install_apps;
+#endif
+  return false;
 }
 
 Provider::Provider(Profile* profile,
diff --git a/chrome/browser/extensions/extension_commands_global_registry.cc b/chrome/browser/extensions/extension_commands_global_registry.cc
index 5eff2d6..f9e1382 100644
--- a/chrome/browser/extensions/extension_commands_global_registry.cc
+++ b/chrome/browser/extensions/extension_commands_global_registry.cc
@@ -22,6 +22,7 @@ ExtensionCommandsGlobalRegistry::ExtensionCommandsGlobalRegistry(
 }
 
 ExtensionCommandsGlobalRegistry::~ExtensionCommandsGlobalRegistry() {
+#if 0
   if (!IsEventTargetsEmpty()) {
     GlobalShortcutListener* global_shortcut_listener =
         GlobalShortcutListener::GetInstance();
@@ -33,6 +34,7 @@ ExtensionCommandsGlobalRegistry::~ExtensionCommandsGlobalRegistry() {
 
     global_shortcut_listener->UnregisterAccelerators(this);
   }
+#endif
 }
 
 static base::LazyInstance<BrowserContextKeyedAPIFactory<
@@ -62,6 +64,7 @@ bool ExtensionCommandsGlobalRegistry::IsRegistered(
 void ExtensionCommandsGlobalRegistry::AddExtensionKeybindings(
     const extensions::Extension* extension,
     const std::string& command_name) {
+#if 0
   // This object only handles named commands, not browser/page actions.
   if (ShouldIgnoreCommand(command_name))
     return;
@@ -91,21 +94,26 @@ void ExtensionCommandsGlobalRegistry::AddExtensionKeybindings(
 
     AddEventTarget(accelerator, extension->id(), iter->second.command_name());
   }
+#endif
 }
 
 void ExtensionCommandsGlobalRegistry::RemoveExtensionKeybindingImpl(
     const ui::Accelerator& accelerator,
     const std::string& command_name) {
+#if 0
   GlobalShortcutListener::GetInstance()->UnregisterAccelerator(
       accelerator, this);
+#endif
 }
 
 void ExtensionCommandsGlobalRegistry::OnShortcutHandlingSuspended(
     bool suspended) {
+#if 0
   GlobalShortcutListener::GetInstance()->SetShortcutHandlingSuspended(
       suspended);
   if (registry_for_active_window())
     registry_for_active_window()->SetShortcutHandlingSuspended(suspended);
+#endif
 }
 
 void ExtensionCommandsGlobalRegistry::OnKeyPressed(
diff --git a/chrome/browser/extensions/extension_disabled_ui.cc b/chrome/browser/extensions/extension_disabled_ui.cc
index 9b48e12..6f9bdd27 100644
--- a/chrome/browser/extensions/extension_disabled_ui.cc
+++ b/chrome/browser/extensions/extension_disabled_ui.cc
@@ -292,8 +292,10 @@ void ExtensionDisabledGlobalError::BubbleViewCancelButtonPressed(
   // there is only an "OK" button.
   // Supervised users may never remove custodian-installed extensions.
   DCHECK(!util::IsExtensionSupervised(extension_, service_->profile()));
+#if 0
   uninstall_dialog_.reset(ExtensionUninstallDialog::Create(
       service_->profile(), browser->window()->GetNativeWindow(), this));
+#endif
   user_response_ = UNINSTALL;
   // Delay showing the uninstall dialog, so that this function returns
   // immediately, to close the bubble properly. See crbug.com/121544.
diff --git a/chrome/browser/extensions/extension_error_ui_default.cc b/chrome/browser/extensions/extension_error_ui_default.cc
index d2659a4..6e170d4 100644
--- a/chrome/browser/extensions/extension_error_ui_default.cc
+++ b/chrome/browser/extensions/extension_error_ui_default.cc
@@ -19,7 +19,9 @@ ExtensionErrorUIDefault::ExtensionErrorUIDefault(
     ExtensionErrorUI::Delegate* delegate)
     : ExtensionErrorUI(delegate),
       profile_(Profile::FromBrowserContext(delegate->GetContext())),
+#if 0
       browser_(NULL),
+#endif
       global_error_(new ExtensionGlobalError(this)) {
 }
 
@@ -27,18 +29,22 @@ ExtensionErrorUIDefault::~ExtensionErrorUIDefault() {
 }
 
 bool ExtensionErrorUIDefault::ShowErrorInBubbleView() {
+#if 0
   Browser* browser = chrome::FindLastActiveWithProfile(profile_);
   if (!browser)
     return false;
 
   browser_ = browser;
   global_error_->ShowBubbleView(browser);
+#endif
   return true;
 }
 
 void ExtensionErrorUIDefault::ShowExtensions() {
+#if 0
   DCHECK(browser_);
   chrome::ShowExtensions(browser_, std::string());
+#endif
 }
 
 void ExtensionErrorUIDefault::Close() {
diff --git a/chrome/browser/extensions/extension_error_ui_default.h b/chrome/browser/extensions/extension_error_ui_default.h
index 578c655..1e62621 100644
--- a/chrome/browser/extensions/extension_error_ui_default.h
+++ b/chrome/browser/extensions/extension_error_ui_default.h
@@ -56,7 +56,9 @@ class ExtensionErrorUIDefault : public ExtensionErrorUI {
   Profile* profile_;
 
   // The browser the bubble view was shown into.
+#if 0
   Browser* browser_;
+#endif
 
   std::unique_ptr<ExtensionGlobalError> global_error_;
 
diff --git a/chrome/browser/extensions/extension_install_prompt.cc b/chrome/browser/extensions/extension_install_prompt.cc
index 39f524f..30a47bf 100644
--- a/chrome/browser/extensions/extension_install_prompt.cc
+++ b/chrome/browser/extensions/extension_install_prompt.cc
@@ -702,9 +702,11 @@ void ExtensionInstallPrompt::ShowConfirmation() {
   if (AutoConfirmPrompt(&done_callback_))
     return;
 
+#if 0
   if (show_dialog_callback_.is_null())
     show_dialog_callback_ = GetDefaultShowDialogCallback();
   base::ResetAndReturn(&show_dialog_callback_)
       .Run(show_params_.get(), base::ResetAndReturn(&done_callback_),
            std::move(prompt_));
+#endif
 }
diff --git a/chrome/browser/extensions/extension_install_prompt_show_params.cc b/chrome/browser/extensions/extension_install_prompt_show_params.cc
index ab29182..0965b36 100644
--- a/chrome/browser/extensions/extension_install_prompt_show_params.cc
+++ b/chrome/browser/extensions/extension_install_prompt_show_params.cc
@@ -57,8 +57,10 @@ ExtensionInstallPromptShowParams::ExtensionInstallPromptShowParams(
     web_contents_destruction_observer_.reset(
         new WebContentsDestructionObserver(this));
   }
+#if 0
   if (parent_window_)
     native_window_tracker_ = NativeWindowTracker::Create(parent_window_);
+#endif
 }
 
 ExtensionInstallPromptShowParams::ExtensionInstallPromptShowParams(
@@ -68,8 +70,10 @@ ExtensionInstallPromptShowParams::ExtensionInstallPromptShowParams(
     parent_web_contents_(nullptr),
     parent_web_contents_destroyed_(false),
     parent_window_(parent_window) {
+#if 0
   if (parent_window_)
     native_window_tracker_ = NativeWindowTracker::Create(parent_window_);
+#endif
 }
 
 ExtensionInstallPromptShowParams::~ExtensionInstallPromptShowParams() {
diff --git a/chrome/browser/extensions/extension_reenabler.cc b/chrome/browser/extensions/extension_reenabler.cc
index 407166a..21a4912 100644
--- a/chrome/browser/extensions/extension_reenabler.cc
+++ b/chrome/browser/extensions/extension_reenabler.cc
@@ -43,9 +43,12 @@ std::unique_ptr<ExtensionReenabler> ExtensionReenabler::PromptForReenable(
   DCHECK_NE(0, disable_reasons & disable_reason::DISABLE_PERMISSIONS_INCREASE);
 #endif  // DCHECK_IS_ON()
 
+#if 0
   return base::WrapUnique(new ExtensionReenabler(
       extension, browser_context, referrer_url, callback, web_contents,
       ExtensionInstallPrompt::GetDefaultShowDialogCallback()));
+#endif
+  return nullptr;
 }
 
 // static
diff --git a/chrome/browser/extensions/extension_service.cc b/chrome/browser/extensions/extension_service.cc
index 62d1e91..7783a1e 100644
--- a/chrome/browser/extensions/extension_service.cc
+++ b/chrome/browser/extensions/extension_service.cc
@@ -319,7 +319,9 @@ ExtensionService::ExtensionService(Profile* profile,
                  chrome::NOTIFICATION_PROFILE_DESTRUCTION_STARTED,
                  content::Source<Profile>(profile_));
 
+#if 0
   UpgradeDetector::GetInstance()->AddObserver(this);
+#endif
 
   extensions::ExtensionManagementFactory::GetForBrowserContext(profile_)
       ->AddObserver(this);
@@ -368,7 +370,9 @@ extensions::PendingExtensionManager*
 }
 
 ExtensionService::~ExtensionService() {
+#if 0
   UpgradeDetector::GetInstance()->RemoveObserver(this);
+#endif
   // No need to unload extensions here because they are profile-scoped, and the
   // profile is in the process of being deleted.
   for (const auto& provider : external_extension_providers_)
@@ -933,10 +937,12 @@ void ExtensionService::PostActivateExtension(
   }
 
   // Same for chrome://theme/ resources.
+#if 0
   if (permissions_data->HasHostPermission(GURL(chrome::kChromeUIThemeURL))) {
     ThemeSource* theme_source = new ThemeSource(profile_);
     content::URLDataSource::Add(profile_, theme_source);
   }
+#endif
 
   // Same for chrome://thumb/ resources.
   if (permissions_data->HasHostPermission(
diff --git a/chrome/browser/extensions/extension_storage_monitor.cc b/chrome/browser/extensions/extension_storage_monitor.cc
index c9a5e92..13f8d5e 100644
--- a/chrome/browser/extensions/extension_storage_monitor.cc
+++ b/chrome/browser/extensions/extension_storage_monitor.cc
@@ -542,8 +542,10 @@ void ExtensionStorageMonitor::ShowUninstallPrompt(
   if (!extension)
     return;
 
+#if 0
   uninstall_dialog_.reset(
       ExtensionUninstallDialog::Create(profile_, nullptr, this));
+#endif
 
   uninstall_extension_id_ = extension->id();
   uninstall_dialog_->ConfirmUninstall(
diff --git a/chrome/browser/extensions/external_install_error.cc b/chrome/browser/extensions/external_install_error.cc
index 4ac7215..dc2d7a6 100644
--- a/chrome/browser/extensions/external_install_error.cc
+++ b/chrome/browser/extensions/external_install_error.cc
@@ -407,6 +407,7 @@ void ExternalInstallError::DidCloseBubbleView() {
 }
 
 void ExternalInstallError::ShowDialog(Browser* browser) {
+#if 0
   DCHECK(install_ui_.get());
   DCHECK(prompt_.get());
   DCHECK(browser);
@@ -420,6 +421,7 @@ void ExternalInstallError::ShowDialog(Browser* browser) {
       base::Bind(&ExternalInstallError::OnInstallPromptDone,
                  weak_factory_.GetWeakPtr()),
       std::move(prompt_));
+#endif
 }
 
 const Extension* ExternalInstallError::GetExtension() const {
@@ -481,6 +483,7 @@ void ExternalInstallError::OnDialogReady(
     ExtensionInstallPromptShowParams* show_params,
     const ExtensionInstallPrompt::DoneCallback& callback,
     std::unique_ptr<ExtensionInstallPrompt::Prompt> prompt) {
+#if 0
   prompt_ = std::move(prompt);
 
   if (alert_type_ == BUBBLE_ALERT) {
@@ -502,6 +505,7 @@ void ExternalInstallError::OnDialogReady(
     global_error_.reset(new ExternalInstallMenuAlert(this));
     error_service_->AddUnownedGlobalError(global_error_.get());
   }
+#endif
 }
 
 void ExternalInstallError::RemoveError() {
diff --git a/chrome/browser/extensions/navigation_observer.cc b/chrome/browser/extensions/navigation_observer.cc
index 1ca88a7..217270c 100644
--- a/chrome/browser/extensions/navigation_observer.cc
+++ b/chrome/browser/extensions/navigation_observer.cc
@@ -60,6 +60,7 @@ void NavigationObserver::RegisterForNotifications() {
 
 void NavigationObserver::PromptToEnableExtensionIfNecessary(
     NavigationController* nav_controller) {
+#if 0
   // Bail out if we're already running a prompt.
   if (!in_progress_prompt_extension_id_.empty())
     return;
@@ -114,6 +115,8 @@ void NavigationObserver::PromptToEnableExtensionIfNecessary(
         std::make_unique<ExtensionInstallPrompt::Prompt>(type),
         ExtensionInstallPrompt::GetDefaultShowDialogCallback());
   }
+#endif
+  return;
 }
 
 void NavigationObserver::OnInstallPromptDone(
diff --git a/chrome/browser/extensions/plugin_manager.cc b/chrome/browser/extensions/plugin_manager.cc
index 06ddedc..78db39b 100644
--- a/chrome/browser/extensions/plugin_manager.cc
+++ b/chrome/browser/extensions/plugin_manager.cc
@@ -71,7 +71,9 @@ void PluginManager::OnExtensionLoaded(content::BrowserContext* browser_context,
     info.type = content::WebPluginInfo::PLUGIN_TYPE_BROWSER_PLUGIN;
     info.name = base::UTF8ToUTF16(extension->name());
     info.path = handler->GetPluginPath();
+#if 0
     info.background_color = handler->GetBackgroundColor();
+#endif
 
     for (std::set<std::string>::const_iterator mime_type =
          handler->mime_type_set().begin();
diff --git a/chrome/browser/extensions/state_store_notification_observer.cc b/chrome/browser/extensions/state_store_notification_observer.cc
index 8af0541..15ef749 100644
--- a/chrome/browser/extensions/state_store_notification_observer.cc
+++ b/chrome/browser/extensions/state_store_notification_observer.cc
@@ -12,12 +12,13 @@
 namespace extensions {
 
 StateStoreNotificationObserver::StateStoreNotificationObserver(
-    StateStore* state_store)
-    : state_store_(state_store) {
+    StateStore* state_store) {
+#if 0
   on_session_restored_callback_subscription_ =
       SessionRestore::RegisterOnSessionRestoredCallback(
           base::Bind(&StateStoreNotificationObserver::OnSessionRestoreDone,
                      base::Unretained(this)));
+#endif
 }
 
 StateStoreNotificationObserver::~StateStoreNotificationObserver() {
@@ -25,8 +26,10 @@ StateStoreNotificationObserver::~StateStoreNotificationObserver() {
 
 void StateStoreNotificationObserver::OnSessionRestoreDone(
     int /* num_tabs_restored */) {
+#if 0
   on_session_restored_callback_subscription_.reset();
   state_store_->RequestInitAfterDelay();
+#endif
 }
 
 }  // namespace extensions
diff --git a/chrome/browser/extensions/state_store_notification_observer.h b/chrome/browser/extensions/state_store_notification_observer.h
index 8b30127..2296fba 100644
--- a/chrome/browser/extensions/state_store_notification_observer.h
+++ b/chrome/browser/extensions/state_store_notification_observer.h
@@ -24,7 +24,9 @@ class StateStoreNotificationObserver {
   // Called when a session restore has finished.
   void OnSessionRestoreDone(int num_tabs_restored);
 
+#if 0
   StateStore* state_store_;  // Not owned.
+#endif
 
   // Points to the on-session-restored callback that was registered with
   // SessionRestore's callback list. When objects of this class are destroyed,
diff --git a/chrome/browser/extensions/tab_helper.cc b/chrome/browser/extensions/tab_helper.cc
index f25728e8..d398dd0 100644
--- a/chrome/browser/extensions/tab_helper.cc
+++ b/chrome/browser/extensions/tab_helper.cc
@@ -292,10 +292,10 @@ void TabHelper::DidFinishNavigation(
     registry->DidFinishNavigation(web_contents(), navigation_handle);
   });
 
+#if 0
   content::BrowserContext* context = web_contents()->GetBrowserContext();
   ExtensionRegistry* registry = ExtensionRegistry::Get(context);
   const ExtensionSet& enabled_extensions = registry->enabled_extensions();
-
   if (util::IsNewBookmarkAppsEnabled()) {
     Browser* browser = chrome::FindBrowserWithWebContents(web_contents());
     if (browser && browser->is_app()) {
@@ -316,6 +316,7 @@ void TabHelper::DidFinishNavigation(
 
   if (!navigation_handle->IsSameDocument())
     ExtensionActionAPI::Get(context)->ClearAllValuesForTab(web_contents());
+#endif
 }
 
 bool TabHelper::OnMessageReceived(const IPC::Message& message,
diff --git a/chrome/browser/extensions/warning_badge_service.cc b/chrome/browser/extensions/warning_badge_service.cc
index 5ac2f26..cbc54b1 100644
--- a/chrome/browser/extensions/warning_badge_service.cc
+++ b/chrome/browser/extensions/warning_badge_service.cc
@@ -75,7 +75,9 @@ void ErrorBadge::ExecuteMenuItem(Browser* browser) {
   // a badge on the wrench menu in the future of this session.
   badge_service_->SuppressCurrentWarnings();
 
+#if 0
   chrome::ExecuteCommand(browser, IDC_MANAGE_EXTENSIONS);
+#endif
 }
 
 bool ErrorBadge::HasBubbleView() {
diff --git a/chrome/browser/extensions/webstore_inline_installer.cc b/chrome/browser/extensions/webstore_inline_installer.cc
index 0a92703..c0302e9 100644
--- a/chrome/browser/extensions/webstore_inline_installer.cc
+++ b/chrome/browser/extensions/webstore_inline_installer.cc
@@ -43,6 +43,7 @@ const char kNoVerifiedSitesError[] =
 const char kNotFromVerifiedSitesError[] =
     "Installs can only be initiated by one of the Chrome Web Store item's "
     "verified sites.";
+#if 0
 const char kInlineInstallSupportedError[] =
     "Inline installation is not supported for this item. The user will be "
     "redirected to the Chrome Web Store.";
@@ -50,7 +51,7 @@ const char kInitiatedFromPopupError[] =
     "Inline installs can not be initiated from pop-up windows.";
 const char kInitiatedFromFullscreenError[] =
     "Inline installs can not be initiated from fullscreen.";
-
+#endif
 WebstoreInlineInstaller::WebstoreInlineInstaller(
     content::WebContents* web_contents,
     content::RenderFrameHost* host,
@@ -159,8 +160,11 @@ std::string WebstoreInlineInstaller::GetPostData() {
 
 bool WebstoreInlineInstaller::CheckRequestorAlive() const {
   // The frame or tab may have gone away - cancel installation in that case.
+#if 0
   return host_ != nullptr && web_contents() != nullptr &&
          chrome::FindBrowserWithWebContents(web_contents()) != nullptr;
+#endif
+  return false;
 }
 
 const GURL& WebstoreInlineInstaller::GetRequestorURL() const {
@@ -198,6 +202,7 @@ WebContents* WebstoreInlineInstaller::GetWebContents() const {
 bool WebstoreInlineInstaller::CheckInlineInstallPermitted(
     const base::DictionaryValue& webstore_data,
     std::string* error) const {
+#if 0
   Browser* browser = chrome::FindBrowserWithWebContents(web_contents());
   DCHECK(browser);
   if (browser->is_type_popup()) {
@@ -238,6 +243,7 @@ bool WebstoreInlineInstaller::CheckInlineInstallPermitted(
     return false;
   }
   *error = "";
+#endif
   return true;
 }
 
diff --git a/chrome/browser/extensions/webstore_standalone_installer.cc b/chrome/browser/extensions/webstore_standalone_installer.cc
index a4499af..cfdcebb 100644
--- a/chrome/browser/extensions/webstore_standalone_installer.cc
+++ b/chrome/browser/extensions/webstore_standalone_installer.cc
@@ -394,11 +394,13 @@ void WebstoreStandaloneInstaller::ShowInstallUI() {
     return;
   }
 
+#if 0
   install_ui_ = CreateInstallUI();
   install_ui_->ShowDialog(
       base::Bind(&WebstoreStandaloneInstaller::OnInstallPromptDone, this),
       localized_extension.get(), &icon_, std::move(install_prompt_),
       ExtensionInstallPrompt::GetDefaultShowDialogCallback());
+#endif
 }
 
 void WebstoreStandaloneInstaller::OnWebStoreDataFetcherDone() {
diff --git a/chrome/browser/file_select_helper.cc b/chrome/browser/file_select_helper.cc
index 91dc891..8af0916 100644
--- a/chrome/browser/file_select_helper.cc
+++ b/chrome/browser/file_select_helper.cc
@@ -269,10 +269,12 @@ void FileSelectHelper::OnListFile(
 void FileSelectHelper::LaunchConfirmationDialog(
     const base::FilePath& path,
     std::vector<ui::SelectedFileInfo> selected_files) {
+#if 0
   ShowFolderUploadConfirmationDialog(
       path,
       base::BindOnce(&FileSelectHelper::NotifyRenderFrameHostAndEnd, this),
       std::move(selected_files), web_contents_);
+#endif
 }
 
 void FileSelectHelper::OnListDone(int id, int error) {
diff --git a/chrome/browser/guest_view/extension_options/chrome_extension_options_guest_delegate.cc b/chrome/browser/guest_view/extension_options/chrome_extension_options_guest_delegate.cc
index 087013a..c7fa08d 100644
--- a/chrome/browser/guest_view/extension_options/chrome_extension_options_guest_delegate.cc
+++ b/chrome/browser/guest_view/extension_options/chrome_extension_options_guest_delegate.cc
@@ -36,9 +36,12 @@ bool ChromeExtensionOptionsGuestDelegate::HandleContextMenu(
 
 content::WebContents* ChromeExtensionOptionsGuestDelegate::OpenURLInNewTab(
     const content::OpenURLParams& params) {
+#if 0
   Browser* browser = chrome::FindBrowserWithWebContents(
       extension_options_guest()->embedder_web_contents());
   return browser->OpenURL(params);
+#endif
+  return nullptr;
 }
 
 }  // namespace extensions
diff --git a/chrome/browser/media/router/media_router.h b/chrome/browser/media/router/media_router.h
index 85b9f72..29da5c8 100644
--- a/chrome/browser/media/router/media_router.h
+++ b/chrome/browser/media/router/media_router.h
@@ -40,9 +40,7 @@ class MediaRoutesObserver;
 class MediaSinksObserver;
 class PresentationConnectionStateObserver;
 class RouteRequestResult;
-#if !defined(OS_ANDROID)
 class MediaRouteController;
-#endif  // !defined(OS_ANDROID)
 
 // Type of callback used in |CreateRoute()|, |JoinRoute()|, and
 // |ConnectRouteByRouteId()|. Callback is invoked when the route request either
@@ -195,12 +193,10 @@ class MediaRouter : public KeyedService {
   virtual std::unique_ptr<content::MediaController> GetMediaController(
       const MediaRoute::Id& route_id) = 0;
 
-#if !defined(OS_ANDROID)
   // Returns a controller for sending media commands to a route. Returns a
   // nullptr if no MediaRoute exists for the given |route_id|.
   virtual scoped_refptr<MediaRouteController> GetRouteController(
       const MediaRoute::Id& route_id) = 0;
-#endif  // !defined(OS_ANDROID)
 
   // Registers/Unregisters a CastRemotingConnector with the |tab_id|. For a
   // given |tab_id|, only one CastRemotingConnector can be registered. The
@@ -220,9 +216,7 @@ class MediaRouter : public KeyedService {
   friend class MediaRoutesObserver;
   friend class PresentationConnectionStateObserver;
   friend class RouteMessageObserver;
-#if !defined(OS_ANDROID)
   friend class MediaRouteController;
-#endif  // !defined(OS_ANDROID)
 
   // The following functions are called by friend Observer classes above.
 
@@ -268,13 +262,11 @@ class MediaRouter : public KeyedService {
   virtual void UnregisterRouteMessageObserver(
       RouteMessageObserver* observer) = 0;
 
-#if !defined(OS_ANDROID)
   // Removes the MediaRouteController for |route_id| from the list of
   // controllers held by |this|. Called by MediaRouteController when it is
   // invalidated.
   virtual void DetachRouteController(const MediaRoute::Id& route_id,
                                      MediaRouteController* controller) = 0;
-#endif  // !defined(OS_ANDROID)
 };
 
 }  // namespace media_router
diff --git a/chrome/browser/media/router/media_router_base.cc b/chrome/browser/media/router/media_router_base.cc
index 166b4a0..a9cc97c 100644
--- a/chrome/browser/media/router/media_router_base.cc
+++ b/chrome/browser/media/router/media_router_base.cc
@@ -12,9 +12,7 @@
 #include "chrome/browser/chrome_notification_types.h"
 #include "chrome/browser/profiles/profile.h"
 #include "content/public/browser/browser_thread.h"
-#if !defined(OS_ANDROID)
 #include "chrome/browser/media/router/mojo/media_route_controller.h"
-#endif  // !defined(OS_ANDROID)
 
 using blink::mojom::PresentationConnectionState;
 
@@ -91,12 +89,10 @@ std::unique_ptr<content::MediaController> MediaRouterBase::GetMediaController(
   return nullptr;
 }
 
-#if !defined(OS_ANDROID)
 scoped_refptr<MediaRouteController> MediaRouterBase::GetRouteController(
     const MediaRoute::Id& route_id) {
   return nullptr;
 }
-#endif  // !defined(OS_ANDROID)
 
 MediaRouterBase::MediaRouterBase() : initialized_(false) {}
 
@@ -170,10 +166,8 @@ void MediaRouterBase::Shutdown() {
   internal_routes_observer_.reset();
 }
 
-#if !defined(OS_ANDROID)
 void MediaRouterBase::DetachRouteController(const MediaRoute::Id& route_id,
                                             MediaRouteController* controller) {}
-#endif  // !defined(OS_ANDROID)
 
 void MediaRouterBase::RegisterRemotingSource(
     SessionID tab_id,
diff --git a/chrome/browser/media/router/media_router_base.h b/chrome/browser/media/router/media_router_base.h
index 814ac90..fa977433 100644
--- a/chrome/browser/media/router/media_router_base.h
+++ b/chrome/browser/media/router/media_router_base.h
@@ -37,10 +37,10 @@ class MediaRouterBase : public MediaRouter {
   std::vector<MediaRoute> GetCurrentRoutes() const override;
   std::unique_ptr<content::MediaController> GetMediaController(
       const MediaRoute::Id& route_id) override;
-#if !defined(OS_ANDROID)
+
   scoped_refptr<MediaRouteController> GetRouteController(
       const MediaRoute::Id& route_id) override;
-#endif  // !defined(OS_ANDROID)
+
   void RegisterRemotingSource(SessionID tab_id,
                               CastRemotingConnector* remoting_source) override;
   void UnregisterRemotingSource(SessionID tab_id) override;
@@ -107,11 +107,9 @@ class MediaRouterBase : public MediaRouter {
   // KeyedService
   void Shutdown() override;
 
-#if !defined(OS_ANDROID)
   // MediaRouter
   void DetachRouteController(const MediaRoute::Id& route_id,
                              MediaRouteController* controller) override;
-#endif  // !defined(OS_ANDROID)
 
   IssueManager issue_manager_;
 
diff --git a/chrome/browser/media/router/media_router_feature.cc b/chrome/browser/media/router/media_router_feature.cc
index 757f08d..52cdb5f 100644
--- a/chrome/browser/media/router/media_router_feature.cc
+++ b/chrome/browser/media/router/media_router_feature.cc
@@ -23,10 +23,11 @@
 
 namespace media_router {
 
-#if !defined(OS_ANDROID)
+#if 0
 // Controls if browser side DialMediaRouteProvider is enabled.
 const base::Feature kDialMediaRouteProvider{"DialMediaRouteProvider",
                                             base::FEATURE_DISABLED_BY_DEFAULT};
+#endif
 
 // Controls if browser side Cast device discovery is enabled.
 const base::Feature kEnableCastDiscovery{"EnableCastDiscovery",
@@ -35,8 +36,6 @@ const base::Feature kEnableCastDiscovery{"EnableCastDiscovery",
 const base::Feature kCastMediaRouteProvider{"CastMediaRouteProvider",
                                             base::FEATURE_DISABLED_BY_DEFAULT};
 
-#endif
-
 #if defined(OS_ANDROID) || BUILDFLAG(ENABLE_EXTENSIONS)
 namespace {
 const PrefService::Preference* GetMediaRouterPref(
diff --git a/chrome/browser/media/router/media_router_feature.h b/chrome/browser/media/router/media_router_feature.h
index 4b78665..912dca5 100644
--- a/chrome/browser/media/router/media_router_feature.h
+++ b/chrome/browser/media/router/media_router_feature.h
@@ -19,8 +19,6 @@ namespace media_router {
 // Returns true if Media Router is enabled for |context|.
 bool MediaRouterEnabled(content::BrowserContext* context);
 
-#if !defined(OS_ANDROID)
-
 namespace prefs {
 // Pref name for the enterprise policy for allowing Cast devices on all IPs.
 constexpr char kMediaRouterCastAllowAllIPs[] =
@@ -58,8 +56,6 @@ bool CastMediaRouteProviderEnabled();
 // TODO(crbug.com/802332): Remove this when mac_views_browser=1 by default.
 bool PresentationReceiverWindowEnabled();
 
-#endif  // !defined(OS_ANDROID)
-
 }  // namespace media_router
 
 #endif  // CHROME_BROWSER_MEDIA_ROUTER_MEDIA_ROUTER_FEATURE_H_
diff --git a/chrome/browser/plugins/plugins_resource_service.cc b/chrome/browser/plugins/plugins_resource_service.cc
index 6f49c3d..eaaa0e1 100644
--- a/chrome/browser/plugins/plugins_resource_service.cc
+++ b/chrome/browser/plugins/plugins_resource_service.cc
@@ -52,7 +52,7 @@ const int kStartResourceFetchDelayMs = 60 * 1000;
 const int kCacheUpdateDelayMs = 24 * 60 * 60 * 1000;
 
 const char kPluginsServerUrl[] =
-    "https://www.gstatic.com/chrome/config/plugins_3/";
+    "https://plugins.kiwibrowser.com/chrome/config/plugins_3/";
 
 GURL GetPluginsServerURL() {
   std::string filename;
@@ -65,7 +65,7 @@ GURL GetPluginsServerURL() {
 #elif defined(OS_MACOSX)
   filename = "plugins_mac.json";
 #else
-#error Unknown platform
+  filename = "plugins_linux.json";
 #endif
 
   return GURL(kPluginsServerUrl + filename);
diff --git a/chrome/browser/prefs/browser_prefs.cc b/chrome/browser/prefs/browser_prefs.cc
index 0229dbb..b4192b0 100644
--- a/chrome/browser/prefs/browser_prefs.cc
+++ b/chrome/browser/prefs/browser_prefs.cc
@@ -482,7 +482,7 @@ void RegisterLocalState(PrefRegistrySimple* registry) {
   registry->RegisterBooleanPref(kResetHasSeenWin10PromoPage, false);
 #endif
 
-#if defined(TOOLKIT_VIEWS)
+#if false && defined(TOOLKIT_VIEWS)
   RegisterBrowserViewLocalPrefs(registry);
 #endif
 }
@@ -545,7 +545,7 @@ void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
   UINetworkQualityEstimatorService::RegisterProfilePrefs(registry);
   ZeroSuggestProvider::RegisterProfilePrefs(registry);
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   ExtensionWebUI::RegisterProfilePrefs(registry);
   RegisterAnimationPolicyPrefs(registry);
   ToolbarActionsBar::RegisterProfilePrefs(registry);
@@ -672,7 +672,7 @@ void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
   safe_browsing::PostCleanupSettingsResetter::RegisterProfilePrefs(registry);
 #endif
 
-#if defined(TOOLKIT_VIEWS)
+#if false && defined(TOOLKIT_VIEWS)
   RegisterBrowserViewProfilePrefs(registry);
   RegisterInvertBubbleUserPrefs(registry);
 #endif
diff --git a/chrome/browser/safe_browsing/safe_browsing_controller_client.cc b/chrome/browser/safe_browsing/safe_browsing_controller_client.cc
index 33d978c..34c72a5 100644
--- a/chrome/browser/safe_browsing/safe_browsing_controller_client.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_controller_client.cc
@@ -30,7 +30,7 @@ SafeBrowsingControllerClient::SafeBrowsingControllerClient(
 SafeBrowsingControllerClient::~SafeBrowsingControllerClient() {}
 
 void SafeBrowsingControllerClient::Proceed() {
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   // Hosted Apps should not be allowed to run if Safe Browsing considers them
   // dangeours. So, when users click proceed on an interstitial, move the tab
   // to a regular Chrome window and proceed as usual there.
diff --git a/chrome/browser/search/instant_service.h b/chrome/browser/search/instant_service.h
index 561a3e4..4fc36f2 100644
--- a/chrome/browser/search/instant_service.h
+++ b/chrome/browser/search/instant_service.h
@@ -25,7 +25,7 @@
 #include "content/public/browser/notification_registrar.h"
 #include "url/gurl.h"
 
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
 #error "Instant is only used on desktop";
 #endif
 
diff --git a/chrome/browser/search/instant_service_factory.h b/chrome/browser/search/instant_service_factory.h
index 2db314b..01c3103 100644
--- a/chrome/browser/search/instant_service_factory.h
+++ b/chrome/browser/search/instant_service_factory.h
@@ -10,7 +10,7 @@
 #include "build/build_config.h"
 #include "components/keyed_service/content/browser_context_keyed_service_factory.h"
 
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
 #error "Instant is only used on desktop";
 #endif
 
diff --git a/chrome/browser/speech/extension_api/tts_engine_extension_api.cc b/chrome/browser/speech/extension_api/tts_engine_extension_api.cc
index c512d93..6c72ee6 100644
--- a/chrome/browser/speech/extension_api/tts_engine_extension_api.cc
+++ b/chrome/browser/speech/extension_api/tts_engine_extension_api.cc
@@ -67,6 +67,7 @@ void WarnIfMissingPauseOrResumeListener(
       constants::kErrorMissingPauseOrResume);
 }
 
+#if 0
 const std::vector<extensions::TtsVoice>* GetVoicesInternal(
     content::BrowserContext* context,
     const extensions::Extension* extension) {
@@ -76,6 +77,7 @@ const std::vector<extensions::TtsVoice>* GetVoicesInternal(
           extension->id());
   return voices ? voices : extensions::TtsVoices::GetTtsVoices(extension);
 }
+#endif
 
 }  // namespace
 
@@ -85,6 +87,7 @@ TtsExtensionEngine* TtsExtensionEngine::GetInstance() {
 
 void TtsExtensionEngine::GetVoices(content::BrowserContext* browser_context,
     std::vector<VoiceData>* out_voices) {
+#if 0
   Profile* profile = Profile::FromBrowserContext(browser_context);
   EventRouter* event_router = EventRouter::Get(profile);
   DCHECK(event_router);
@@ -148,10 +151,12 @@ void TtsExtensionEngine::GetVoices(content::BrowserContext* browser_context,
       }
     }
   }
+#endif
 }
 
 void TtsExtensionEngine::Speak(Utterance* utterance,
                                const VoiceData& voice) {
+#if 0
   // See if the engine supports the "end" event; if so, we can keep the
   // utterance around and track it. If not, we're finished with this
   // utterance now.
@@ -213,6 +218,7 @@ void TtsExtensionEngine::Speak(Utterance* utterance,
       std::move(args), profile);
   EventRouter::Get(profile)
       ->DispatchEventToExtension(utterance->extension_id(), std::move(event));
+#endif
 }
 
 void TtsExtensionEngine::Stop(Utterance* utterance) {
@@ -273,6 +279,7 @@ bool TtsExtensionEngine::LoadBuiltInTtsExtension(
 
 ExtensionFunction::ResponseAction
 ExtensionTtsEngineUpdateVoicesFunction::Run() {
+#if 0
   base::ListValue* voices_data = nullptr;
   EXTENSION_FUNCTION_VALIDATE(args_->GetList(0, &voices_data));
   auto tts_voices = std::make_unique<extensions::TtsVoices>();
@@ -330,12 +337,13 @@ ExtensionTtsEngineUpdateVoicesFunction::Run() {
 
   if (error)
     return RespondNow(Error(error));
-
+#endif
   return RespondNow(NoArguments());
 }
 
 ExtensionFunction::ResponseAction
 ExtensionTtsEngineSendTtsEventFunction::Run() {
+#if 0
   int utterance_id = 0;
   EXTENSION_FUNCTION_VALIDATE(args_->GetInteger(0, &utterance_id));
 
@@ -400,6 +408,6 @@ ExtensionTtsEngineSendTtsEventFunction::Run() {
   } else {
     EXTENSION_FUNCTION_VALIDATE(false);
   }
-
+#endif
   return RespondNow(NoArguments());
 }
diff --git a/chrome/browser/speech/extension_api/tts_extension_api.cc b/chrome/browser/speech/extension_api/tts_extension_api.cc
index abb1463..9606f21 100644
--- a/chrome/browser/speech/extension_api/tts_extension_api.cc
+++ b/chrome/browser/speech/extension_api/tts_extension_api.cc
@@ -29,6 +29,7 @@ const char kOnEvent[] = "tts.onEvent";
 };  // namespace events
 
 const char *TtsEventTypeToString(TtsEventType event_type) {
+#if 0
   switch (event_type) {
     case TTS_EVENT_START:
       return constants::kEventTypeStart;
@@ -52,11 +53,15 @@ const char *TtsEventTypeToString(TtsEventType event_type) {
       return constants::kEventTypeResume;
     default:
       NOTREACHED();
+#endif
       return constants::kEventTypeError;
+#if 0
   }
+#endif
 }
 
 TtsEventType TtsEventTypeFromString(const std::string& str) {
+#if 0
   if (str == constants::kEventTypeStart)
     return TTS_EVENT_START;
   if (str == constants::kEventTypeEnd)
@@ -79,6 +84,7 @@ TtsEventType TtsEventTypeFromString(const std::string& str) {
     return TTS_EVENT_RESUME;
 
   NOTREACHED();
+#endif
   return TTS_EVENT_ERROR;
 }
 
@@ -152,6 +158,7 @@ void TtsExtensionEventHandler::OnTtsEvent(Utterance* utterance,
 }
 
 bool TtsSpeakFunction::RunAsync() {
+#if 0
   std::string text;
   EXTENSION_FUNCTION_VALIDATE(args_->GetString(0, &text));
   if (text.size() > 32768) {
@@ -291,6 +298,7 @@ bool TtsSpeakFunction::RunAsync() {
 
   TtsController* controller = TtsController::GetInstance();
   controller->SpeakOrEnqueue(utterance);
+#endif
   return true;
 }
 
@@ -315,6 +323,7 @@ ExtensionFunction::ResponseAction TtsIsSpeakingFunction::Run() {
 }
 
 ExtensionFunction::ResponseAction TtsGetVoicesFunction::Run() {
+#if 0
   std::vector<VoiceData> voices;
   TtsController::GetInstance()->GetVoices(browser_context(), &voices);
 
@@ -346,6 +355,8 @@ ExtensionFunction::ResponseAction TtsGetVoicesFunction::Run() {
   }
 
   return RespondNow(OneArgument(std::move(result_voices)));
+#endif
+  return nullptr;
 }
 
 TtsAPI::TtsAPI(content::BrowserContext* context) {
diff --git a/chrome/browser/ssl/ssl_error_controller_client.cc b/chrome/browser/ssl/ssl_error_controller_client.cc
index ee226e9..67491c6 100644
--- a/chrome/browser/ssl/ssl_error_controller_client.cc
+++ b/chrome/browser/ssl/ssl_error_controller_client.cc
@@ -185,7 +185,7 @@ void SSLErrorControllerClient::Proceed() {
 
   MaybeTriggerSecurityInterstitialProceededEvent(web_contents_, request_url_,
                                                  "SSL_ERROR", cert_error_);
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   // Hosted Apps should not be allowed to run if there is a problem with their
   // certificate. So, when users click proceed on an interstitial, move the tab
   // to a regular Chrome window and proceed as usual there.
diff --git a/chrome/browser/ssl/ssl_error_navigation_throttle.cc b/chrome/browser/ssl/ssl_error_navigation_throttle.cc
index baf3d61..b4d7419 100644
--- a/chrome/browser/ssl/ssl_error_navigation_throttle.cc
+++ b/chrome/browser/ssl/ssl_error_navigation_throttle.cc
@@ -12,7 +12,7 @@
 #include "content/public/browser/navigation_handle.h"
 #include "net/cert/cert_status_flags.h"
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
 #include "chrome/browser/ui/browser.h"
 #include "chrome/browser/ui/browser_commands.h"
 #include "chrome/browser/ui/browser_finder.h"
@@ -75,7 +75,7 @@ SSLErrorNavigationThrottle::WillProcessResponse() {
     return content::NavigationThrottle::PROCEED;
   }
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   // Hosted Apps should not be allowed to run if there is a problem with their
   // certificate. So, when a user tries to open such an app, we show an
   // interstitial, even if the user has previously clicked through one. Clicking
diff --git a/chrome/browser/ui/BUILD.gn b/chrome/browser/ui/BUILD.gn
index 3b9eb8d..4a57550 100644
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -1228,6 +1228,59 @@ split_static_library("ui") {
       "webui/webapks_handler.h",
       "webui/webapks_ui.cc",
       "webui/webapks_ui.h",
+      "global_error/global_error.cc",
+      "global_error/global_error.h",
+      "global_error/global_error_bubble_view_base.h",
+      "global_error/global_error_service.cc",
+      "global_error/global_error_service.h",
+      "global_error/global_error_service_factory.cc",
+      "global_error/global_error_service_factory.h",
+      "tabs/tab_strip_model_observer.cc",
+      "tabs/tab_strip_model_observer.h",
+      "bookmarks/enhanced_bookmark_key_service.cc",
+      "bookmarks/enhanced_bookmark_key_service.h",
+      "bookmarks/enhanced_bookmark_key_service_factory.cc",
+      "bookmarks/enhanced_bookmark_key_service_factory.h",
+      "browser_list.cc",
+      "browser_list.h",
+      "tab_contents/tab_contents_iterator.cc",
+      "tab_contents/tab_contents_iterator.h",
+      "tabs/hover_tab_selector.cc",
+      "tabs/hover_tab_selector.h",
+      "tabs/pinned_tab_codec.cc",
+      "tabs/pinned_tab_codec.h",
+      "tabs/pinned_tab_service.cc",
+      "tabs/pinned_tab_service.h",
+      "tabs/pinned_tab_service_factory.cc",
+      "tabs/pinned_tab_service_factory.h",
+      "tabs/tab_change_type.h",
+      "tabs/tab_menu_model.cc",
+      "tabs/tab_menu_model.h",
+      "tabs/tab_network_state.cc",
+      "tabs/tab_network_state.h",
+      "tabs/tab_strip_model.cc",
+      "tabs/tab_strip_model.h",
+      "tabs/tab_strip_model_delegate.cc",
+      "tabs/tab_strip_model_delegate.h",
+      "tabs/tab_strip_model_order_controller.cc",
+      "tabs/tab_strip_model_order_controller.h",
+      "tabs/tab_strip_model_stats_recorder.cc",
+      "tabs/tab_strip_model_stats_recorder.h",
+      "tabs/tab_utils.cc",
+      "tabs/tab_utils.h",
+      "tabs/window_activity_watcher.cc",
+      "tabs/window_activity_watcher.h",
+      "browser.cc",
+      "browser.h",
+      "browser_finder.cc",
+      "browser_finder.h",
+      "content_settings/content_setting_bubble_model.cc",
+      "content_settings/content_setting_bubble_model.h",
+      "content_settings/content_setting_bubble_model_delegate.h",
+      "content_settings/content_setting_image_model.cc",
+      "content_settings/content_setting_image_model.h",
+      "browser_instant_controller.cc",
+      "browser_instant_controller.h",
     ]
     deps += [
       "//chrome/browser:jni_headers",
@@ -1240,6 +1293,8 @@ split_static_library("ui") {
       "//device/usb/public/mojom",
       "//device/vr/buildflags",
       "//ui/android",
+      "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
+      "//chrome/browser/resource_coordinator/tab_ranker",
     ]
   } else {
     # !is_android
@@ -1273,24 +1328,12 @@ split_static_library("ui") {
       "bookmarks/bookmark_tab_helper_delegate.h",
       "bookmarks/bookmark_utils_desktop.cc",
       "bookmarks/bookmark_utils_desktop.h",
-      "bookmarks/enhanced_bookmark_key_service.cc",
-      "bookmarks/enhanced_bookmark_key_service.h",
-      "bookmarks/enhanced_bookmark_key_service_factory.cc",
-      "bookmarks/enhanced_bookmark_key_service_factory.h",
-      "browser.cc",
-      "browser.h",
       "browser_command_controller.cc",
       "browser_command_controller.h",
       "browser_commands.cc",
       "browser_commands.h",
       "browser_content_setting_bubble_model_delegate.cc",
       "browser_content_setting_bubble_model_delegate.h",
-      "browser_finder.cc",
-      "browser_finder.h",
-      "browser_instant_controller.cc",
-      "browser_instant_controller.h",
-      "browser_list.cc",
-      "browser_list.h",
       "browser_list_observer.h",
       "browser_live_tab_context.cc",
       "browser_live_tab_context.h",
@@ -1325,11 +1368,6 @@ split_static_library("ui") {
       "collected_cookies_infobar_delegate.h",
       "confirm_bubble_model.cc",
       "confirm_bubble_model.h",
-      "content_settings/content_setting_bubble_model.cc",
-      "content_settings/content_setting_bubble_model.h",
-      "content_settings/content_setting_bubble_model_delegate.h",
-      "content_settings/content_setting_image_model.cc",
-      "content_settings/content_setting_image_model.h",
       "exclusive_access/exclusive_access_bubble.cc",
       "exclusive_access/exclusive_access_bubble.h",
       "exclusive_access/exclusive_access_bubble_hide_callback.h",
@@ -1356,13 +1394,6 @@ split_static_library("ui") {
       "find_bar/find_bar_platform_helper.cc",
       "find_bar/find_bar_platform_helper.h",
       "find_bar/find_bar_platform_helper_mac.mm",
-      "global_error/global_error.cc",
-      "global_error/global_error.h",
-      "global_error/global_error_bubble_view_base.h",
-      "global_error/global_error_service.cc",
-      "global_error/global_error_service.h",
-      "global_error/global_error_service_factory.cc",
-      "global_error/global_error_service_factory.h",
       "hung_renderer/hung_renderer_core.cc",
       "hung_renderer/hung_renderer_core.h",
       "javascript_dialogs/javascript_dialog_views.cc",
@@ -1478,37 +1509,8 @@ split_static_library("ui") {
       "sync/browser_synced_window_delegates_getter.h",
       "sync/sync_promo_ui.cc",
       "sync/sync_promo_ui.h",
-      "tab_contents/tab_contents_iterator.cc",
-      "tab_contents/tab_contents_iterator.h",
       "tab_modal_confirm_dialog_delegate.cc",
       "tab_modal_confirm_dialog_delegate.h",
-      "tabs/hover_tab_selector.cc",
-      "tabs/hover_tab_selector.h",
-      "tabs/pinned_tab_codec.cc",
-      "tabs/pinned_tab_codec.h",
-      "tabs/pinned_tab_service.cc",
-      "tabs/pinned_tab_service.h",
-      "tabs/pinned_tab_service_factory.cc",
-      "tabs/pinned_tab_service_factory.h",
-      "tabs/tab_change_type.h",
-      "tabs/tab_menu_model.cc",
-      "tabs/tab_menu_model.h",
-      "tabs/tab_network_state.cc",
-      "tabs/tab_network_state.h",
-      "tabs/tab_strip_model.cc",
-      "tabs/tab_strip_model.h",
-      "tabs/tab_strip_model_delegate.cc",
-      "tabs/tab_strip_model_delegate.h",
-      "tabs/tab_strip_model_observer.cc",
-      "tabs/tab_strip_model_observer.h",
-      "tabs/tab_strip_model_order_controller.cc",
-      "tabs/tab_strip_model_order_controller.h",
-      "tabs/tab_strip_model_stats_recorder.cc",
-      "tabs/tab_strip_model_stats_recorder.h",
-      "tabs/tab_utils.cc",
-      "tabs/tab_utils.h",
-      "tabs/window_activity_watcher.cc",
-      "tabs/window_activity_watcher.h",
       "task_manager/task_manager_columns.cc",
       "task_manager/task_manager_columns.h",
       "task_manager/task_manager_table_model.cc",
@@ -1717,8 +1719,6 @@ split_static_library("ui") {
       "//chrome/browser:theme_properties",
       "//chrome/browser/media/router",
       "//chrome/browser/profile_resetter:profile_reset_report_proto",
-      "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
-      "//chrome/browser/resource_coordinator/tab_ranker",
       "//chrome/common:buildflags",
       "//chrome/common:search_mojom",
       "//components/feedback/proto",
@@ -3138,8 +3138,8 @@ split_static_library("ui") {
         "views/ime/ime_warning_bubble_view.h",
         "views/infobars/alternate_nav_infobar_view.cc",
         "views/infobars/alternate_nav_infobar_view.h",
-        "views/infobars/confirm_infobar.cc",
-        "views/infobars/confirm_infobar.h",
+#        "views/infobars/confirm_infobar.cc",
+#        "views/infobars/confirm_infobar.h",
         "views/infobars/infobar_container_view.cc",
         "views/infobars/infobar_container_view.h",
         "views/infobars/infobar_view.cc",
diff --git a/chrome/browser/ui/bookmarks/enhanced_bookmark_key_service.cc b/chrome/browser/ui/bookmarks/enhanced_bookmark_key_service.cc
index 2429324..04135b5 100644
--- a/chrome/browser/ui/bookmarks/enhanced_bookmark_key_service.cc
+++ b/chrome/browser/ui/bookmarks/enhanced_bookmark_key_service.cc
@@ -45,6 +45,7 @@ void EnhancedBookmarkKeyService::Observe(
   if (payload->extension_id == enhanced_bookmark_extension->id())
     return;
 
+#if 0
   ui::Accelerator key = extensions::Command::StringToAccelerator(
       payload->accelerator, payload->command_name);
   ui::Accelerator bookmark_accelerator =
@@ -63,6 +64,7 @@ void EnhancedBookmarkKeyService::Observe(
           false);
     }
   }
+#endif
 }
 
 const extensions::Extension*
diff --git a/chrome/browser/ui/browser.cc b/chrome/browser/ui/browser.cc
index 9604d34..5ceedebb 100644
--- a/chrome/browser/ui/browser.cc
+++ b/chrome/browser/ui/browser.cc
@@ -131,7 +131,9 @@
 #include "chrome/browser/ui/javascript_dialogs/javascript_dialog_tab_helper.h"
 #include "chrome/browser/ui/location_bar/location_bar.h"
 #include "chrome/browser/ui/permission_bubble/chooser_bubble_delegate.h"
+#if 0
 #include "chrome/browser/ui/search/search_tab_helper.h"
+#endif
 #include "chrome/browser/ui/singleton_tabs.h"
 #include "chrome/browser/ui/status_bubble.h"
 #include "chrome/browser/ui/sync/browser_synced_window_delegate.h"
@@ -602,7 +604,10 @@ bool Browser::is_app() const {
 }
 
 bool Browser::is_devtools() const {
+#if 0
   return app_name_ == DevToolsWindow::kDevToolsApp;
+#endif
+  return false;
 }
 
 ///////////////////////////////////////////////////////////////////////////////
@@ -1041,7 +1046,9 @@ void Browser::TabDetachedAt(WebContents* contents, int index, bool was_active) {
 
 void Browser::TabDeactivated(WebContents* contents) {
   exclusive_access_manager_->OnTabDeactivated(contents);
+#if 0
   SearchTabHelper::FromWebContents(contents)->OnTabDeactivated();
+#endif
 
   // Save what the user's currently typing, so it can be restored when we
   // switch back to this tab.
@@ -1131,7 +1138,9 @@ void Browser::ActiveTabChanged(WebContents* old_contents,
                                        base::TimeTicks::Now());
   }
 
+#if 0
   SearchTabHelper::FromWebContents(new_contents)->OnTabActivated();
+#endif
 }
 
 void Browser::TabMoved(WebContents* contents,
diff --git a/chrome/browser/ui/browser.h b/chrome/browser/ui/browser.h
index f1e35a4..099152a 100644
--- a/chrome/browser/ui/browser.h
+++ b/chrome/browser/ui/browser.h
@@ -54,7 +54,7 @@
 #include "chrome/browser/ui/signin_view_controller.h"
 #endif
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
 #include "components/zoom/zoom_observer.h"
 #endif  // !defined(OS_ANDROID)
 
@@ -114,7 +114,7 @@ class Browser : public TabStripModelObserver,
                 public CoreTabHelperDelegate,
                 public ChromeWebModalDialogManagerDelegate,
                 public BookmarkTabHelperDelegate,
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
                 public zoom::ZoomObserver,
 #endif  // !defined(OS_ANDROID)
                 public content::PageNavigator,
@@ -724,7 +724,7 @@ class Browser : public TabStripModelObserver,
   void URLStarredChanged(content::WebContents* web_contents,
                          bool starred) override;
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
   // Overridden from ZoomObserver:
   void OnZoomChanged(
       const zoom::ZoomController::ZoomChangedEventData& data) override;
diff --git a/chrome/browser/ui/browser_commands.cc b/chrome/browser/ui/browser_commands.cc
index 005e8e4..71293bd 100644
--- a/chrome/browser/ui/browser_commands.cc
+++ b/chrome/browser/ui/browser_commands.cc
@@ -180,7 +180,7 @@ bool CanBookmarkCurrentPageInternal(const Browser* browser,
            !chrome::ShouldRemoveBookmarkThisPageUI(browser->profile()));
 }
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
 bool GetBookmarkOverrideCommand(Profile* profile,
                                 const extensions::Extension** extension,
                                 extensions::Command* command) {
@@ -484,7 +484,7 @@ void Home(Browser* browser, WindowOpenDisposition disposition) {
 
   GURL url = browser->profile()->GetHomePage();
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   // With bookmark apps enabled, hosted apps should return to their launch page
   // when the home button is pressed.
   if (browser->is_app()) {
@@ -532,7 +532,7 @@ void OpenCurrentURL(Browser* browser) {
       TabStripModel::ADD_FORCE_INDEX | TabStripModel::ADD_INHERIT_OPENER;
   Navigate(&params);
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   DCHECK(extensions::ExtensionSystem::Get(
       browser->profile())->extension_service());
   const extensions::Extension* extension =
@@ -796,7 +796,7 @@ void BookmarkCurrentPageIgnoringExtensionOverrides(Browser* browser) {
 void BookmarkCurrentPageAllowingExtensionOverrides(Browser* browser) {
   DCHECK(!chrome::ShouldRemoveBookmarkThisPageUI(browser->profile()));
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   const extensions::Extension* extension = NULL;
   extensions::Command command;
   if (GetBookmarkOverrideCommand(browser->profile(), &extension, &command)) {
@@ -1218,7 +1218,7 @@ bool CanViewSource(const Browser* browser) {
           CanViewSource();
 }
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
 void CreateBookmarkAppFromCurrentWebContents(Browser* browser) {
   base::RecordAction(UserMetricsAction("CreateHostedApp"));
   extensions::TabHelper::FromWebContents(
diff --git a/chrome/browser/ui/browser_instant_controller.h b/chrome/browser/ui/browser_instant_controller.h
index 4d10545..6a51909 100644
--- a/chrome/browser/ui/browser_instant_controller.h
+++ b/chrome/browser/ui/browser_instant_controller.h
@@ -13,7 +13,7 @@
 #include "chrome/browser/search/search_engine_base_url_tracker.h"
 #include "chrome/browser/ui/search/instant_controller.h"
 
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
 #error "Instant is only used on desktop";
 #endif
 
diff --git a/chrome/browser/ui/browser_list.cc b/chrome/browser/ui/browser_list.cc
index 6db6830..9d727db 100644
--- a/chrome/browser/ui/browser_list.cc
+++ b/chrome/browser/ui/browser_list.cc
@@ -122,7 +122,9 @@ void BrowserList::RemoveBrowser(Browser* browser) {
     // shutdown, because Browser::WindowClosing() already makes sure that the
     // SessionService is created and notified.
     browser_shutdown::NotifyAppTerminating();
+#if 0
     chrome::OnAppExiting();
+#endif
   }
 }
 
diff --git a/chrome/browser/ui/browser_navigator_params.cc b/chrome/browser/ui/browser_navigator_params.cc
index 50fe09a..8639092 100644
--- a/chrome/browser/ui/browser_navigator_params.cc
+++ b/chrome/browser/ui/browser_navigator_params.cc
@@ -9,7 +9,7 @@
 #include "content/public/browser/page_navigator.h"
 #include "content/public/browser/web_contents.h"
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
 #include "chrome/browser/ui/browser.h"
 #endif
 
@@ -17,7 +17,7 @@ using content::GlobalRequestID;
 using content::NavigationController;
 using content::WebContents;
 
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
 NavigateParams::NavigateParams(std::unique_ptr<WebContents> contents_to_insert)
     : contents_to_insert(std::move(contents_to_insert)) {}
 #else
diff --git a/chrome/browser/ui/browser_navigator_params.h b/chrome/browser/ui/browser_navigator_params.h
index f67a79e..138da62 100644
--- a/chrome/browser/ui/browser_navigator_params.h
+++ b/chrome/browser/ui/browser_navigator_params.h
@@ -55,7 +55,7 @@ struct OpenURLParams;
 
 // TODO(thestig): Split or ifdef out more fields that are not used on Android.
 struct NavigateParams {
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
   explicit NavigateParams(
       std::unique_ptr<content::WebContents> contents_to_insert);
 #else
@@ -208,7 +208,7 @@ struct NavigateParams {
   };
   PathBehavior path_behavior = RESPECT;
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
   // [in]  Specifies a Browser object where the navigation could occur or the
   //       tab could be added. Navigate() is not obliged to use this Browser if
   //       it is not compatible with the operation being performed. This can be
diff --git a/chrome/browser/ui/content_settings/content_setting_bubble_model.h b/chrome/browser/ui/content_settings/content_setting_bubble_model.h
index 7970768..1e5ac7a 100644
--- a/chrome/browser/ui/content_settings/content_setting_bubble_model.h
+++ b/chrome/browser/ui/content_settings/content_setting_bubble_model.h
@@ -481,7 +481,7 @@ class ContentSettingSingleRadioGroup : public ContentSettingSimpleBubbleModel {
   DISALLOW_COPY_AND_ASSIGN(ContentSettingSingleRadioGroup);
 };
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
 // The model for the blocked Framebust bubble.
 class ContentSettingFramebustBlockBubbleModel
     : public ContentSettingSingleRadioGroup,
diff --git a/chrome/browser/ui/extensions/application_launch.cc b/chrome/browser/ui/extensions/application_launch.cc
index 8b95a3e..2415b846 100644
--- a/chrome/browser/ui/extensions/application_launch.cc
+++ b/chrome/browser/ui/extensions/application_launch.cc
@@ -155,6 +155,7 @@ GURL UrlForExtension(const extensions::Extension* extension,
   return url;
 }
 
+#if 0
 ui::WindowShowState DetermineWindowShowState(
     Profile* profile,
     extensions::LaunchContainer container,
@@ -178,9 +179,11 @@ ui::WindowShowState DetermineWindowShowState(
 
   return ui::SHOW_STATE_DEFAULT;
 }
+#endif
 
 WebContents* OpenApplicationTab(const AppLaunchParams& launch_params,
                            const GURL& url) {
+#if 0
   const Extension* extension = GetExtension(launch_params);
   CHECK(extension);
   Profile* const profile = launch_params.profile;
@@ -261,6 +264,8 @@ WebContents* OpenApplicationTab(const AppLaunchParams& launch_params,
   }
 #endif  // OS_CHROMEOS
   return contents;
+#endif
+  return NULL;
 }
 
 WebContents* OpenEnabledApplication(const AppLaunchParams& params) {
@@ -339,6 +344,7 @@ WebContents* OpenApplication(const AppLaunchParams& params) {
 
 WebContents* OpenApplicationWindow(const AppLaunchParams& params,
                                    const GURL& url) {
+#if 0
   Profile* const profile = params.profile;
   const Extension* const extension = GetExtension(params);
 
@@ -388,6 +394,8 @@ WebContents* OpenApplicationWindow(const AppLaunchParams& params,
   //                focus explicitly.
   web_contents->SetInitialFocus();
   return web_contents;
+#endif
+  return NULL;
 }
 
 void OpenApplicationWithReenablePrompt(const AppLaunchParams& params) {
diff --git a/chrome/browser/ui/extensions/extension_install_ui_default.cc b/chrome/browser/ui/extensions/extension_install_ui_default.cc
index 2307b0c..633e846 100644
--- a/chrome/browser/ui/extensions/extension_install_ui_default.cc
+++ b/chrome/browser/ui/extensions/extension_install_ui_default.cc
@@ -44,6 +44,7 @@ using extensions::Extension;
 
 namespace {
 
+#if 0
 Browser* FindOrCreateVisibleBrowser(Profile* profile) {
   // TODO(mpcomplete): remove this workaround for http://crbug.com/244246
   // after fixing http://crbug.com/38676.
@@ -63,19 +64,19 @@ void ShowExtensionInstalledBubble(const extensions::Extension* extension,
   if (browser)
     ExtensionInstalledBubble::ShowBubble(extension, browser, icon);
 }
+#endif
 
 }  // namespace
 
 ExtensionInstallUIDefault::ExtensionInstallUIDefault(
     content::BrowserContext* context)
-    : profile_(Profile::FromBrowserContext(context)),
-      skip_post_install_ui_(false),
-      use_app_installed_bubble_(false) {}
+    : profile_(Profile::FromBrowserContext(context)) {}
 
 ExtensionInstallUIDefault::~ExtensionInstallUIDefault() {}
 
 void ExtensionInstallUIDefault::OnInstallSuccess(const Extension* extension,
                                                  const SkBitmap* icon) {
+#if 0
   if (disable_ui_for_tests() || skip_post_install_ui_ || extension->is_theme())
     return;
 
@@ -110,10 +111,12 @@ void ExtensionInstallUIDefault::OnInstallSuccess(const Extension* extension,
   }
 
   ShowExtensionInstalledBubble(extension, current_profile, *icon);
+#endif
 }
 
 void ExtensionInstallUIDefault::OnInstallFailure(
     const extensions::CrxInstallError& error) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   if (disable_ui_for_tests() || skip_post_install_ui_)
     return;
@@ -127,10 +130,11 @@ void ExtensionInstallUIDefault::OnInstallFailure(
     return;
   InstallationErrorInfoBarDelegate::Create(
       InfoBarService::FromWebContents(web_contents), error);
+#endif
 }
 
 void ExtensionInstallUIDefault::OpenAppInstalledUI(const std::string& app_id) {
-#if defined(OS_CHROMEOS)
+#if true || defined(OS_CHROMEOS)
   // Notification always enabled on ChromeOS, so always handled in
   // OnInstallSuccess.
   NOTREACHED();
@@ -151,19 +155,25 @@ void ExtensionInstallUIDefault::OpenAppInstalledUI(const std::string& app_id) {
 }
 
 void ExtensionInstallUIDefault::SetUseAppInstalledBubble(bool use_bubble) {
+#if 0
   use_app_installed_bubble_ = use_bubble;
+#endif
 }
 
 void ExtensionInstallUIDefault::SetSkipPostInstallUI(bool skip_ui) {
+#if 0
   skip_post_install_ui_ = skip_ui;
+#endif
 }
 
 gfx::NativeWindow ExtensionInstallUIDefault::GetDefaultInstallDialogParent() {
+#if 0
   Browser* browser = chrome::FindLastActiveWithProfile(profile_);
   if (browser) {
     content::WebContents* contents =
         browser->tab_strip_model()->GetActiveWebContents();
     return contents->GetTopLevelNativeWindow();
   }
+#endif
   return NULL;
 }
diff --git a/chrome/browser/ui/extensions/extension_install_ui_default.h b/chrome/browser/ui/extensions/extension_install_ui_default.h
index 2586f2e..36ea58e 100644
--- a/chrome/browser/ui/extensions/extension_install_ui_default.h
+++ b/chrome/browser/ui/extensions/extension_install_ui_default.h
@@ -33,11 +33,11 @@ class ExtensionInstallUIDefault : public extensions::ExtensionInstallUI {
   Profile* profile_;
 
   // Whether or not to show the default UI after completing the installation.
-  bool skip_post_install_ui_;
+//  bool skip_post_install_ui_;
 
   // Whether to show an installed bubble on app install, or use the default
   // action of opening a new tab page.
-  bool use_app_installed_bubble_;
+//  bool use_app_installed_bubble_;
 
   DISALLOW_COPY_AND_ASSIGN(ExtensionInstallUIDefault);
 };
diff --git a/chrome/browser/ui/global_error/global_error.cc b/chrome/browser/ui/global_error/global_error.cc
index 039ded9..66fcb04 100644
--- a/chrome/browser/ui/global_error/global_error.cc
+++ b/chrome/browser/ui/global_error/global_error.cc
@@ -50,9 +50,11 @@ bool GlobalErrorWithStandardBubble::HasShownBubbleView() {
 }
 
 void GlobalErrorWithStandardBubble::ShowBubbleView(Browser* browser) {
+#if 0
   has_shown_bubble_view_ = true;
   bubble_view_ =
       GlobalErrorBubbleViewBase::ShowStandardBubbleView(browser, AsWeakPtr());
+#endif
 }
 
 GlobalErrorBubbleViewBase* GlobalErrorWithStandardBubble::GetBubbleView() {
diff --git a/chrome/browser/ui/search/instant_controller.h b/chrome/browser/ui/search/instant_controller.h
index 200f8ee6..2aa36ac 100644
--- a/chrome/browser/ui/search/instant_controller.h
+++ b/chrome/browser/ui/search/instant_controller.h
@@ -13,7 +13,7 @@
 #include "build/build_config.h"
 #include "chrome/browser/ui/tabs/tab_strip_model_observer.h"
 
-#if defined(OS_ANDROID)
+#if false && defined(OS_ANDROID)
 #error "Instant is only used on desktop";
 #endif
 
diff --git a/chrome/browser/ui/toolbar/toolbar_actions_model.cc b/chrome/browser/ui/toolbar/toolbar_actions_model.cc
index 11f6d77..d96ca03 100644
--- a/chrome/browser/ui/toolbar/toolbar_actions_model.cc
+++ b/chrome/browser/ui/toolbar/toolbar_actions_model.cc
@@ -50,8 +50,10 @@ ToolbarActionsModel::ToolbarActionsModel(
       extension_registry_(extensions::ExtensionRegistry::Get(profile_)),
       extension_action_manager_(
           extensions::ExtensionActionManager::Get(profile_)),
+#if 0
       component_actions_factory_(
           std::make_unique<ComponentToolbarActionsFactory>(profile_)),
+#endif
       actions_initialized_(false),
       highlight_type_(HIGHLIGHT_NONE),
       has_active_bubble_(false),
@@ -189,11 +191,14 @@ ToolbarActionsModel::CreateActionForItem(Browser* browser,
           extension_action_manager_->GetExtensionAction(*extension), bar);
       break;
     }
+#if 0
     case COMPONENT_ACTION: {
       result = component_actions_factory_->GetComponentToolbarActionForId(
           item.id, browser, bar);
       break;
     }
+#endif
+    case COMPONENT_ACTION:
     case UNKNOWN_ACTION:
       NOTREACHED();  // Should never have an UNKNOWN_ACTION in toolbar_items.
       break;
@@ -432,7 +437,9 @@ ToolbarActionsModel::GetExtensionMessageBubbleController(Browser* browser) {
 
 void ToolbarActionsModel::SetMockActionsFactoryForTest(
     std::unique_ptr<ComponentToolbarActionsFactory> mock_factory) {
+#if 0
   component_actions_factory_ = std::move(mock_factory);
+#endif
 }
 
 void ToolbarActionsModel::RemoveExtension(
@@ -459,6 +466,7 @@ void ToolbarActionsModel::InitializeActionList() {
 }
 
 void ToolbarActionsModel::Populate() {
+#if 0
   DCHECK(!profile_->IsOffTheRecord());
 
   std::vector<ToolbarItem> all_actions;
@@ -601,6 +609,7 @@ void ToolbarActionsModel::Populate() {
                                  ? base::HistogramBase::kSampleType_MAX
                                  : visible_icon_count_);
   }
+#endif
 }
 
 bool ToolbarActionsModel::HasItem(const ToolbarItem& item) const {
@@ -613,21 +622,24 @@ bool ToolbarActionsModel::HasComponentAction(
 }
 
 void ToolbarActionsModel::AddComponentAction(const std::string& action_id) {
+#if 0
   if (!actions_initialized_) {
     component_actions_factory_->OnAddComponentActionBeforeInit(action_id);
     return;
   }
-
+#endif
   ToolbarItem component_item(action_id, COMPONENT_ACTION);
   DCHECK(!HasItem(component_item));
   AddItem(component_item);
 }
 
 void ToolbarActionsModel::RemoveComponentAction(const std::string& action_id) {
+#if 0
   if (!actions_initialized_) {
     component_actions_factory_->OnRemoveComponentActionBeforeInit(action_id);
     return;
   }
+#endif
   // If the action was visible and there are overflowed actions, we reduce the
   // visible count so that we don't pop out a previously-hidden action.
   if (IsActionVisible(action_id) && !all_icons_visible())
@@ -640,6 +652,7 @@ void ToolbarActionsModel::RemoveComponentAction(const std::string& action_id) {
 }
 
 void ToolbarActionsModel::IncognitoPopulate() {
+#if 0
   DCHECK(profile_->IsOffTheRecord());
   const ToolbarActionsModel* original_model =
       ToolbarActionsModel::Get(profile_->GetOriginalProfile());
@@ -680,9 +693,11 @@ void ToolbarActionsModel::IncognitoPopulate() {
     if (iter - original_model->toolbar_items_.begin() < original_visible)
       ++visible_icon_count_;
   }
+#endif
 }
 
 void ToolbarActionsModel::UpdatePrefs() {
+#if 0
   if (!extension_prefs_ || profile_->IsOffTheRecord())
     return;
 
@@ -691,10 +706,12 @@ void ToolbarActionsModel::UpdatePrefs() {
   extension_prefs_->SetToolbarOrder(last_known_positions_);
   pref_change_registrar_.Add(extensions::pref_names::kToolbar,
                              pref_change_callback_);
+#endif
 }
 
 void ToolbarActionsModel::SetActionVisibility(const std::string& action_id,
                                               bool is_now_visible) {
+#if 0
   // Hiding works differently with the new and old toolbars.
   DCHECK(HasItem(ToolbarItem(action_id, EXTENSION_ACTION)));
 
@@ -716,9 +733,11 @@ void ToolbarActionsModel::SetActionVisibility(const std::string& action_id,
   }
   SetVisibleIconCount(new_size);
   MoveActionIcon(action_id, new_index);
+#endif
 }
 
 void ToolbarActionsModel::OnActionToolbarPrefChange() {
+#if 0
   // If extensions are not ready, defer to later Populate() call.
   if (!actions_initialized_)
     return;
@@ -768,10 +787,12 @@ void ToolbarActionsModel::OnActionToolbarPrefChange() {
         FROM_HERE, base::BindOnce(&ToolbarActionsModel::UpdatePrefs,
                                   weak_ptr_factory_.GetWeakPtr()));
   }
+#endif
 }
 
 bool ToolbarActionsModel::HighlightActions(const std::vector<std::string>& ids,
                                            HighlightType highlight_type) {
+#if 0
   highlighted_items_.clear();
 
   for (const std::string& action_id : ids) {
@@ -803,10 +824,12 @@ bool ToolbarActionsModel::HighlightActions(const std::vector<std::string>& ids,
   // we were otherwise in it).
   if (is_highlighting())
     StopHighlighting();
+#endif
   return false;
 }
 
 void ToolbarActionsModel::StopHighlighting() {
+#if 0
   if (is_highlighting()) {
     // It's important that |highlight_type_| is changed immediately before the
     // observers are notified since it changes the result of toolbar_items().
@@ -826,6 +849,7 @@ void ToolbarActionsModel::StopHighlighting() {
     if (saved_icon_count != visible_icon_count_)
       SetVisibleIconCount(saved_icon_count);
   }
+#endif
 }
 
 const extensions::Extension* ToolbarActionsModel::GetExtensionById(
diff --git a/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc b/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
index 4ad61d2d..24380b5 100644
--- a/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
+++ b/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc
@@ -429,8 +429,10 @@ WebUIFactoryFunction GetWebUIFactoryFunction(WebUI* web_ui,
   // Settings are implemented with native UI elements on Android.
   if (url.host_piece() == chrome::kChromeUISettingsHost)
     return &NewWebUI<settings::MdSettingsUI>;
+#if 0
   if (url.host_piece() == chrome::kChromeUIExtensionsHost)
     return &NewWebUI<extensions::ExtensionsUI>;
+#endif
   if (url.host_piece() == chrome::kChromeUIHistoryHost)
     return &NewWebUI<MdHistoryUI>;
   if (url.host_piece() == chrome::kChromeUISyncFileSystemInternalsHost)
@@ -563,7 +565,7 @@ WebUIFactoryFunction GetWebUIFactoryFunction(WebUI* web_ui,
   }
 #endif
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   if (url.host_piece() == chrome::kChromeUIExtensionsFrameHost)
     return &NewWebUI<extensions::ExtensionsUI>;
 #endif
@@ -815,7 +817,7 @@ base::RefCountedMemory* ChromeWebUIControllerFactory::GetFaviconResourceBytes(
   if (page_url.host_piece() == chrome::kChromeUISettingsHost)
     return settings_utils::GetFaviconResourceBytes(scale_factor);
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if false && BUILDFLAG(ENABLE_EXTENSIONS)
   if (page_url.host_piece() == chrome::kChromeUIExtensionsHost ||
       page_url.host_piece() == chrome::kChromeUIExtensionsFrameHost) {
     return extensions::ExtensionsUI::GetFaviconResourceBytes(scale_factor);
diff --git a/chrome/browser/web_applications/web_app.cc b/chrome/browser/web_applications/web_app.cc
index 9a680cc..71d22f6 100644
--- a/chrome/browser/web_applications/web_app.cc
+++ b/chrome/browser/web_applications/web_app.cc
@@ -79,10 +79,12 @@ void UpdateAllShortcutsForShortcutInfo(
     const base::Closure& callback,
     std::unique_ptr<web_app::ShortcutInfo> shortcut_info) {
   base::FilePath shortcut_data_dir = GetShortcutDataDir(*shortcut_info);
+#if 0
   web_app::ShortcutInfo::PostIOTaskAndReply(
       base::BindOnce(&web_app::internals::UpdatePlatformShortcuts,
                      shortcut_data_dir, old_app_title),
       std::move(shortcut_info), callback);
+#endif
 }
 
 void OnImageLoaded(std::unique_ptr<web_app::ShortcutInfo> shortcut_info,
@@ -115,11 +117,13 @@ void ScheduleCreatePlatformShortcut(
     const web_app::ShortcutLocations& locations,
     std::unique_ptr<web_app::ShortcutInfo> shortcut_info) {
   base::FilePath shortcut_data_dir = GetShortcutDataDir(*shortcut_info);
+#if 0
   web_app::ShortcutInfo::PostIOTask(
       base::BindOnce(
           base::IgnoreResult(&web_app::internals::CreatePlatformShortcuts),
           shortcut_data_dir, locations, reason),
       std::move(shortcut_info));
+#endif
 }
 
 void DeleteShortcutInfoOnUIThread(
@@ -434,9 +438,11 @@ void DeleteAllShortcuts(Profile* profile, const extensions::Extension* app) {
   std::unique_ptr<ShortcutInfo> shortcut_info(
       ShortcutInfoForExtensionAndProfile(app, profile));
   base::FilePath shortcut_data_dir = GetShortcutDataDir(*shortcut_info);
+#if 0
   ShortcutInfo::PostIOTask(
       base::BindOnce(&internals::DeletePlatformShortcuts, shortcut_data_dir),
       std::move(shortcut_info));
+#endif
 }
 
 void UpdateAllShortcuts(const base::string16& old_app_title,
diff --git a/chrome/common/chrome_features.cc b/chrome/common/chrome_features.cc
index 99648f0..2591f04 100644
--- a/chrome/common/chrome_features.cc
+++ b/chrome/common/chrome_features.cc
@@ -303,11 +303,9 @@ const base::Feature kHappinessTrackingSystem {
     "HappinessTrackingSystem", base::FEATURE_DISABLED_BY_DEFAULT};
 #endif
 
-#if !defined(OS_ANDROID)
 // Replaces the WebUI Cast dialog with a Views toolkit one.
 const base::Feature kViewsCastDialog{"ViewsCastDialog",
                                      base::FEATURE_DISABLED_BY_DEFAULT};
-#endif  // !defined(OS_ANDROID)
 
 const base::Feature kImportantSitesInCbd{"ImportantSitesInCBD",
                                          base::FEATURE_DISABLED_BY_DEFAULT};
@@ -324,11 +322,9 @@ const base::Feature kIncompatibleApplicationsWarning{
     "IncompatibleApplicationsWarning", base::FEATURE_DISABLED_BY_DEFAULT};
 #endif
 
-#if !defined(OS_ANDROID)
 // Enables Casting a Presentation API-enabled website to a secondary display.
 const base::Feature kLocalScreenCasting{"LocalScreenCasting",
                                         base::FEATURE_ENABLED_BY_DEFAULT};
-#endif
 
 // Enables or disables the Location Settings Dialog (LSD). The LSD is an Android
 // system-level geolocation permission prompt.
diff --git a/chrome/common/chrome_features.h b/chrome/common/chrome_features.h
index bb41fa8..c3c2e46 100644
--- a/chrome/common/chrome_features.h
+++ b/chrome/common/chrome_features.h
@@ -171,9 +171,7 @@ extern const base::Feature kGrantNotificationsToDSE;
 extern const base::Feature kHappinessTrackingSystem;
 #endif
 
-#if !defined(OS_ANDROID)
 extern const base::Feature kViewsCastDialog;
-#endif
 
 extern const base::Feature kImportantSitesInCbd;
 
@@ -183,9 +181,7 @@ extern const base::Feature kImprovedRecoveryComponent;
 extern const base::Feature kIncompatibleApplicationsWarning;
 #endif
 
-#if !defined(OS_ANDROID)
 extern const base::Feature kLocalScreenCasting;
-#endif
 
 extern const base::Feature kLsdPermissionPrompt;
 
diff --git a/chrome/common/chrome_paths.cc b/chrome/common/chrome_paths.cc
index 49b56bd..d1db945 100644
--- a/chrome/common/chrome_paths.cc
+++ b/chrome/common/chrome_paths.cc
@@ -526,7 +526,7 @@ bool PathProvider(int key, base::FilePath* result) {
 #endif
       break;
 
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_ANDROID)
     case chrome::DIR_NATIVE_MESSAGING:
 #if defined(OS_MACOSX)
 #if defined(GOOGLE_CHROME_BUILD)
diff --git a/chrome/common/chrome_paths.h b/chrome/common/chrome_paths.h
index c9c3a3f..8504fe4 100644
--- a/chrome/common/chrome_paths.h
+++ b/chrome/common/chrome_paths.h
@@ -111,7 +111,7 @@ enum {
   DIR_SUPERVISED_USER_INSTALLED_WHITELISTS,  // Directory where sanitized
                                              // supervised user whitelists are
                                              // installed.
-#if defined(OS_LINUX) || defined(OS_MACOSX)
+#if defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_ANDROID)
   DIR_NATIVE_MESSAGING,         // System directory where native messaging host
                                 // manifest files are stored.
   DIR_USER_NATIVE_MESSAGING,    // Directory with Native Messaging Hosts
diff --git a/chrome/common/pref_names.cc b/chrome/common/pref_names.cc
index 9f69113..10497ea 100644
--- a/chrome/common/pref_names.cc
+++ b/chrome/common/pref_names.cc
@@ -1007,7 +1007,7 @@ const char kContentSettingsPluginWhitelist[] =
     "profile.content_settings.plugin_whitelist";
 #endif
 
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
 // Double that indicates the default zoom level.
 const char kPartitionDefaultZoomLevel[] = "partition.default_zoom_level";
 
diff --git a/chrome/common/pref_names.h b/chrome/common/pref_names.h
index 0c669b7..7642037 100644
--- a/chrome/common/pref_names.h
+++ b/chrome/common/pref_names.h
@@ -337,7 +337,7 @@ extern const char kUseCustomChromeFrame[];
 #if BUILDFLAG(ENABLE_PLUGINS)
 extern const char kContentSettingsPluginWhitelist[];
 #endif
-#if !defined(OS_ANDROID)
+#if true || !defined(OS_ANDROID)
 extern const char kPartitionDefaultZoomLevel[];
 extern const char kPartitionPerHostZoomLevels[];
 
diff --git a/chrome/renderer/extensions/renderer_permissions_policy_delegate.cc b/chrome/renderer/extensions/renderer_permissions_policy_delegate.cc
index e37362c..522c0ac 100644
--- a/chrome/renderer/extensions/renderer_permissions_policy_delegate.cc
+++ b/chrome/renderer/extensions/renderer_permissions_policy_delegate.cc
@@ -17,7 +17,7 @@ namespace extensions {
 namespace errors = manifest_errors;
 
 RendererPermissionsPolicyDelegate::RendererPermissionsPolicyDelegate(
-    Dispatcher* dispatcher) : dispatcher_(dispatcher) {
+    Dispatcher* dispatcher) {
   PermissionsData::SetPolicyDelegate(this);
 }
 RendererPermissionsPolicyDelegate::~RendererPermissionsPolicyDelegate() {
@@ -27,6 +27,7 @@ RendererPermissionsPolicyDelegate::~RendererPermissionsPolicyDelegate() {
 bool RendererPermissionsPolicyDelegate::IsRestrictedUrl(
     const GURL& document_url,
     std::string* error) {
+#if 0
   if (dispatcher_->IsExtensionActive(kWebStoreAppId)) {
     if (error)
       *error = errors::kCannotScriptGallery;
@@ -38,7 +39,7 @@ bool RendererPermissionsPolicyDelegate::IsRestrictedUrl(
       *error = errors::kCannotScriptNtp;
     return true;
   }
-
+#endif
   return false;
 }
 
diff --git a/chrome/renderer/extensions/renderer_permissions_policy_delegate.h b/chrome/renderer/extensions/renderer_permissions_policy_delegate.h
index cbe1b33..ef87f16 100644
--- a/chrome/renderer/extensions/renderer_permissions_policy_delegate.h
+++ b/chrome/renderer/extensions/renderer_permissions_policy_delegate.h
@@ -23,7 +23,9 @@ class RendererPermissionsPolicyDelegate
   bool IsRestrictedUrl(const GURL& document_url, std::string* error) override;
 
  private:
+#if 0
   Dispatcher* dispatcher_;
+#endif
 
   DISALLOW_COPY_AND_ASSIGN(RendererPermissionsPolicyDelegate);
 };
diff --git a/chrome/test/BUILD.gn b/chrome/test/BUILD.gn
index 6051a5d..028068d 100644
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -2218,2233 +2218,6 @@ if (is_mac) {
   }
 }
 
-test("unit_tests") {
-  sources = [
-    # enums.xml is analyzed by AboutFlagsHistogramTest, so this
-    # dependency is needed to make commit bots run unit_tests on
-    # enums.xml changes.
-    "../../tools/metrics/histograms/enums.xml",
-
-    # All unittests in browser, common, renderer and service.
-    "../browser/about_flags_unittest.cc",
-    "../browser/active_use_util_unittest.cc",
-    "../browser/after_startup_task_utils_unittest.cc",
-    "../browser/android/bookmarks/partner_bookmarks_shim_unittest.cc",
-    "../browser/android/color_helpers_unittest.cc",
-    "../browser/android/compositor/layer/tab_layer_unittest.cc",
-    "../browser/android/contextualsearch/contextual_search_delegate_unittest.cc",
-    "../browser/android/contextualsearch/contextual_search_field_trial_unittest.cc",
-    "../browser/android/data_usage/data_use_matcher_unittest.cc",
-    "../browser/android/data_usage/data_use_tab_model_unittest.cc",
-    "../browser/android/data_usage/data_use_ui_tab_model_unittest.cc",
-    "../browser/android/data_usage/external_data_use_observer_unittest.cc",
-    "../browser/android/data_usage/external_data_use_reporter_unittest.cc",
-    "../browser/android/data_usage/tab_data_use_entry_unittest.cc",
-    "../browser/android/digital_asset_links/digital_asset_links_handler_unittest.cc",
-    "../browser/android/download/download_manager_service_unittest.cc",
-    "../browser/android/history_report/data_observer_unittest.cc",
-    "../browser/android/history_report/delta_file_backend_leveldb_unittest.cc",
-    "../browser/android/history_report/delta_file_commons_unittest.cc",
-    "../browser/android/history_report/usage_reports_buffer_backend_unittest.cc",
-    "../browser/android/locale/locale_template_url_loader_unittest.cc",
-    "../browser/android/tab_web_contents_delegate_android_unittest.cc",
-
-    # TODO(newt): move this to test_support_unit?
-    "../browser/android/chrome_backup_agent_unittest.cc",
-    "../browser/android/customtabs/detached_resource_request_unittest.cc",
-    "../browser/android/favicon_helper_unittest.cc",
-    "../browser/android/mock_location_settings.cc",
-    "../browser/android/mock_location_settings.h",
-    "../browser/android/ntp/content_suggestions_notifier_service_unittest.cc",
-    "../browser/android/ntp/content_suggestions_notifier_unittest.cc",
-    "../browser/android/oom_intervention/near_oom_monitor_unittest.cc",
-    "../browser/android/oom_intervention/oom_intervention_decider_unittest.cc",
-    "../browser/android/password_ui_view_android_unittest.cc",
-    "../browser/android/preferences/pref_service_bridge_unittest.cc",
-    "../browser/android/preferences/prefs_unittest.cc",
-    "../browser/android/shortcut_info_unittest.cc",
-    "../browser/android/signin/signin_manager_android_unittest.cc",
-    "../browser/android/thumbnail/scoped_ptr_expiring_cache_unittest.cc",
-    "../browser/android/webapk/webapk_icon_hasher_unittest.cc",
-    "../browser/android/webapk/webapk_installer_unittest.cc",
-    "../browser/android/webapk/webapk_web_manifest_checker_unittest.cc",
-    "../browser/android/webapps/add_to_homescreen_data_fetcher_unittest.cc",
-    "../browser/app_controller_mac_unittest.mm",
-    "../browser/autocomplete/chrome_autocomplete_provider_client_unittest.cc",
-    "../browser/autocomplete/chrome_autocomplete_scheme_classifier_unittest.cc",
-    "../browser/autocomplete/search_provider_unittest.cc",
-    "../browser/autocomplete/shortcuts_provider_extension_unittest.cc",
-    "../browser/background_sync/background_sync_controller_impl_unittest.cc",
-    "../browser/background_sync/background_sync_permission_context_unittest.cc",
-    "../browser/banners/app_banner_settings_helper_unittest.cc",
-    "../browser/bitmap_fetcher/bitmap_fetcher_service_unittest.cc",
-    "../browser/bookmarks/managed_bookmark_service_unittest.cc",
-    "../browser/browser_about_handler_unittest.cc",
-    "../browser/browser_process_impl_unittest.cc",
-    "../browser/browsing_data/browsing_data_appcache_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_cache_storage_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_channel_id_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_cookie_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_database_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_file_system_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_indexed_db_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_local_storage_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_media_license_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_quota_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_service_worker_helper_unittest.cc",
-    "../browser/browsing_data/browsing_data_shared_worker_helper_unittest.cc",
-    "../browser/browsing_data/chrome_browsing_data_remover_delegate_unittest.cc",
-    "../browser/browsing_data/cookies_tree_model_unittest.cc",
-    "../browser/browsing_data/counters/bookmark_counter_unittest.cc",
-    "../browser/browsing_data/counters/browsing_data_counter_utils_unittest.cc",
-    "../browser/browsing_data/counters/site_data_counting_helper_unittest.cc",
-    "../browser/browsing_data/counters/site_settings_counter_unittest.cc",
-    "../browser/browsing_data/site_data_size_collector_unittest.cc",
-    "../browser/budget_service/budget_database_unittest.cc",
-    "../browser/budget_service/budget_manager_unittest.cc",
-    "../browser/chrome_content_browser_client_unittest.cc",
-    "../browser/chrome_process_singleton_win_unittest.cc",
-    "../browser/client_hints/client_hints_unittest.cc",
-    "../browser/command_updater_impl_unittest.cc",
-    "../browser/component_updater/chrome_component_updater_configurator_unittest.cc",
-    "../browser/component_updater/optimization_hints_component_installer_unittest.cc",
-    "../browser/component_updater/origin_trials_component_installer_unittest.cc",
-    "../browser/component_updater/sth_set_component_installer_unittest.cc",
-    "../browser/component_updater/subresource_filter_component_installer_unittest.cc",
-    "../browser/component_updater/supervised_user_whitelist_installer_unittest.cc",
-    "../browser/component_updater/sw_reporter_installer_win_unittest.cc",
-    "../browser/conflicts/enumerate_input_method_editors_win_unittest.cc",
-    "../browser/conflicts/enumerate_shell_extensions_win_unittest.cc",
-    "../browser/conflicts/module_database_win_unittest.cc",
-    "../browser/conflicts/module_event_sink_impl_win_unittest.cc",
-    "../browser/conflicts/module_info_util_win_unittest.cc",
-    "../browser/conflicts/module_info_win_unittest.cc",
-    "../browser/conflicts/module_inspector_win_unittest.cc",
-    "../browser/content_settings/content_settings_default_provider_unittest.cc",
-    "../browser/content_settings/content_settings_mock_observer.cc",
-    "../browser/content_settings/content_settings_mock_observer.h",
-    "../browser/content_settings/content_settings_origin_identifier_value_map_unittest.cc",
-    "../browser/content_settings/content_settings_policy_provider_unittest.cc",
-    "../browser/content_settings/content_settings_pref_provider_unittest.cc",
-    "../browser/content_settings/content_settings_usages_state_unittest.cc",
-    "../browser/content_settings/cookie_settings_factory_unittest.cc",
-    "../browser/content_settings/host_content_settings_map_unittest.cc",
-    "../browser/content_settings/mock_settings_observer.cc",
-    "../browser/content_settings/mock_settings_observer.h",
-    "../browser/content_settings/sound_content_setting_observer_unittest.cc",
-    "../browser/content_settings/tab_specific_content_settings_unittest.cc",
-    "../browser/custom_handlers/protocol_handler_registry_unittest.cc",
-    "../browser/data_usage/tab_id_annotator_unittest.cc",
-    "../browser/data_usage/tab_id_provider_unittest.cc",
-    "../browser/data_use_measurement/chrome_data_use_ascriber_unittest.cc",
-    "../browser/data_use_measurement/page_load_capping/page_load_capping_infobar_delegate_unittest.cc",
-    "../browser/download/chrome_download_manager_delegate_unittest.cc",
-    "../browser/download/download_history_unittest.cc",
-    "../browser/download/download_item_model_unittest.cc",
-    "../browser/download/download_path_reservation_tracker_unittest.cc",
-    "../browser/download/download_prefs_unittest.cc",
-    "../browser/download/download_query_unittest.cc",
-    "../browser/download/download_request_limiter_unittest.cc",
-    "../browser/download/download_resource_throttle_unittest.cc",
-    "../browser/download/download_status_updater_unittest.cc",
-    "../browser/download/download_target_determiner_unittest.cc",
-    "../browser/download/download_ui_controller_unittest.cc",
-    "../browser/engagement/important_sites_usage_counter_unittest.cc",
-    "../browser/engagement/important_sites_util_unittest.cc",
-    "../browser/engagement/site_engagement_helper_unittest.cc",
-    "../browser/engagement/site_engagement_score_unittest.cc",
-    "../browser/engagement/site_engagement_service_unittest.cc",
-    "../browser/engagement/top_sites/site_engagement_top_sites_provider_unittest.cc",
-    "../browser/external_protocol/external_protocol_handler_unittest.cc",
-    "../browser/file_select_helper_unittest.cc",
-    "../browser/font_pref_change_notifier_unittest.cc",
-    "../browser/geolocation/geolocation_permission_context_unittest.cc",
-    "../browser/global_keyboard_shortcuts_mac_unittest.mm",
-    "../browser/google/google_search_domain_mixing_metrics_emitter_factory_unittest.cc",
-    "../browser/google/google_search_domain_mixing_metrics_emitter_unittest.cc",
-    "../browser/google/google_update_settings_unittest.cc",
-    "../browser/google/google_url_tracker_factory_unittest.cc",
-    "../browser/history/android/android_cache_database_unittest.cc",
-    "../browser/history/android/android_history_provider_service_unittest.cc",
-    "../browser/history/android/android_provider_backend_unittest.cc",
-    "../browser/history/android/android_urls_database_unittest.cc",
-    "../browser/history/android/bookmark_model_sql_handler_unittest.cc",
-    "../browser/history/android/sqlite_cursor_unittest.cc",
-    "../browser/history/android/urls_sql_handler_unittest.cc",
-    "../browser/history/android/visit_sql_handler_unittest.cc",
-    "../browser/history/history_tab_helper_unittest.cc",
-    "../browser/infobars/mock_infobar_service.cc",
-    "../browser/infobars/mock_infobar_service.h",
-    "../browser/install_verification/win/loaded_module_verification_unittest.cc",
-    "../browser/install_verification/win/module_ids_unittest.cc",
-    "../browser/install_verification/win/module_info_unittest.cc",
-    "../browser/install_verification/win/module_list_unittest.cc",
-    "../browser/install_verification/win/module_verification_test.cc",
-    "../browser/install_verification/win/module_verification_test.h",
-    "../browser/installable/installable_manager_unittest.cc",
-    "../browser/installable/installable_task_queue_unittest.cc",
-    "../browser/internal_auth_unittest.cc",
-    "../browser/language/language_model_factory_unittest.cc",
-    "../browser/language/url_language_histogram_factory_unittest.cc",
-    "../browser/loader/chrome_navigation_data_unittest.cc",
-    "../browser/loader/chrome_resource_dispatcher_host_delegate_unittest.cc",
-    "../browser/logging_chrome_unittest.cc",
-    "../browser/mac/exception_processor_unittest.mm",
-    "../browser/mac/keystone_glue_unittest.mm",
-    "../browser/media/android/router/media_router_android_unittest.cc",
-    "../browser/media/cast_remoting_connector_unittest.cc",
-    "../browser/media/media_engagement_contents_observer_unittest.cc",
-    "../browser/media/media_engagement_preloaded_list_unittest.cc",
-    "../browser/media/media_engagement_score_unittest.cc",
-    "../browser/media/media_engagement_service_unittest.cc",
-    "../browser/media/media_engagement_session_unittest.cc",
-    "../browser/media/media_storage_id_salt_unittest.cc",
-    "../browser/media/midi_permission_context_unittest.cc",
-    "../browser/media/midi_sysex_permission_context_unittest.cc",
-    "../browser/media/router/issue_manager_unittest.cc",
-    "../browser/media/router/media_router_base_unittest.cc",
-    "../browser/media/router/media_router_dialog_controller_unittest.cc",
-    "../browser/media/router/media_router_factory_unittest.cc",
-    "../browser/media/router/media_router_metrics_unittest.cc",
-    "../browser/media/router/media_sinks_observer_unittest.cc",
-    "../browser/media/router/presentation/browser_presentation_connection_proxy_unittest.cc",
-    "../browser/media/router/presentation/local_presentation_manager_factory_unittest.cc",
-    "../browser/media/router/presentation/local_presentation_manager_unittest.cc",
-    "../browser/media/router/presentation/presentation_media_sinks_observer_unittest.cc",
-    "../browser/media/router/presentation/presentation_service_delegate_impl_unittest.cc",
-    "../browser/media/webrtc/media_stream_device_permission_context_unittest.cc",
-    "../browser/metrics/antivirus_metrics_provider_win_unittest.cc",
-    "../browser/metrics/chrome_browser_main_extra_parts_metrics_unittest.cc",
-    "../browser/metrics/chrome_metrics_service_accessor_unittest.cc",
-    "../browser/metrics/chrome_metrics_service_client_unittest.cc",
-    "../browser/metrics/oom/out_of_memory_reporter_unittest.cc",
-    "../browser/metrics/perf/perf_provider_chromeos_unittest.cc",
-    "../browser/metrics/process_memory_metrics_emitter_unittest.cc",
-    "../browser/metrics/subprocess_metrics_provider_unittest.cc",
-    "../browser/metrics/thread_watcher_android_unittest.cc",
-    "../browser/metrics/thread_watcher_unittest.cc",
-    "../browser/net/chrome_accept_language_settings_unittest.cc",
-    "../browser/net/chrome_network_delegate_unittest.cc",
-    "../browser/net/dns_probe_runner_unittest.cc",
-    "../browser/net/dns_probe_service_unittest.cc",
-    "../browser/net/file_downloader_unittest.cc",
-    "../browser/net/net_error_tab_helper_unittest.cc",
-    "../browser/net/predictor_unittest.cc",
-    "../browser/net/probe_message_unittest.cc",
-    "../browser/net/quota_policy_channel_id_store_unittest.cc",
-    "../browser/net/reporting_permissions_checker_unittest.cc",
-    "../browser/net/safe_search_util_unittest.cc",
-    "../browser/net/spdyproxy/data_reduction_proxy_chrome_settings_unittest.cc",
-    "../browser/net/spdyproxy/data_reduction_proxy_settings_unittest_android.cc",
-    "../browser/net/url_info_unittest.cc",
-    "../browser/notifications/desktop_notification_profile_util_unittest.cc",
-    "../browser/notifications/metrics/notification_metrics_logger_unittest.cc",
-    "../browser/notifications/notification_channels_provider_android_unittest.cc",
-    "../browser/notifications/notification_permission_context_unittest.cc",
-    "../browser/notifications/notification_platform_bridge_chromeos_unittest.cc",
-    "../browser/notifications/notification_platform_bridge_mac_unittest.mm",
-    "../browser/notifications/platform_notification_service_unittest.cc",
-    "../browser/notifications/stub_alert_dispatcher_mac.h",
-    "../browser/notifications/stub_alert_dispatcher_mac.mm",
-    "../browser/notifications/stub_notification_center_mac.h",
-    "../browser/notifications/stub_notification_center_mac.mm",
-    "../browser/ntp_snippets/bookmark_last_visit_updater_unittest.cc",
-    "../browser/ntp_snippets/download_suggestions_provider_unittest.cc",
-    "../browser/page_load_metrics/metrics_web_contents_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/aborts_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/ads_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/amp_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/core_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/data_reduction_proxy_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/document_write_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/from_gws_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/loading_predictor_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/local_network_requests_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/lofi_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/media_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/multi_tab_loading_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/noscript_preview_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/offline_page_previews_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/page_capping_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/page_load_metrics_observer_test_harness.cc",
-    "../browser/page_load_metrics/observers/page_load_metrics_observer_test_harness.h",
-    "../browser/page_load_metrics/observers/page_load_metrics_observer_tester.cc",
-    "../browser/page_load_metrics/observers/page_load_metrics_observer_tester.h",
-    "../browser/page_load_metrics/observers/previews_ukm_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/protocol_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/service_worker_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/tab_restore_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/ukm_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/observers/use_counter_page_load_metrics_observer_unittest.cc",
-    "../browser/page_load_metrics/page_load_metrics_util_unittest.cc",
-    "../browser/page_load_metrics/user_input_tracker_unittest.cc",
-    "../browser/password_manager/chrome_password_manager_client_unittest.cc",
-    "../browser/password_manager/password_manager_internals_service_unittest.cc",
-    "../browser/password_manager/password_store_mac_unittest.cc",
-    "../browser/password_manager/password_store_win_unittest.cc",
-    "../browser/password_manager/password_store_x_unittest.cc",
-    "../browser/payments/payment_handler_permission_context_unittest.cc",
-    "../browser/permissions/chooser_context_base_unittest.cc",
-    "../browser/permissions/permission_context_base_feature_policy_unittest.cc",
-    "../browser/permissions/permission_context_base_unittest.cc",
-    "../browser/permissions/permission_decision_auto_blocker_unittest.cc",
-    "../browser/permissions/permission_manager_unittest.cc",
-    "../browser/permissions/permission_request_manager_unittest.cc",
-    "../browser/permissions/permission_util_unittest.cc",
-    "../browser/plugins/pdf_iframe_navigation_throttle_unittest.cc",
-    "../browser/policy/browser_dm_token_storage_win_unittest.cc",
-    "../browser/policy/cloud/cloud_policy_invalidator_unittest.cc",
-    "../browser/policy/cloud/cloud_policy_test_utils.cc",
-    "../browser/policy/cloud/cloud_policy_test_utils.h",
-    "../browser/policy/cloud/remote_commands_invalidator_unittest.cc",
-    "../browser/policy/cloud/user_policy_signin_service_unittest.cc",
-    "../browser/policy/developer_tools_policy_handler_unittest.cc",
-    "../browser/policy/file_selection_dialogs_policy_handler_unittest.cc",
-    "../browser/policy/javascript_policy_handler_unittest.cc",
-    "../browser/policy/managed_bookmarks_policy_handler_unittest.cc",
-    "../browser/policy/profile_policy_connector_unittest.cc",
-    "../browser/predictors/autocomplete_action_predictor_table_unittest.cc",
-    "../browser/predictors/autocomplete_action_predictor_unittest.cc",
-    "../browser/predictors/loading_data_collector_unittest.cc",
-    "../browser/predictors/loading_predictor_config_unittest.cc",
-    "../browser/predictors/loading_predictor_unittest.cc",
-    "../browser/predictors/loading_stats_collector_unittest.cc",
-    "../browser/predictors/preconnect_manager_unittest.cc",
-    "../browser/predictors/resource_prefetch_predictor_tables_unittest.cc",
-    "../browser/predictors/resource_prefetch_predictor_unittest.cc",
-    "../browser/prefs/chrome_command_line_pref_store_proxy_unittest.cc",
-    "../browser/prefs/chrome_command_line_pref_store_ssl_manager_unittest.cc",
-    "../browser/prefs/chrome_command_line_pref_store_unittest.cc",
-    "../browser/prefs/chrome_pref_service_unittest.cc",
-    "../browser/prefs/incognito_mode_prefs_unittest.cc",
-    "../browser/prefs/profile_pref_store_manager_unittest.cc",
-    "../browser/prefs/proxy_policy_unittest.cc",
-    "../browser/prefs/session_startup_pref_unittest.cc",
-    "../browser/prerender/prerender_history_unittest.cc",
-    "../browser/prerender/prerender_resource_throttle_unittest.cc",
-    "../browser/prerender/prerender_unittest.cc",
-    "../browser/prerender/prerender_util_unittest.cc",
-    "../browser/previews/previews_infobar_delegate_unittest.cc",
-    "../browser/previews/previews_infobar_tab_helper_unittest.cc",
-    "../browser/previews/previews_service_unittest.cc",
-    "../browser/process_singleton_win_unittest.cc",
-    "../browser/profiles/gaia_info_update_service_unittest.cc",
-    "../browser/profiles/guest_mode_policy_handler_unittest.cc",
-    "../browser/profiles/incognito_mode_policy_handler_unittest.cc",
-    "../browser/profiles/profile_attributes_storage_unittest.cc",
-    "../browser/profiles/profile_avatar_icon_util_unittest.cc",
-    "../browser/profiles/profile_downloader_unittest.cc",
-    "../browser/profiles/profile_info_cache_unittest.cc",
-    "../browser/profiles/profile_info_cache_unittest.h",
-    "../browser/profiles/profile_manager_unittest.cc",
-    "../browser/profiles/profile_shortcut_manager_unittest_win.cc",
-    "../browser/profiling_host/background_profiling_triggers_unittest.cc",
-    "../browser/profiling_host/chrome_client_connection_manager_unittest.cc",
-    "../browser/push_messaging/push_messaging_app_identifier_unittest.cc",
-    "../browser/push_messaging/push_messaging_notification_manager_unittest.cc",
-    "../browser/push_messaging/push_messaging_service_unittest.cc",
-    "../browser/renderer_host/chrome_render_widget_host_view_mac_history_swiper_unit_test.mm",
-    "../browser/resources_util_unittest.cc",
-    "../browser/search/contextual_search_policy_handler_android_unittest.cc",
-    "../browser/search/thumbnail_source_unittest.cc",
-
-    # TODO(hashimoto): those tests should be componentized and moved to
-    # //components:components_unittests, http://crbug.com/527882.
-    "../browser/search_engines/template_url_fetcher_unittest.cc",
-    "../browser/search_engines/template_url_parser_unittest.cc",
-    "../browser/search_engines/template_url_service_sync_unittest.cc",
-    "../browser/search_engines/template_url_service_unittest.cc",
-    "../browser/service_process/service_process_control_mac_unittest.mm",
-    "../browser/sessions/chrome_serialized_navigation_driver_unittest.cc",
-    "../browser/sessions/restore_on_startup_policy_handler_unittest.cc",
-    "../browser/sessions/session_common_utils_unittest.cc",
-    "../browser/shell_integration_win_unittest.cc",
-    "../browser/signin/account_consistency_mode_manager_unittest.cc",
-    "../browser/signin/chrome_signin_client_unittest.cc",
-    "../browser/signin/chrome_signin_helper_unittest.cc",
-    "../browser/signin/chrome_signin_status_metrics_provider_delegate_unittest.cc",
-    "../browser/signin/local_auth_unittest.cc",
-    "../browser/signin/signin_status_metrics_provider_chromeos_unittest.cc",
-    "../browser/signin/signin_tracker_unittest.cc",
-    "../browser/signin/test_signin_client_builder.cc",
-    "../browser/signin/test_signin_client_builder.h",
-    "../browser/signin/unified_consent_helper_unittest.cc",
-    "../browser/ssl/certificate_error_report_unittest.cc",
-    "../browser/ssl/certificate_error_reporter_unittest.cc",
-    "../browser/ssl/chrome_expect_ct_reporter_unittest.cc",
-    "../browser/ssl/insecure_sensitive_input_driver_unittest.cc",
-    "../browser/ssl/security_state_tab_helper_unittest.cc",
-    "../browser/ssl/ssl_config_service_manager_pref_unittest.cc",
-    "../browser/ssl/ssl_error_assistant_unittest.cc",
-    "../browser/ssl/ssl_error_handler_unittest.cc",
-    "../browser/ssl/ssl_error_navigation_throttle_unittest.cc",
-    "../browser/ssl/typed_navigation_timing_throttle_unittest.cc",
-    "../browser/status_icons/status_icon_menu_model_unittest.cc",
-    "../browser/status_icons/status_icon_unittest.cc",
-    "../browser/status_icons/status_tray_unittest.cc",
-    "../browser/storage/durable_storage_permission_context_unittest.cc",
-    "../browser/subresource_filter/subresource_filter_abusive_unittest.cc",
-    "../browser/subresource_filter/subresource_filter_configuration_unittest.cc",
-    "../browser/subresource_filter/subresource_filter_content_settings_manager_unittest.cc",
-    "../browser/subresource_filter/subresource_filter_test_harness.cc",
-    "../browser/subresource_filter/subresource_filter_test_harness.h",
-    "../browser/subresource_filter/subresource_filter_unittest.cc",
-    "../browser/sync/chrome_sync_client_unittest.cc",
-    "../browser/sync/profile_sync_service_factory_unittest.cc",
-    "../browser/sync/sessions/sync_sessions_web_contents_router_unittest.cc",
-    "../browser/sync/sync_startup_tracker_unittest.cc",
-    "../browser/thumbnails/thumbnail_service_unittest.cc",
-    "../browser/thumbnails/thumbnail_utils_unittest.cc",
-    "../browser/tracing/background_tracing_field_trial_unittest.cc",
-    "../browser/translate/chrome_translate_client_unittest.cc",
-    "../browser/translate/translate_service_unittest.cc",
-    "../browser/ui/android/tab_model/tab_model_list_unittest.cc",
-    "../browser/ui/android/tab_model/tab_model_unittest.cc",
-    "../browser/ui/autofill/autofill_dialog_models_unittest.cc",
-    "../browser/ui/autofill/autofill_popup_layout_model_unittest.cc",
-    "../browser/ui/autofill/popup_view_common_unittest.cc",
-    "../browser/ui/blocked_content/popup_opener_tab_helper_unittest.cc",
-    "../browser/ui/blocked_content/safe_browsing_triggered_popup_blocker_unittest.cc",
-    "../browser/ui/blocked_content/scoped_visibility_tracker_unittest.cc",
-    "../browser/ui/bookmarks/bookmark_editor_unittest.cc",
-    "../browser/ui/bookmarks/bookmark_ui_utils_desktop_unittest.cc",
-    "../browser/ui/bookmarks/recently_used_folders_combo_model_unittest.cc",
-    "../browser/ui/chrome_select_file_policy_unittest.cc",
-    "../browser/ui/find_bar/find_backend_unittest.cc",
-    "../browser/ui/login/login_handler_unittest.cc",
-    "../browser/ui/page_info/page_info_unittest.cc",
-    "../browser/ui/passwords/manage_passwords_state_unittest.cc",
-    "../browser/ui/passwords/manage_passwords_view_utils_unittest.cc",
-    "../browser/ui/passwords/password_access_authenticator_unittest.cc",
-    "../browser/ui/passwords/password_manager_porter_unittest.cc",
-    "../browser/ui/passwords/password_manager_presenter_unittest.cc",
-    "../browser/ui/search_engines/keyword_editor_controller_unittest.cc",
-    "../browser/ui/sync/profile_signin_confirmation_helper_unittest.cc",
-    "../browser/ui/sync/sync_promo_ui_unittest.cc",
-    "../browser/ui/sync/tab_contents_synced_tab_delegate_unittest.cc",
-    "../browser/ui/tests/ui_gfx_image_unittest.cc",
-    "../browser/ui/tests/ui_gfx_image_unittest.mm",
-    "../browser/ui/webui/fileicon_source_unittest.cc",
-    "../browser/ui/webui/interventions_internals/interventions_internals_page_handler_unittest.cc",
-    "../browser/ui/webui/local_state/local_state_ui_unittest.cc",
-    "../browser/ui/webui/log_web_ui_url_unittest.cc",
-    "../browser/update_client/chrome_update_query_params_delegate_unittest.cc",
-    "../browser/vr/metrics/session_metrics_helper_unittest.cc",
-    "../browser/vr/vr_tab_helper_unittest.cc",
-    "../browser/webshare/share_target_pref_helper_unittest.cc",
-    "../browser/win/chrome_elf_init_unittest.cc",
-    "../browser/win/enumerate_modules_model_unittest.cc",
-    "../browser/win/jumplist_file_util_unittest.cc",
-    "../browser/win/jumplist_update_util_unittest.cc",
-    "../browser/win/taskbar_icon_finder_unittest.cc",
-    "../common/chrome_constants_win_unittest.cc",
-    "../common/chrome_content_client_unittest.cc",
-    "../common/chrome_paths_unittest.cc",
-    "../common/component_flash_hint_file_linux_unittest.cc",
-    "../common/conflicts/module_watcher_win_unittest.cc",
-    "../common/crash_keys_unittest.cc",
-    "../common/ini_parser_unittest.cc",
-    "../common/mac/cfbundle_blocker_unittest.mm",
-    "../common/mac/mock_launchd.cc",
-    "../common/mac/mock_launchd.h",
-    "../common/media_router/issue_unittest.cc",
-    "../common/media_router/media_route_unittest.cc",
-    "../common/media_router/media_sink_unittest.cc",
-    "../common/media_router/media_source_helper_unittest.cc",
-    "../common/media_router/media_source_unittest.cc",
-    "../common/origin_trials/chrome_origin_trial_policy_unittest.cc",
-    "../common/page_load_metrics/test/weak_mock_timer.cc",
-    "../common/page_load_metrics/test/weak_mock_timer.h",
-    "../common/pref_names_util_unittest.cc",
-    "../common/secure_origin_whitelist_unittest.cc",
-    "../common/thread_profiler_unittest.cc",
-    "../renderer/app_categorizer_unittest.cc",
-    "../renderer/chrome_content_renderer_client_unittest.cc",
-    "../renderer/content_settings_observer_unittest.cc",
-    "../renderer/instant_restricted_id_cache_unittest.cc",
-    "../renderer/media/chrome_key_systems_provider_unittest.cc",
-    "../renderer/net/net_error_helper_core_unittest.cc",
-    "../renderer/page_load_metrics/fake_page_timing_sender.cc",
-    "../renderer/page_load_metrics/fake_page_timing_sender.h",
-    "../renderer/page_load_metrics/metrics_render_frame_observer_unittest.cc",
-    "../renderer/page_load_metrics/page_timing_metrics_sender_unittest.cc",
-    "../renderer/plugins/plugin_uma_unittest.cc",
-    "../renderer/prerender/prerender_dispatcher_unittest.cc",
-    "../renderer/web_apps_unittest.cc",
-    "../test/base/chrome_render_view_test.cc",
-    "../test/base/chrome_render_view_test.h",
-    "../test/base/menu_model_test.cc",
-    "../test/base/menu_model_test.h",
-    "../test/base/v8_unit_test.cc",
-    "../test/base/v8_unit_test.h",
-    "../test/logging/win/mof_data_parser_unittest.cc",
-
-    # Duplicate these tests here because PathService has more items in
-    # unit_tests than in base_unittests.
-    "../../base/path_service_unittest.cc",
-    "../../testing/gtest_mac_unittest.mm",
-    "../../third_party/zlib/google/compression_utils_unittest.cc",
-    "../../third_party/zlib/google/zip_reader_unittest.cc",
-    "../../third_party/zlib/google/zip_unittest.cc",
-  ]
-
-  if (toolkit_views) {
-    # Test accessibility checks that audit any UI opened in a browser test.
-    sources += [ "views/accessibility_checker_unittest.cc" ]
-  }
-
-  if (is_win) {
-    assert(toolkit_views)
-    sources += [
-      "../browser/notifications/mock_notification_image_retainer.cc",
-      "../browser/notifications/mock_notification_image_retainer.h",
-      "../browser/ui/views/try_chrome_dialog_win/button_layout_unittest.cc",
-    ]
-  }
-
-  configs += [ "//build/config:precompiled_headers" ]
-
-  data_deps = [
-    "//testing/buildbot/filters:unit_tests_filters",
-    "//chrome/test/data/media/engagement/preload:generate_preload_list",
-    "//chrome/test/data/media/engagement/preload:test_data",
-  ]
-
-  data = [
-    "data/",
-    "//base/test/data/",
-    "//chrome/third_party/mock4js/",
-    "//components/test/data/",
-    "//extensions/test/data/",
-    "//google_apis/test/data/",
-    "//net/tools/testserver/",
-    "//third_party/accessibility-audit/axs_testing.js",
-    "//third_party/chaijs/chai.js",
-    "//third_party/pyftpdlib/",
-    "//third_party/pywebsocket/",
-    "//third_party/tlslite/",
-    "//third_party/zlib/google/test/data/",
-    "//tools/metrics/histograms/enums.xml",
-    "$root_out_dir/pyproto/google/",
-  ]
-  if (is_android || is_linux || is_win) {
-    data += [
-      "$root_out_dir/chrome_100_percent.pak",
-      "$root_out_dir/locales/en-US.pak",
-      "$root_out_dir/resources.pak",
-    ]
-  }
-  if (is_linux || is_win) {
-    data += [ "$root_out_dir/chrome_200_percent.pak" ]
-  }
-  if (is_win) {
-    data_deps += [ "//chrome" ]
-    data += [ "$root_out_dir/chrome.exe" ]
-  }
-
-  defines = []
-
-  deps = [
-    ":test_support",
-    ":test_support_unit",
-    "//base/test:test_support",
-    "//chrome:browser_dependencies",
-    "//chrome:child_dependencies",
-    "//chrome:resources",
-    "//chrome:strings",
-    "//chrome/browser/media/router:test_support",
-    "//chrome/common:test_support",
-    "//chrome/common/media_router:test_support",
-    "//components/autofill/content/renderer:test_support",
-    "//components/browser_sync:test_support",
-    "//components/component_updater:test_support",
-    "//components/content_settings/core/test:test_support",
-    "//components/data_reduction_proxy/core/browser:test_support",
-    "//components/data_use_measurement/core",
-    "//components/mirroring:mirroring_tests",
-    "//components/nacl/common:buildflags",
-    "//components/ntp_snippets:test_support",
-    "//components/optimization_guide",
-    "//components/os_crypt:test_support",
-    "//components/resources",
-    "//components/safe_browsing:features",
-    "//components/safe_browsing/db",
-    "//components/safe_browsing/db:test_database_manager",
-    "//components/safe_browsing/password_protection:mock_password_protection",
-    "//components/spellcheck:buildflags",
-    "//components/strings",
-    "//components/subresource_filter/core/browser:test_support",
-    "//components/sync:test_support_driver",
-    "//components/sync:test_support_model",
-    "//components/sync_sessions:test_support",
-    "//components/ukm/content",
-    "//components/version_info:generate_version_info",
-    "//components/webdata_services:test_support",
-    "//content/app/resources",
-    "//content/public/app:both",
-    "//content/test:test_support",
-    "//courgette:courgette_lib",
-    "//crypto:platform",
-    "//crypto:test_support",
-    "//device/base:mocks",
-    "//device/bluetooth:mocks",
-    "//device/usb:test_support",
-    "//extensions/buildflags",
-    "//google_apis",
-    "//gpu:test_support",
-    "//media:test_support",
-    "//mojo/public/cpp/bindings",
-    "//net",
-    "//net:test_support",
-    "//ppapi/buildflags",
-    "//services/data_decoder/public/cpp:test_support",
-    "//services/network/public/cpp",
-    "//skia",
-    "//testing/gmock",
-    "//testing/gtest",
-    "//third_party/cacheinvalidation",
-    "//third_party/icu",
-    "//third_party/leveldatabase",
-    "//third_party/libaddressinput",
-    "//third_party/libphonenumber",
-    "//third_party/libxml",
-    "//third_party/metrics_proto",
-    "//third_party/webrtc/modules/desktop_capture",
-    "//third_party/webrtc_overrides",
-    "//ui/base:test_support",
-    "//ui/display:test_support",
-    "//ui/gfx:test_support",
-    "//ui/gl",
-    "//ui/resources",
-    "//v8",
-  ]
-
-  if (is_mac) {
-    data_deps += [ "//chrome:chrome_framework" ]
-  }
-
-  if (enable_dice_support) {
-    sources += [
-      "../browser/signin/dice_response_handler_unittest.cc",
-      "../browser/signin/dice_tab_helper_unittest.cc",
-      "../browser/signin/process_dice_header_delegate_impl_unittest.cc",
-      "../browser/ui/webui/signin/dice_turn_sync_on_helper_unittest.cc",
-    ]
-  }
-
-  if (enable_offline_pages) {
-    sources += [
-      "../browser/offline_pages/background_loader_offliner_unittest.cc",
-      "../browser/offline_pages/download_archive_manager_unittest.cc",
-      "../browser/offline_pages/offline_page_mhtml_archiver_unittest.cc",
-      "../browser/offline_pages/offline_page_request_handler_unittest.cc",
-      "../browser/offline_pages/offline_page_tab_helper_unittest.cc",
-      "../browser/offline_pages/offline_page_utils_unittest.cc",
-      "../browser/offline_pages/prefetch/offline_metrics_collector_impl_unittest.cc",
-      "../browser/offline_pages/prefetch/prefetch_background_task_handler_impl_unittest.cc",
-      "../browser/offline_pages/prefetch/prefetch_instance_id_proxy_unittest.cc",
-      "../browser/offline_pages/prefetch/prefetched_pages_notifier_unittest.cc",
-      "../browser/offline_pages/prefetch/thumbnail_fetcher_impl_unittest.cc",
-      "../browser/offline_pages/recent_tab_helper_unittest.cc",
-      "../browser/offline_pages/test_offline_page_model_builder.cc",
-      "../browser/offline_pages/test_offline_page_model_builder.h",
-      "../browser/offline_pages/test_request_coordinator_builder.cc",
-      "../browser/offline_pages/test_request_coordinator_builder.h",
-      "../browser/offline_pages/thumbnail_decoder_impl_unittest.cc",
-    ]
-    deps += [
-      "//components/image_fetcher/core:test_support",
-      "//components/offline_pages/content/background_loader:test_support",
-      "//components/offline_pages/core:test_support",
-      "//components/offline_pages/core/background:test_support",
-      "//components/offline_pages/core/prefetch:test_support",
-    ]
-  }
-
-  if (is_android) {
-    sources += [
-      "../browser/android/search_permissions/search_permissions_service_unittest.cc",
-      "../browser/autofill/autofill_credit_card_filling_infobar_delegate_mobile_unittest.cc",
-      "../browser/autofill/autofill_save_card_infobar_delegate_mobile_unittest.cc",
-      "../browser/page_load_metrics/observers/android_page_load_metrics_observer_unittest.cc",
-      "../browser/password_manager/account_chooser_dialog_android_unittest.cc",
-      "../browser/password_manager/auto_signin_first_run_dialog_android_unittest.cc",
-      "../browser/password_manager/save_password_infobar_delegate_android_unittest.cc",
-    ]
-    deps += [
-      "//base:base_java",
-      "//chrome/android:app_hooks_java",
-      "//chrome/android:chrome_java",
-      "//chrome/android:class_register_java",
-      "//components/gcm_driver/instance_id/android:instance_id_driver_java",
-      "//components/gcm_driver/instance_id/android:instance_id_driver_test_support_java",
-      "//content/public/android:content_java",
-    ]
-    if (use_v8_context_snapshot) {
-      deps += [ "//tools/v8_context_snapshot:v8_context_snapshot_assets" ]
-    } else {
-      deps += [ "//v8:v8_external_startup_data_assets" ]
-    }
-
-    enable_multidex = true
-  } else {
-    # !is_android
-    sources += [
-      # Bookmark export/import are handled via the BookmarkColumns
-      # ContentProvider.
-      "../browser/bookmarks/bookmark_html_writer_unittest.cc",
-      "../browser/browser_commands_unittest.cc",
-      "../browser/diagnostics/diagnostics_controller_unittest.cc",
-      "../browser/diagnostics/diagnostics_model_unittest.cc",
-      "../browser/download/download_commands_unittest.cc",
-      "../browser/download/download_shelf_unittest.cc",
-      "../browser/first_run/first_run_unittest.cc",
-      "../browser/font_family_cache_unittest.cc",
-
-      # GCMDriverAndroid is not yet implemented.
-      "../browser/gcm/gcm_profile_service_unittest.cc",
-      "../browser/importer/firefox_profile_lock_unittest.cc",
-      "../browser/importer/profile_writer_unittest.cc",
-
-      # In-browser discovery is not used by Android for now.
-      "../browser/media/router/discovery/discovery_network_list_unittest.cc",
-      "../browser/media/router/discovery/discovery_network_monitor_metric_observer_unittest.cc",
-      "../browser/media/router/discovery/discovery_network_monitor_unittest.cc",
-      "../browser/media/webrtc/tab_desktop_media_list_unittest.cc",
-      "../browser/media/webrtc/webrtc_event_log_manager_unittest.cc",
-      "../browser/media/webrtc/webrtc_event_log_uploader_impl_unittest.cc",
-      "../browser/media_galleries/fileapi/native_media_file_util_unittest.cc",
-      "../browser/media_galleries/gallery_watch_manager_unittest.cc",
-      "../browser/media_galleries/mac/mtp_device_delegate_impl_mac_unittest.mm",
-      "../browser/media_galleries/media_file_system_registry_unittest.cc",
-      "../browser/media_galleries/media_galleries_dialog_controller_mock.cc",
-      "../browser/media_galleries/media_galleries_dialog_controller_mock.h",
-      "../browser/media_galleries/media_galleries_dialog_controller_test_util.cc",
-      "../browser/media_galleries/media_galleries_dialog_controller_test_util.h",
-      "../browser/media_galleries/media_galleries_permission_controller_unittest.cc",
-      "../browser/media_galleries/media_galleries_permissions_unittest.cc",
-      "../browser/media_galleries/media_galleries_preferences_unittest.cc",
-      "../browser/media_galleries/win/mtp_device_delegate_impl_win_unittest.cc",
-      "../browser/media_galleries/win/mtp_device_object_enumerator_unittest.cc",
-      "../browser/memory/swap_thrashing_monitor_delegate_win_unittest.cc",
-      "../browser/metrics/tab_stats_data_store_unittest.cc",
-      "../browser/metrics/tab_stats_tracker_unittest.cc",
-      "../browser/page_load_metrics/observers/session_restore_page_load_metrics_observer_unittest.cc",
-      "../browser/resource_coordinator/background_tab_navigation_throttle_unittest.cc",
-      "../browser/resource_coordinator/decision_details_unittest.cc",
-      "../browser/resource_coordinator/discard_metrics_lifecycle_unit_observer_unittest.cc",
-      "../browser/resource_coordinator/leveldb_site_characteristics_database_unittest.cc",
-      "../browser/resource_coordinator/lifecycle_unit_base_unittest.cc",
-      "../browser/resource_coordinator/lifecycle_unit_unittest.cc",
-      "../browser/resource_coordinator/local_site_characteristics_data_impl_unittest.cc",
-      "../browser/resource_coordinator/local_site_characteristics_data_reader_unittest.cc",
-      "../browser/resource_coordinator/local_site_characteristics_data_store_unittest.cc",
-      "../browser/resource_coordinator/local_site_characteristics_data_unittest_utils.cc",
-      "../browser/resource_coordinator/local_site_characteristics_data_unittest_utils.h",
-      "../browser/resource_coordinator/local_site_characteristics_data_writer_unittest.cc",
-      "../browser/resource_coordinator/local_site_characteristics_non_recording_data_store_unittest.cc",
-      "../browser/resource_coordinator/tab_activity_watcher_unittest.cc",
-      "../browser/resource_coordinator/tab_lifecycle_unit_source_unittest.cc",
-      "../browser/resource_coordinator/tab_lifecycle_unit_unittest.cc",
-      "../browser/resource_coordinator/tab_load_tracker_unittest.cc",
-      "../browser/resource_coordinator/tab_manager_delegate_chromeos_unittest.cc",
-      "../browser/resource_coordinator/tab_manager_features_unittest.cc",
-      "../browser/resource_coordinator/tab_manager_stats_collector_unittest.cc",
-      "../browser/resource_coordinator/tab_manager_unittest.cc",
-      "../browser/resource_coordinator/tab_manager_web_contents_data_unittest.cc",
-      "../browser/resource_coordinator/tab_memory_metrics_reporter_unittest.cc",
-      "../browser/resource_coordinator/tab_metrics_logger_unittest.cc",
-      "../browser/resource_coordinator/tab_ranker/tab_score_predictor_unittest.cc",
-      "../browser/resource_coordinator/test_lifecycle_unit.cc",
-      "../browser/resource_coordinator/test_lifecycle_unit.h",
-
-      # Android does not use the Message Center notification system.
-      "../browser/notifications/message_center_notifications_unittest.cc",
-      "../browser/platform_util_unittest.cc",
-      "../browser/policy/policy_path_parser_unittest.cc",
-      "../browser/profile_resetter/profile_resetter_unittest.cc",
-      "../browser/profile_resetter/reset_report_uploader_unittest.cc",
-      "../browser/profile_resetter/triggered_profile_resetter_win_unittest.cc",
-      "../browser/renderer_context_menu/render_view_context_menu_unittest.cc",
-      "../browser/safe_browsing/chrome_cleaner/chrome_cleaner_controller_impl_win_unittest.cc",
-      "../browser/safe_browsing/chrome_cleaner/chrome_cleaner_fetcher_win_unittest.cc",
-      "../browser/safe_browsing/chrome_cleaner/chrome_cleaner_runner_win_unittest.cc",
-      "../browser/safe_browsing/chrome_cleaner/mock_chrome_cleaner_process_win.cc",
-      "../browser/safe_browsing/chrome_cleaner/mock_chrome_cleaner_process_win.h",
-      "../browser/safe_browsing/chrome_cleaner/srt_field_trial_win_unittest.cc",
-      "../browser/search/background/ntp_background_service_unittest.cc",
-      "../browser/search/iframe_source_unittest.cc",
-      "../browser/search/instant_service_unittest.cc",
-      "../browser/search/instant_unittest_base.cc",
-      "../browser/search/instant_unittest_base.h",
-      "../browser/search/one_google_bar/one_google_bar_loader_impl_unittest.cc",
-      "../browser/search/one_google_bar/one_google_bar_service_unittest.cc",
-      "../browser/search/search_engine_base_url_tracker_unittest.cc",
-      "../browser/search/search_unittest.cc",
-      "../browser/sessions/persistent_tab_restore_service_unittest.cc",
-      "../browser/signin/mutable_profile_oauth2_token_service_delegate_unittest.cc",
-      "../browser/signin/signin_promo_unittest.cc",
-      "../browser/speech/extension_api/extension_manifests_tts_unittest.cc",
-      "../browser/speech/tts_controller_unittest.cc",
-      "../browser/sync/sessions/browser_list_router_helper_unittest.cc",
-      "../browser/sync/sessions/sync_sessions_router_tab_helper_unittest.cc",
-      "../browser/sync/sync_ui_util_unittest.cc",  # Sync setup uses native ui.
-      "../browser/task_manager/providers/browser_process_task_unittest.cc",
-      "../browser/task_manager/providers/child_process_task_unittest.cc",
-      "../browser/task_manager/providers/fallback_task_provider_unittest.cc",
-      "../browser/task_manager/sampling/shared_sampler_win_unittest.cc",
-      "../browser/task_manager/sampling/task_group_unittest.cc",
-      "../browser/task_manager/sampling/task_manager_impl_unittest.cc",
-      "../browser/task_manager/sampling/task_manager_io_thread_helper_unittest.cc",
-      "../browser/task_manager/task_manager_observer_unittest.cc",
-      "../browser/task_manager/test_task_manager.cc",
-      "../browser/task_manager/test_task_manager.h",
-      "../browser/themes/browser_theme_pack_unittest.cc",
-      "../browser/themes/theme_properties_unittest.cc",
-      "../browser/themes/theme_service_unittest.cc",
-      "../browser/themes/theme_syncable_service_unittest.cc",
-      "../browser/translate/translate_manager_render_view_host_unittest.cc",
-      "../browser/ui/webui/theme_source_unittest.cc",
-
-      # The autofill popup is implemented in mostly native code on Android.
-      "../browser/ui/autofill/autofill_popup_controller_unittest.cc",
-      "../browser/ui/bookmarks/bookmark_context_menu_controller_unittest.cc",
-      "../browser/ui/bookmarks/bookmark_unittest.cc",
-      "../browser/ui/browser_close_unittest.cc",
-      "../browser/ui/browser_command_controller_unittest.cc",
-      "../browser/ui/browser_instant_controller_unittest.cc",
-      "../browser/ui/browser_unittest.cc",
-      "../browser/ui/browser_window_state_unittest.cc",
-      "../browser/ui/chrome_bubble_manager_unittest.cc",
-      "../browser/ui/content_settings/content_setting_bubble_model_unittest.cc",
-      "../browser/ui/content_settings/content_setting_image_model_unittest.cc",
-      "../browser/ui/exclusive_access/fullscreen_controller_state_unittest.cc",
-      "../browser/ui/extensions/extension_action_view_controller_unittest.cc",
-      "../browser/ui/extensions/extension_message_bubble_bridge_unittest.cc",
-      "../browser/ui/extensions/hosted_app_browser_controller_unittest.cc",
-      "../browser/ui/global_error/global_error_service_unittest.cc",
-      "../browser/ui/omnibox/chrome_omnibox_navigation_observer_unittest.cc",
-      "../browser/ui/omnibox/clipboard_utils_unittest.cc",
-      "../browser/ui/page_info/permission_menu_model_unittest.cc",
-      "../browser/ui/passwords/manage_passwords_bubble_model_unittest.cc",
-      "../browser/ui/passwords/password_dialog_controller_impl_unittest.cc",
-      "../browser/ui/search/ntp_user_data_logger_unittest.cc",
-      "../browser/ui/search/search_ipc_router_policy_unittest.cc",
-      "../browser/ui/search/search_ipc_router_unittest.cc",
-      "../browser/ui/search/search_tab_helper_unittest.cc",
-      "../browser/ui/tab_contents/tab_contents_iterator_unittest.cc",
-      "../browser/ui/tabs/pinned_tab_codec_unittest.cc",
-      "../browser/ui/tabs/pinned_tab_service_unittest.cc",
-      "../browser/ui/tabs/tab_menu_model_unittest.cc",
-      "../browser/ui/tabs/tab_strip_model_stats_recorder_unittest.cc",
-      "../browser/ui/tabs/tab_strip_model_unittest.cc",
-      "../browser/ui/tabs/test_tab_strip_model_delegate.cc",
-      "../browser/ui/tabs/test_tab_strip_model_delegate.h",
-      "../browser/ui/tabs/window_activity_watcher_unittest.cc",
-      "../browser/ui/toolbar/app_menu_model_unittest.cc",
-      "../browser/ui/toolbar/back_forward_menu_model_unittest.cc",
-      "../browser/ui/toolbar/component_toolbar_actions_factory_unittest.cc",
-      "../browser/ui/toolbar/mock_component_toolbar_actions_factory.cc",
-      "../browser/ui/toolbar/mock_component_toolbar_actions_factory.h",
-      "../browser/ui/toolbar/recent_tabs_builder_test_helper.cc",
-      "../browser/ui/toolbar/recent_tabs_builder_test_helper.h",
-      "../browser/ui/toolbar/recent_tabs_sub_menu_model_unittest.cc",
-      "../browser/ui/toolbar/test_toolbar_actions_bar_bubble_delegate.cc",
-      "../browser/ui/toolbar/test_toolbar_actions_bar_bubble_delegate.h",
-      "../browser/ui/toolbar/toolbar_actions_bar_unittest.cc",
-      "../browser/ui/toolbar/toolbar_actions_bar_unittest.h",
-      "../browser/ui/toolbar/toolbar_actions_model_unittest.cc",
-      "../browser/ui/toolbar/toolbar_model_unittest.cc",
-      "../browser/ui/webui/browsing_history_handler_unittest.cc",
-      "../browser/ui/webui/help/version_updater_chromeos_unittest.cc",
-      "../browser/ui/webui/md_downloads/downloads_list_tracker_unittest.cc",
-      "../browser/ui/webui/md_downloads/md_downloads_dom_handler_unittest.cc",
-      "../browser/ui/webui/settings/downloads_handler_unittest.cc",
-      "../browser/ui/webui/settings/metrics_reporting_handler_unittest.cc",
-      "../browser/ui/webui/settings/on_startup_handler_unittest.cc",
-      "../browser/ui/webui/settings/people_handler_unittest.cc",
-      "../browser/ui/webui/settings/profile_info_handler_unittest.cc",
-      "../browser/ui/webui/settings/reset_settings_handler_unittest.cc",
-      "../browser/ui/webui/settings/settings_manage_profile_handler_unittest.cc",
-      "../browser/ui/webui/settings/site_settings_handler_unittest.cc",
-      "../browser/ui/webui/settings_utils_unittest.cc",
-      "../browser/ui/webui/signin/login_ui_service_unittest.cc",
-      "../browser/ui/webui/site_settings_helper_unittest.cc",
-      "../browser/ui/webui/sync_internals_message_handler_unittest.cc",
-      "../browser/ui/webui/web_dialog_web_contents_delegate_unittest.cc",
-      "../browser/ui/window_sizer/window_sizer_common_unittest.cc",
-      "../browser/ui/window_sizer/window_sizer_common_unittest.h",
-      "../browser/ui/window_sizer/window_sizer_unittest.cc",
-      "../browser/ui/zoom/zoom_controller_unittest.cc",
-      "../browser/usb/usb_blocklist_unittest.cc",
-      "../browser/usb/usb_chooser_context_unittest.cc",
-      "../browser/usb/usb_chooser_controller_unittest.cc",
-      "../browser/usb/web_usb_detector_unittest.cc",
-
-      # The importer code is not used on Android.
-      "../common/importer/firefox_importer_utils_unittest.cc",
-
-      # No service process (which also requires multiprocess lock).
-      "../common/importer/mock_importer_bridge.cc",
-      "../common/importer/mock_importer_bridge.h",
-      "../common/multi_process_lock_unittest.cc",
-      "../renderer/searchbox/search_bouncer_unittest.cc",
-      "../renderer/searchbox/searchbox_unittest.cc",
-      "../test/base/browser_with_test_window_test.cc",
-      "../test/base/browser_with_test_window_test.h",
-      "../utility/importer/bookmark_html_reader_unittest.cc",
-      "../utility/importer/bookmarks_file_importer_unittest.cc",
-      "../utility/importer/edge_database_reader_unittest_win.cc",
-      "../utility/importer/firefox_importer_unittest.cc",
-      "../utility/importer/firefox_importer_unittest_utils.h",
-      "../utility/importer/firefox_importer_unittest_utils_mac.cc",
-      "../utility/importer/safari_importer_unittest.mm",
-    ]
-    if (is_posix || is_fuchsia) {
-      sources += [ "../browser/process_singleton_posix_unittest.cc" ]
-    }
-
-    deps += [
-      "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
-      "//components/signin/core/browser:signin_buildflags",
-      "//services/metrics/public/cpp:ukm_builders",
-      "//third_party/libaddressinput",
-    ]
-    if (is_mac) {
-      deps += [ ":firefox_importer_interface" ]
-    }
-  }
-
-  if (!is_android) {
-    sources += [
-      "../browser/devtools/devtools_file_system_indexer_unittest.cc",
-      "../browser/devtools/devtools_file_watcher_unittest.cc",
-      "../browser/devtools/devtools_ui_bindings_unittest.cc",
-      "../browser/devtools/serialize_host_descriptions_unittest.cc",
-      "../browser/download/download_dir_policy_handler_unittest.cc",
-      "../browser/media/router/discovery/dial/device_description_fetcher_unittest.cc",
-      "../browser/media/router/discovery/dial/device_description_service_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_app_discovery_service_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_device_data_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_media_sink_service_impl_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_registry_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_service_unittest.cc",
-      "../browser/media/router/discovery/dial/dial_url_fetcher_unittest.cc",
-      "../browser/media/router/discovery/dial/safe_dial_app_info_parser_unittest.cc",
-      "../browser/media/router/discovery/dial/safe_dial_device_description_parser_unittest.cc",
-      "../browser/media/router/discovery/mdns/cast_media_sink_service_impl_unittest.cc",
-      "../browser/media/router/discovery/mdns/cast_media_sink_service_unittest.cc",
-      "../browser/media/router/discovery/mdns/dns_sd_registry_unittest.cc",
-      "../browser/media/router/discovery/media_sink_discovery_metrics_unittest.cc",
-      "../browser/media/router/event_page_request_manager_unittest.cc",
-      "../browser/media/router/media_router_feature_unittest.cc",
-      "../browser/media/router/mojo/media_route_controller_unittest.cc",
-      "../browser/media/router/mojo/media_router_desktop_unittest.cc",
-      "../browser/media/router/mojo/media_router_mojo_impl_unittest.cc",
-      "../browser/media/router/mojo/media_router_mojo_metrics_unittest.cc",
-      "../browser/media/router/mojo/media_sink_service_status_unittest.cc",
-      "../browser/media/router/providers/cast/cast_app_availability_tracker_unittest.cc",
-      "../browser/media/router/providers/cast/cast_app_discovery_service_unittest.cc",
-      "../browser/media/router/providers/cast/cast_media_route_provider_metrics_unittest.cc",
-      "../browser/media/router/providers/cast/cast_media_route_provider_unittest.cc",
-      "../browser/media/router/providers/cast/dual_media_sink_service_unittest.cc",
-      "../browser/media/router/providers/dial/dial_activity_manager_unittest.cc",
-      "../browser/media/router/providers/dial/dial_internal_message_util_unittest.cc",
-      "../browser/media/router/providers/dial/dial_media_route_provider_unittest.cc",
-      "../browser/media/router/providers/extension/extension_media_route_provider_proxy_unittest.cc",
-      "../browser/media/router/providers/wired_display/wired_display_media_route_provider_unittest.cc",
-      "../browser/media/webrtc/webrtc_log_uploader_unittest.cc",
-      "../browser/media/webrtc/webrtc_rtp_dump_handler_unittest.cc",
-      "../browser/media/webrtc/webrtc_rtp_dump_writer_unittest.cc",
-      "../browser/policy/local_sync_policy_handler_unittest.cc",
-      "../browser/renderer_context_menu/render_view_context_menu_test_util.cc",
-      "../browser/renderer_context_menu/render_view_context_menu_test_util.h",
-      "../browser/ui/autofill/save_card_bubble_controller_impl_unittest.cc",
-      "../browser/ui/bluetooth/bluetooth_chooser_controller_unittest.cc",
-      "../browser/ui/media_router/cast_modes_with_media_sources_unittest.cc",
-      "../browser/ui/media_router/media_cast_mode_unittest.cc",
-      "../browser/ui/media_router/media_router_file_dialog_unittest.cc",
-      "../browser/ui/media_router/media_router_ui_helper_unittest.cc",
-      "../browser/ui/media_router/query_result_manager_unittest.cc",
-      "../browser/ui/passwords/manage_passwords_ui_controller_unittest.cc",
-      "../browser/ui/toolbar/media_router_action_controller_unittest.cc",
-      "../browser/ui/toolbar/media_router_action_unittest.cc",
-      "../browser/ui/toolbar/media_router_contextual_menu_unittest.cc",
-      "../browser/ui/toolbar/mock_media_router_action_controller.cc",
-      "../browser/ui/toolbar/mock_media_router_action_controller.h",
-      "../browser/ui/webui/media_router/media_router_dialog_controller_webui_impl_unittest.cc",
-      "../browser/ui/webui/media_router/media_router_ui_service_factory_unittest.cc",
-      "../browser/ui/webui/media_router/media_router_ui_unittest.cc",
-      "../browser/ui/webui/media_router/media_router_web_ui_test.cc",
-      "../browser/ui/webui/media_router/media_router_web_ui_test.h",
-      "../browser/ui/webui/media_router/media_router_webui_message_handler_unittest.cc",
-      "../common/media_router/discovery/media_sink_internal_unittest.cc",
-      "../common/media_router/discovery/media_sink_service_base_unittest.cc",
-      "../common/media_router/mojo/media_router_struct_traits_unittest.cc",
-      "../common/media_router/providers/cast/cast_media_source_unittest.cc",
-      "../renderer/media/chrome_webrtc_log_message_delegate_unittest.cc",
-    ]
-    deps += [
-      "//components/bubble:test_support",
-      "//services/network:test_support",
-    ]
-
-    if (include_js_tests) {
-      deps += [ "//chrome/test/data/webui:unit_tests_js" ]
-      data += [
-        "$root_out_dir/test_data/chrome/browser/resources/print_preview/",
-        "$root_out_dir/test_data/chrome/renderer/resources/extensions/",
-        "$root_out_dir/test_data/ui/webui/",
-      ]
-    }
-  }
-
-  if (is_win || (is_linux && !is_chromeos)) {
-    sources +=
-        [ "../browser/ui/views/confirm_quit_bubble_controller_unittest.cc" ]
-  }
-
-  if (enable_native_notifications) {
-    if (is_desktop_linux) {
-      sources += [ "../browser/notifications/notification_platform_bridge_linux_unittest.cc" ]
-    }
-
-    if (is_win) {
-      sources += [
-        "../browser/notifications/notification_helper_launches_chrome_unittest.cc",
-        "../browser/notifications/notification_launch_id_unittest.cc",
-        "../browser/notifications/notification_platform_bridge_win_unittest.cc",
-      ]
-
-      deps += [
-        "//chrome/installer/setup:lib",
-        "//chrome/installer/util:with_no_strings",
-      ]
-
-      data_deps += [ "//chrome/notification_helper" ]
-    }
-  }
-
-  if (enable_desktop_in_product_help) {
-    sources += [
-      "../browser/feature_engagement/bookmark/bookmark_tracker_unittest.cc",
-      "../browser/feature_engagement/feature_tracker_unittest.cc",
-      "../browser/feature_engagement/incognito_window/incognito_window_tracker_unittest.cc",
-      "../browser/feature_engagement/new_tab/new_tab_tracker_unittest.cc",
-      "../browser/feature_engagement/session_duration_updater_unittest.cc",
-    ]
-    deps += [ "//components/feature_engagement/test:test_support" ]
-  }
-
-  if (is_linux || is_win) {
-    sources += [ "../browser/webshare/share_service_impl_unittest.cc" ]
-  }
-
-  if (is_chromeos) {
-    sources -= [
-      "../browser/signin/chrome_signin_status_metrics_provider_delegate_unittest.cc",
-      "../browser/ui/webui/settings/settings_manage_profile_handler_unittest.cc",
-
-      # Chrome OS uses window_sizer_ash_unittest.cc
-      "../browser/ui/window_sizer/window_sizer_unittest.cc",
-    ]
-    sources += [
-      "../browser/ash_service_registry_unittest.cc",
-      "../browser/chromeos/crostini/crostini_registry_service_unittest.cc",
-      "../browser/chromeos/policy/policy_cert_verifier_unittest.cc",
-      "../browser/component_updater/cros_component_installer_chromeos_unittest.cc",
-      "../browser/component_updater/metadata_table_chromeos_unittest.cc",
-      "../browser/media/webrtc/desktop_media_list_ash_unittest.cc",
-      "../browser/notifications/chrome_ash_message_center_client_unittest.cc",
-      "../browser/renderer_context_menu/mock_render_view_context_menu.cc",
-      "../browser/renderer_context_menu/mock_render_view_context_menu.h",
-      "../browser/signin/signin_error_notifier_ash_unittest.cc",
-      "../browser/sync/sync_error_notifier_ash_unittest.cc",
-      "../browser/ui/ash/accessibility/accessibility_controller_client_unittest.cc",
-      "../browser/ui/ash/accessibility/ax_tree_source_aura_unittest.cc",
-      "../browser/ui/ash/auto_connect_notifier_unittest.cc",
-      "../browser/ui/ash/chrome_keyboard_ui_unittest.cc",
-      "../browser/ui/ash/ime_controller_client_unittest.cc",
-      "../browser/ui/ash/ksv/keyboard_shortcut_viewer_metadata_unittest.cc",
-      "../browser/ui/ash/launcher/arc_app_shelf_id_unittest.cc",
-      "../browser/ui/ash/launcher/chrome_launcher_controller_unittest.cc",
-      "../browser/ui/ash/launcher/launcher_context_menu_unittest.cc",
-      "../browser/ui/ash/multi_user/multi_user_context_menu_chromeos_unittest.cc",
-      "../browser/ui/ash/multi_user/multi_user_util_chromeos_unittest.cc",
-      "../browser/ui/ash/multi_user/multi_user_window_manager_chromeos_unittest.cc",
-      "../browser/ui/ash/network/data_promo_notification_unittest.cc",
-      "../browser/ui/ash/network/network_portal_notification_controller_unittest.cc",
-      "../browser/ui/ash/network/network_state_notifier_unittest.cc",
-      "../browser/ui/ash/network/tether_notification_presenter_unittest.cc",
-      "../browser/ui/ash/session_controller_client_unittest.cc",
-      "../browser/ui/ash/tablet_mode_client_unittest.cc",
-      "../browser/ui/ash/wallpaper_controller_client_unittest.cc",
-      "../browser/ui/window_sizer/window_sizer_ash_unittest.cc",
-    ]
-    deps += [
-      "//ash:test_support_with_content",
-      "//ash/public/cpp/resources:ash_public_unscaled_resources",
-      "//ash/strings",
-    ]
-  }
-
-  if (use_x11 || use_ozone) {
-    deps += [ "//services/ui/public/cpp/input_devices:test_support" ]
-  }
-
-  if (enable_background_contents) {
-    sources +=
-        [ "../browser/background/background_contents_service_unittest.cc" ]
-  }
-  if (enable_background_mode) {
-    sources += [
-      "../browser/background/background_application_list_model_unittest.cc",
-      "../browser/background/background_mode_manager_unittest.cc",
-      "../browser/background/background_mode_optimizer_unittest.cc",
-    ]
-  }
-
-  if (enable_spellcheck) {
-    sources += [
-      "../browser/spellchecker/spell_check_host_chrome_impl_mac_unittest.cc",
-      "../browser/spellchecker/spellcheck_custom_dictionary_unittest.cc",
-      "../browser/spellchecker/spellcheck_service_unittest.cc",
-      "../browser/spellchecker/spelling_service_client_unittest.cc",
-      "../tools/convert_dict/convert_dict_unittest.cc",
-    ]
-
-    if (!use_browser_spellchecker) {
-      sources +=
-          [ "../browser/spellchecker/spell_check_host_chrome_impl_unittest.cc" ]
-    }
-  }
-
-  if (enable_one_click_signin) {
-    sources += [
-      "../browser/ui/sync/one_click_signin_sync_observer_unittest.cc",
-      "../browser/ui/sync/one_click_signin_sync_starter_unittest.cc",
-    ]
-  }
-
-  if (enable_extensions) {
-    sources += [
-      "../../apps/saved_files_service_unittest.cc",
-      "../../components/drive/drive_api_util_unittest.cc",
-      "../../components/drive/drive_app_registry_unittest.cc",
-      "../../components/drive/drive_uploader_unittest.cc",
-      "../../components/drive/event_logger_unittest.cc",
-      "../../components/drive/service/drive_api_service_unittest.cc",
-      "../../components/drive/service/fake_drive_service_unittest.cc",
-      "../../tools/json_schema_compiler/test/features_generation_unittest.cc",
-      "../browser/apps/app_shim/app_shim_host_mac_unittest.cc",
-      "../browser/apps/app_shim/extension_app_shim_handler_mac_unittest.cc",
-      "../browser/autocomplete/keyword_extensions_delegate_impl_unittest.cc",
-      "../browser/browsing_data/counters/hosted_apps_counter_unittest.cc",
-      "../browser/extensions/active_tab_unittest.cc",
-      "../browser/extensions/activity_log/activity_database_unittest.cc",
-      "../browser/extensions/activity_log/activity_log_enabled_unittest.cc",
-      "../browser/extensions/activity_log/activity_log_policy_unittest.cc",
-      "../browser/extensions/activity_log/activity_log_unittest.cc",
-      "../browser/extensions/activity_log/counting_policy_unittest.cc",
-      "../browser/extensions/activity_log/database_string_table_unittest.cc",
-      "../browser/extensions/activity_log/fullstream_ui_policy_unittest.cc",
-      "../browser/extensions/api/activity_log_private/activity_log_private_api_unittest.cc",
-      "../browser/extensions/api/bookmark_manager_private/bookmark_manager_private_api_unittest.cc",
-      "../browser/extensions/api/bookmarks/bookmark_api_helpers_unittest.cc",
-      "../browser/extensions/api/bookmarks/bookmarks_api_unittest.cc",
-      "../browser/extensions/api/chrome_extensions_api_client_unittest.cc",
-      "../browser/extensions/api/content_settings/content_settings_store_unittest.cc",
-      "../browser/extensions/api/content_settings/content_settings_unittest.cc",
-      "../browser/extensions/api/cookies/cookies_unittest.cc",
-      "../browser/extensions/api/cryptotoken_private/cryptotoken_private_api_unittest.cc",
-      "../browser/extensions/api/declarative/rules_registry_service_unittest.cc",
-      "../browser/extensions/api/declarative/rules_registry_with_cache_unittest.cc",
-      "../browser/extensions/api/declarative_content/chrome_content_rules_registry_unittest.cc",
-      "../browser/extensions/api/declarative_content/content_action_unittest.cc",
-      "../browser/extensions/api/declarative_content/content_condition_unittest.cc",
-      "../browser/extensions/api/declarative_content/declarative_content_condition_tracker_test.cc",
-      "../browser/extensions/api/declarative_content/declarative_content_condition_tracker_test.h",
-      "../browser/extensions/api/declarative_content/declarative_content_css_condition_tracker_unittest.cc",
-      "../browser/extensions/api/declarative_content/declarative_content_is_bookmarked_condition_tracker_unittest.cc",
-      "../browser/extensions/api/declarative_content/declarative_content_page_url_condition_tracker_unittest.cc",
-      "../browser/extensions/api/declarative_net_request/dnr_test_base.cc",
-      "../browser/extensions/api/declarative_net_request/dnr_test_base.h",
-      "../browser/extensions/api/declarative_net_request/rule_indexing_unittest.cc",
-      "../browser/extensions/api/declarative_net_request/ruleset_manager_unittest.cc",
-      "../browser/extensions/api/declarative_net_request/ruleset_matcher_unittest.cc",
-      "../browser/extensions/api/declarative_webrequest/webrequest_action_unittest.cc",
-      "../browser/extensions/api/declarative_webrequest/webrequest_rules_registry_unittest.cc",
-      "../browser/extensions/api/developer_private/developer_private_api_unittest.cc",
-      "../browser/extensions/api/developer_private/extension_info_generator_unittest.cc",
-      "../browser/extensions/api/device_permissions_manager_unittest.cc",
-      "../browser/extensions/api/downloads/downloads_api_unittest.cc",
-      "../browser/extensions/api/extension_action/browser_action_unittest.cc",
-      "../browser/extensions/api/extension_action/extension_action_prefs_unittest.cc",
-      "../browser/extensions/api/file_system/file_system_api_unittest.cc",
-      "../browser/extensions/api/identity/extension_token_key_unittest.cc",
-      "../browser/extensions/api/identity/gaia_web_auth_flow_unittest.cc",
-      "../browser/extensions/api/identity/identity_mint_queue_unittest.cc",
-      "../browser/extensions/api/image_writer_private/destroy_partitions_operation_unittest.cc",
-      "../browser/extensions/api/image_writer_private/operation_manager_unittest.cc",
-      "../browser/extensions/api/image_writer_private/operation_unittest.cc",
-      "../browser/extensions/api/image_writer_private/removable_storage_provider_chromeos_unittest.cc",
-      "../browser/extensions/api/image_writer_private/test_utils.cc",
-      "../browser/extensions/api/image_writer_private/test_utils.h",
-      "../browser/extensions/api/image_writer_private/write_from_file_operation_unittest.cc",
-      "../browser/extensions/api/image_writer_private/write_from_url_operation_unittest.cc",
-      "../browser/extensions/api/language_settings_private/language_settings_private_api_unittest.cc",
-      "../browser/extensions/api/language_settings_private/language_settings_private_delegate_unittest.cc",
-      "../browser/extensions/api/management/management_api_unittest.cc",
-      "../browser/extensions/api/notifications/extension_notification_handler_unittest.cc",
-      "../browser/extensions/api/omnibox/omnibox_unittest.cc",
-      "../browser/extensions/api/passwords_private/passwords_private_delegate_impl_unittest.cc",
-      "../browser/extensions/api/passwords_private/passwords_private_utils_unittest.cc",
-      "../browser/extensions/api/permissions/permissions_api_helpers_unittest.cc",
-      "../browser/extensions/api/permissions/permissions_api_unittest.cc",
-      "../browser/extensions/api/preference/preference_api_prefs_unittest.cc",
-      "../browser/extensions/api/proxy/proxy_api_helpers_unittest.cc",
-      "../browser/extensions/api/runtime/chrome_runtime_api_delegate_unittest.cc",
-      "../browser/extensions/api/safe_browsing_private/safe_browsing_private_event_router_unittest.cc",
-      "../browser/extensions/api/signed_in_devices/id_mapping_helper_unittest.cc",
-      "../browser/extensions/api/signed_in_devices/signed_in_devices_api_unittest.cc",
-      "../browser/extensions/api/signed_in_devices/signed_in_devices_manager_unittest.cc",
-      "../browser/extensions/api/socket/combined_socket_unittest.cc",
-      "../browser/extensions/api/socket/socket_api_unittest.cc",
-      "../browser/extensions/api/socket/tcp_socket_unittest.cc",
-      "../browser/extensions/api/socket/tls_socket_unittest.cc",
-      "../browser/extensions/api/socket/udp_socket_unittest.cc",
-      "../browser/extensions/api/sockets_tcp_server/sockets_tcp_server_api_unittest.cc",
-      "../browser/extensions/api/storage/policy_value_store_unittest.cc",
-      "../browser/extensions/api/storage/settings_sync_unittest.cc",
-      "../browser/extensions/api/streams_private/streams_private_manifest_unittest.cc",
-      "../browser/extensions/api/tabs/tabs_api_unittest.cc",
-      "../browser/extensions/api/web_navigation/frame_navigation_state_unittest.cc",
-      "../browser/extensions/api/web_request/web_request_api_unittest.cc",
-      "../browser/extensions/api/web_request/web_request_event_details_unittest.cc",
-      "../browser/extensions/api/web_request/web_request_permissions_unittest.cc",
-      "../browser/extensions/app_data_migrator_unittest.cc",
-      "../browser/extensions/blacklist_check_unittest.cc",
-      "../browser/extensions/blacklist_state_fetcher_unittest.cc",
-      "../browser/extensions/bookmark_app_helper_unittest.cc",
-      "../browser/extensions/chrome_app_icon_unittest.cc",
-      "../browser/extensions/chrome_app_sorting_unittest.cc",
-      "../browser/extensions/chrome_component_extension_resource_manager_unittest.cc",
-      "../browser/extensions/chrome_content_browser_client_extensions_part_unittest.cc",
-      "../browser/extensions/chrome_extension_function_unittest.cc",
-      "../browser/extensions/chrome_info_map_unittest.cc",
-      "../browser/extensions/component_loader_unittest.cc",
-      "../browser/extensions/convert_user_script_unittest.cc",
-      "../browser/extensions/convert_web_app_unittest.cc",
-      "../browser/extensions/default_apps_unittest.cc",
-      "../browser/extensions/dev_mode_bubble_delegate_unittest.cc",
-      "../browser/extensions/error_console/error_console_unittest.cc",
-      "../browser/extensions/event_router_forwarder_unittest.cc",
-      "../browser/extensions/extension_action_icon_factory_unittest.cc",
-      "../browser/extensions/extension_action_manager_unittest.cc",
-      "../browser/extensions/extension_action_runner_unittest.cc",
-      "../browser/extensions/extension_action_unittest.cc",
-      "../browser/extensions/extension_api_unittest.cc",
-      "../browser/extensions/extension_api_unittest.h",
-      "../browser/extensions/extension_context_menu_model_unittest.cc",
-      "../browser/extensions/extension_error_controller_unittest.cc",
-      "../browser/extensions/extension_function_test_utils.cc",
-      "../browser/extensions/extension_function_test_utils.h",
-      "../browser/extensions/extension_garbage_collector_chromeos_unittest.cc",
-      "../browser/extensions/extension_garbage_collector_unittest.cc",
-      "../browser/extensions/extension_gcm_app_handler_unittest.cc",
-      "../browser/extensions/extension_icon_manager_unittest.cc",
-      "../browser/extensions/extension_install_prompt_unittest.cc",
-      "../browser/extensions/extension_management_test_util.cc",
-      "../browser/extensions/extension_management_test_util.h",
-      "../browser/extensions/extension_management_unittest.cc",
-      "../browser/extensions/extension_message_bubble_controller_unittest.cc",
-      "../browser/extensions/extension_migrator_unittest.cc",
-      "../browser/extensions/extension_navigation_throttle_unittest.cc",
-      "../browser/extensions/extension_prefs_unittest.cc",
-      "../browser/extensions/extension_prefs_unittest.h",
-      "../browser/extensions/extension_protocols_unittest.cc",
-      "../browser/extensions/extension_reenabler_unittest.cc",
-      "../browser/extensions/extension_service_sync_unittest.cc",
-      "../browser/extensions/extension_service_test_base.cc",
-      "../browser/extensions/extension_service_test_base.h",
-      "../browser/extensions/extension_service_test_with_install.cc",
-      "../browser/extensions/extension_service_test_with_install.h",
-      "../browser/extensions/extension_service_unittest.cc",
-      "../browser/extensions/extension_special_storage_policy_unittest.cc",
-      "../browser/extensions/extension_sync_data_unittest.cc",
-      "../browser/extensions/extension_tab_util_unittest.cc",
-      "../browser/extensions/extension_test_message_listener_unittest.cc",
-      "../browser/extensions/extension_user_script_loader_unittest.cc",
-      "../browser/extensions/extension_web_ui_unittest.cc",
-      "../browser/extensions/external_install_error_unittest.cc",
-      "../browser/extensions/external_policy_loader_unittest.cc",
-      "../browser/extensions/external_pref_loader_unittest.cc",
-      "../browser/extensions/external_provider_impl_chromeos_unittest.cc",
-      "../browser/extensions/external_provider_impl_unittest.cc",
-      "../browser/extensions/favicon_downloader_unittest.cc",
-      "../browser/extensions/forced_extensions/installation_tracker_unittest.cc",
-      "../browser/extensions/install_tracker_unittest.cc",
-      "../browser/extensions/install_verifier_unittest.cc",
-      "../browser/extensions/menu_manager_unittest.cc",
-      "../browser/extensions/ntp_overridden_bubble_delegate_unittest.cc",
-      "../browser/extensions/pack_extension_unittest.cc",
-      "../browser/extensions/permission_message_combinations_unittest.cc",
-      "../browser/extensions/permission_messages_unittest.cc",
-      "../browser/extensions/permissions_based_management_policy_provider_unittest.cc",
-      "../browser/extensions/permissions_updater_unittest.cc",
-      "../browser/extensions/policy_extension_reinstaller_unittest.cc",
-      "../browser/extensions/policy_handlers_unittest.cc",
-      "../browser/extensions/scripting_permissions_modifier_unittest.cc",
-      "../browser/extensions/shared_module_service_unittest.cc",
-      "../browser/extensions/standard_management_policy_provider_unittest.cc",
-      "../browser/extensions/system_display/display_info_provider_chromeos_unittest.cc",
-      "../browser/extensions/tab_helper_unittest.cc",
-      "../browser/extensions/update_install_gate_unittest.cc",
-      "../browser/extensions/updater/extension_cache_fake.cc",
-      "../browser/extensions/updater/extension_cache_fake.h",
-      "../browser/extensions/updater/extension_update_client_command_line_config_policy_unittest.cc",
-      "../browser/extensions/updater/extension_updater_unittest.cc",
-      "../browser/extensions/user_script_listener_unittest.cc",
-      "../browser/extensions/warning_badge_service_unittest.cc",
-      "../browser/extensions/webstore_inline_installer_unittest.cc",
-      "../browser/extensions/webstore_installer_unittest.cc",
-      "../browser/extensions/zipfile_installer_unittest.cc",
-      "../browser/media/cast_transport_host_filter_unittest.cc",
-      "../browser/media_galleries/chromeos/mtp_device_object_enumerator_unittest.cc",
-      "../browser/metrics/extensions_metrics_provider_unittest.cc",
-      "../browser/notifications/notification_system_observer_unittest.cc",
-      "../browser/renderer_context_menu/context_menu_content_type_unittest.cc",
-      "../browser/safe_browsing/settings_reset_prompt/settings_reset_prompt_config_unittest.cc",
-      "../browser/safe_browsing/settings_reset_prompt/settings_reset_prompt_model_unittest.cc",
-      "../browser/safe_browsing/settings_reset_prompt/settings_reset_prompt_test_utils.cc",
-      "../browser/safe_browsing/settings_reset_prompt/settings_reset_prompt_test_utils.h",
-      "../browser/safe_browsing/test_extension_event_observer.cc",
-      "../browser/safe_browsing/test_extension_event_observer.h",
-      "../browser/safe_search_api/safe_search_url_checker_unittest.cc",
-      "../browser/ssl/ssl_blocking_page_unittest.cc",
-      "../browser/sync/glue/extensions_activity_monitor_unittest.cc",
-      "../browser/sync_file_system/drive_backend/callback_helper_unittest.cc",
-      "../browser/sync_file_system/drive_backend/callback_tracker_unittest.cc",
-      "../browser/sync_file_system/drive_backend/conflict_resolver_unittest.cc",
-      "../browser/sync_file_system/drive_backend/drive_backend_sync_unittest.cc",
-      "../browser/sync_file_system/drive_backend/drive_backend_test_util.cc",
-      "../browser/sync_file_system/drive_backend/drive_backend_test_util.h",
-      "../browser/sync_file_system/drive_backend/fake_drive_service_helper.cc",
-      "../browser/sync_file_system/drive_backend/fake_drive_service_helper.h",
-      "../browser/sync_file_system/drive_backend/fake_drive_uploader.cc",
-      "../browser/sync_file_system/drive_backend/fake_drive_uploader.h",
-      "../browser/sync_file_system/drive_backend/fake_sync_worker.cc",
-      "../browser/sync_file_system/drive_backend/fake_sync_worker.h",
-      "../browser/sync_file_system/drive_backend/leveldb_wrapper_unittest.cc",
-      "../browser/sync_file_system/drive_backend/list_changes_task_unittest.cc",
-      "../browser/sync_file_system/drive_backend/local_to_remote_syncer_unittest.cc",
-      "../browser/sync_file_system/drive_backend/metadata_database_index_on_disk_unittest.cc",
-      "../browser/sync_file_system/drive_backend/metadata_database_index_unittest.cc",
-      "../browser/sync_file_system/drive_backend/metadata_database_unittest.cc",
-      "../browser/sync_file_system/drive_backend/metadata_db_migration_util_unittest.cc",
-      "../browser/sync_file_system/drive_backend/register_app_task_unittest.cc",
-      "../browser/sync_file_system/drive_backend/remote_to_local_syncer_unittest.cc",
-      "../browser/sync_file_system/drive_backend/sync_engine_initializer_unittest.cc",
-      "../browser/sync_file_system/drive_backend/sync_engine_unittest.cc",
-      "../browser/sync_file_system/drive_backend/sync_task_manager_unittest.cc",
-      "../browser/sync_file_system/drive_backend/sync_worker_unittest.cc",
-      "../browser/sync_file_system/drive_backend/task_dependency_manager_unittest.cc",
-      "../browser/sync_file_system/fake_remote_change_processor.cc",
-      "../browser/sync_file_system/fake_remote_change_processor.h",
-      "../browser/sync_file_system/file_change_unittest.cc",
-      "../browser/sync_file_system/local/canned_syncable_file_system.cc",
-      "../browser/sync_file_system/local/canned_syncable_file_system.h",
-      "../browser/sync_file_system/local/local_file_change_tracker_unittest.cc",
-      "../browser/sync_file_system/local/local_file_sync_context_unittest.cc",
-      "../browser/sync_file_system/local/local_file_sync_service_unittest.cc",
-      "../browser/sync_file_system/local/local_file_sync_status_unittest.cc",
-      "../browser/sync_file_system/local/mock_sync_status_observer.cc",
-      "../browser/sync_file_system/local/mock_sync_status_observer.h",
-      "../browser/sync_file_system/local/syncable_file_operation_runner_unittest.cc",
-      "../browser/sync_file_system/local/syncable_file_system_unittest.cc",
-      "../browser/sync_file_system/logger_unittest.cc",
-      "../browser/sync_file_system/mock_local_change_processor.cc",
-      "../browser/sync_file_system/mock_local_change_processor.h",
-      "../browser/sync_file_system/mock_remote_change_processor.cc",
-      "../browser/sync_file_system/mock_remote_change_processor.h",
-      "../browser/sync_file_system/mock_remote_file_sync_service.cc",
-      "../browser/sync_file_system/mock_remote_file_sync_service.h",
-      "../browser/sync_file_system/subtree_set_unittest.cc",
-      "../browser/sync_file_system/sync_file_system_service_unittest.cc",
-      "../browser/sync_file_system/sync_file_system_test_util.cc",
-      "../browser/sync_file_system/sync_file_system_test_util.h",
-      "../browser/sync_file_system/sync_process_runner_unittest.cc",
-      "../browser/sync_file_system/syncable_file_system_util_unittest.cc",
-      "../browser/web_applications/web_app_mac_unittest.mm",
-      "../browser/web_applications/web_app_unittest.cc",
-      "../common/extensions/api/commands/commands_manifest_unittest.cc",
-      "../common/extensions/api/common_extension_api_unittest.cc",
-      "../common/extensions/api/extension_action/browser_action_manifest_unittest.cc",
-      "../common/extensions/api/extension_action/page_action_manifest_unittest.cc",
-      "../common/extensions/api/storage/storage_schema_manifest_handler_unittest.cc",
-      "../common/extensions/chrome_extensions_client_unittest.cc",
-      "../common/extensions/chrome_manifest_url_handlers_unittest.cc",
-      "../common/extensions/command_unittest.cc",
-      "../common/extensions/extension_unittest.cc",
-      "../common/extensions/feature_switch_unittest.cc",
-      "../common/extensions/manifest_handlers/app_theme_color_manifest_unittest.cc",
-      "../common/extensions/manifest_handlers/automation_unittest.cc",
-      "../common/extensions/manifest_handlers/content_scripts_manifest_unittest.cc",
-      "../common/extensions/manifest_handlers/exclude_matches_manifest_unittest.cc",
-      "../common/extensions/manifest_handlers/settings_overrides_handler_unittest.cc",
-      "../common/extensions/manifest_handlers/ui_overrides_handler_unittest.cc",
-      "../common/extensions/manifest_tests/chrome_manifest_test.cc",
-      "../common/extensions/manifest_tests/chrome_manifest_test.h",
-      "../common/extensions/manifest_tests/extension_manifests_about_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_action_key_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_background_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_chromepermission_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_contentsecuritypolicy_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_default_extent_path_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_devtools_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_dummy_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_experimental_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_homepage_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_icons_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_initvalue_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_isolatedapp_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_kiosk_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_launch_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_manifest_version_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_offline_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_old_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_options_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_override_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_platformapp_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_portsinpermissions_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_requirements_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_ui_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_update_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_validapp_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_web_accessible_resources_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_web_unittest.cc",
-      "../common/extensions/manifest_tests/extension_manifests_webview_accessible_resources_unittest.cc",
-      "../common/extensions/manifest_unittest.cc",
-      "../common/extensions/permissions/chrome_permission_message_provider_unittest.cc",
-      "../common/extensions/permissions/chrome_permission_message_rules_unittest.cc",
-      "../common/extensions/permissions/media_galleries_permission_unittest.cc",
-      "../common/extensions/permissions/permission_set_unittest.cc",
-      "../common/extensions/permissions/permissions_data_unittest.cc",
-      "../common/extensions/permissions/settings_override_permission_unittest.cc",
-      "../common/extensions/sync_type_unittest.cc",
-      "../renderer/extensions/chrome_native_extension_bindings_system_unittest.cc",
-      "../renderer/extensions/custom_types_unittest.cc",
-      "../renderer/extensions/extension_hooks_delegate_unittest.cc",
-      "../renderer/extensions/extension_localization_peer_unittest.cc",
-      "../renderer/extensions/extension_process_policy_unittest.cc",
-      "../renderer/extensions/i18n_hooks_delegate_unittest.cc",
-      "../renderer/extensions/renderer_permissions_policy_delegate_unittest.cc",
-      "../renderer/extensions/tabs_hooks_delegate_unittest.cc",
-      "../renderer/media/cast_ipc_dispatcher_unittest.cc",
-      "../utility/image_writer/image_writer_unittest.cc",
-    ]
-    deps += [
-      "//chrome/common/extensions/api",
-      "//extensions:extensions_resources",
-      "//extensions/browser:test_support",
-      "//extensions/common",
-      "//extensions/renderer:unit_test_support",
-      "//extensions/strings",
-      "//google_apis",
-      "//media/cast:test_support",
-
-      # This will add all of the unit tests for the schema compiler to this
-      # target.
-      "//tools/json_schema_compiler/test:unit_tests",
-    ]
-    if (enable_service_discovery) {
-      sources += [ "../browser/extensions/api/mdns/mdns_api_unittest.cc" ]
-    }
-    if (is_win) {
-      sources +=
-          [ "../browser/extensions/external_registry_loader_win_unittest.cc" ]
-    }
-    if (is_chromeos) {
-      sources += [
-        "../browser/chromeos/login/easy_unlock/easy_unlock_app_manager_unittest.cc",
-        "../browser/chromeos/login/easy_unlock/easy_unlock_auth_attempt_unittest.cc",
-        "../browser/chromeos/login/easy_unlock/easy_unlock_notification_controller_chromeos_unittest.cc",
-        "../browser/chromeos/login/easy_unlock/easy_unlock_screenlock_state_handler_unittest.cc",
-        "../browser/chromeos/login/easy_unlock/easy_unlock_service_unittest_chromeos.cc",
-        "../browser/extensions/api/easy_unlock_private/easy_unlock_private_api_chromeos_unittest.cc",
-        "../browser/extensions/api/file_system/consent_provider_unittest.cc",
-      ]
-    } else {
-      sources += [
-        "../browser/extensions/api/enterprise_reporting_private/chrome_desktop_report_request_helper_unittest.cc",
-        "../browser/extensions/api/enterprise_reporting_private/enterprise_reporting_private_unittest.cc",
-        "../browser/extensions/api/messaging/native_message_process_host_unittest.cc",
-        "../browser/extensions/api/messaging/native_messaging_host_manifest_unittest.cc",
-        "../browser/extensions/api/messaging/native_messaging_policy_handler_unittest.cc",
-      ]
-    }
-  }
-  if (use_aura) {
-    deps += [
-      "//ui/aura:test_support",
-      "//ui/views:test_support",
-      "//ui/wm",
-    ]
-  }
-  if (!is_chromeos && is_linux) {
-    sources += [
-      "../browser/password_manager/native_backend_kwallet_x_unittest.cc",
-      "../browser/shell_integration_linux_unittest.cc",
-      "../browser/ui/input_method/input_method_engine_unittest.cc",
-      "../browser/ui/libgtkui/select_file_dialog_impl_gtk_unittest.cc",
-    ]
-    deps += [ "//build/config/linux/gtk" ]
-  }
-
-  if (is_android || is_chromeos) {
-    sources += [ "../browser/media/protected_media_identifier_permission_context_unittest.cc" ]
-  } else {
-    sources += [
-      "../browser/lifetime/switch_utils_unittest.cc",
-      "../browser/net/disk_cache_dir_policy_handler_unittest.cc",
-      "../browser/profiles/profile_list_desktop_unittest.cc",
-      "../browser/profiles/profile_statistics_unittest.cc",
-      "../browser/ui/startup/startup_browser_creator_impl_unittest.cc",
-      "../browser/ui/startup/startup_tab_provider_unittest.cc",
-    ]
-  }
-  if (use_gio) {
-    configs += [ "//build/linux:gio_config" ]
-  }
-  if (!is_chromeos && !use_ozone && is_linux) {
-    deps += [ "//chrome/browser/ui/libgtkui" ]
-  }
-
-  if (enable_mdns) {
-    sources += [
-      "../browser/local_discovery/local_domain_resolver_unittest.cc",
-      "../browser/local_discovery/service_discovery_client_unittest.cc",
-      "../browser/printing/cloud_print/privet_device_lister_unittest.cc",
-      "../browser/printing/cloud_print/privet_local_printer_lister_unittest.cc",
-    ]
-  }
-  if (enable_service_discovery) {
-    sources += [
-      "../browser/devtools/device/cast_device_provider_unittest.cc",
-      "../browser/local_discovery/service_discovery_client_mac_unittest.mm",
-      "../browser/printing/cloud_print/cloud_print_printer_list_unittest.cc",
-      "../browser/printing/cloud_print/gcd_api_flow_unittest.cc",
-      "../browser/printing/cloud_print/privet_confirm_api_flow_unittest.cc",
-      "../browser/printing/cloud_print/privet_http_unittest.cc",
-      "../browser/printing/cloud_print/privet_notifications_unittest.cc",
-      "../browser/printing/cloud_print/privet_url_fetcher_unittest.cc",
-    ]
-  }
-
-  if (safe_browsing_mode > 0) {
-    sources += [
-      "../browser/safe_browsing/certificate_reporting_service_unittest.cc",
-      "../browser/safe_browsing/safe_browsing_blocking_page_unittest.cc",
-      "../browser/safe_browsing/threat_details_unittest.cc",
-      "../browser/safe_browsing/ui_manager_unittest.cc",
-      "../common/safe_browsing/file_type_policies_test_util.cc",
-      "../common/safe_browsing/file_type_policies_test_util.h",
-      "../common/safe_browsing/file_type_policies_unittest.cc",
-    ]
-  }
-  if (safe_browsing_mode == 1) {
-    # TODO(sgurun): enable tests for safe_browsing==2.
-    sources += [
-      "../browser/safe_browsing/browser_feature_extractor_unittest.cc",
-      "../browser/safe_browsing/chrome_password_protection_service_unittest.cc",
-      "../browser/safe_browsing/chunk_range_unittest.cc",
-      "../browser/safe_browsing/client_side_detection_host_unittest.cc",
-      "../browser/safe_browsing/client_side_detection_service_unittest.cc",
-      "../browser/safe_browsing/client_side_model_loader_unittest.cc",
-      "../browser/safe_browsing/download_protection/check_client_download_request_unittest.cc",
-      "../browser/safe_browsing/download_protection/disk_image_type_sniffer_mac_unittest.cc",
-      "../browser/safe_browsing/download_protection/download_feedback_service_unittest.cc",
-      "../browser/safe_browsing/download_protection/download_feedback_unittest.cc",
-      "../browser/safe_browsing/download_protection/download_protection_service_unittest.cc",
-      "../browser/safe_browsing/download_protection/path_sanitizer_unittest.cc",
-      "../browser/safe_browsing/download_protection/two_phase_uploader_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/binary_integrity_analyzer_mac_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/binary_integrity_analyzer_win_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/binary_integrity_incident_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/delayed_callback_runner_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/download_metadata_manager_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/environment_data_collection_win_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/extension_data_collection_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/incident_report_uploader_impl_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/incident_reporting_service_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/last_download_finder_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/mock_incident_receiver.cc",
-      "../browser/safe_browsing/incident_reporting/mock_incident_receiver.h",
-      "../browser/safe_browsing/incident_reporting/module_integrity_unittest_util_win.cc",
-      "../browser/safe_browsing/incident_reporting/module_integrity_unittest_util_win.h",
-      "../browser/safe_browsing/incident_reporting/module_integrity_verifier_win_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/platform_state_store_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/platform_state_store_win_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/preference_validation_delegate_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/resource_request_detector_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/state_store_unittest.cc",
-      "../browser/safe_browsing/incident_reporting/tracked_preference_incident_unittest.cc",
-      "../browser/safe_browsing/local_database_manager_unittest.cc",
-      "../browser/safe_browsing/local_two_phase_testserver.cc",
-      "../browser/safe_browsing/local_two_phase_testserver.h",
-      "../browser/safe_browsing/notification_image_reporter_unittest.cc",
-      "../browser/safe_browsing/protocol_manager_unittest.cc",
-      "../browser/safe_browsing/protocol_parser_unittest.cc",
-      "../browser/safe_browsing/safe_browsing_database_unittest.cc",
-      "../browser/safe_browsing/safe_browsing_navigation_observer_unittest.cc",
-      "../browser/safe_browsing/safe_browsing_store_file_unittest.cc",
-      "../browser/safe_browsing/safe_browsing_store_unittest.cc",
-      "../browser/safe_browsing/signature_evaluator_mac_unittest.cc",
-      "../common/safe_browsing/binary_feature_extractor_mac_unittest.cc",
-      "../common/safe_browsing/binary_feature_extractor_unittest.cc",
-      "../common/safe_browsing/binary_feature_extractor_win_unittest.cc",
-      "../common/safe_browsing/download_protection_util_unittest.cc",
-      "../common/safe_browsing/ipc_protobuf_message_test_messages.h",
-      "../common/safe_browsing/ipc_protobuf_message_unittest.cc",
-      "../common/safe_browsing/mach_o_image_reader_mac_unittest.cc",
-      "../common/safe_browsing/pe_image_reader_win_unittest.cc",
-      "../renderer/safe_browsing/features_unittest.cc",
-      "../renderer/safe_browsing/murmurhash3_util_unittest.cc",
-      "../renderer/safe_browsing/phishing_term_feature_extractor_unittest.cc",
-      "../renderer/safe_browsing/phishing_url_feature_extractor_unittest.cc",
-      "../renderer/safe_browsing/scorer_unittest.cc",
-      "../utility/safe_browsing/mac/dmg_test_utils.cc",
-      "../utility/safe_browsing/mac/dmg_test_utils.h",
-      "../utility/safe_browsing/mac/hfs_unittest.cc",
-      "../utility/safe_browsing/mac/read_stream_unittest.cc",
-      "../utility/safe_browsing/mac/udif_unittest.cc",
-    ]
-    deps += [
-      ":test_proto",
-      "//chrome/services/file_util/public/cpp:unit_tests",
-      "//components/safe_browsing:base_ping_manager_unittest",
-      "//components/safe_browsing/browser:unittests",
-      "//components/safe_browsing/db:v4_test_util",
-      "//components/safe_browsing/renderer:websocket_sb_handshake_throttle_unittest",
-    ]
-
-    if (is_mac) {
-      deps += [ ":mac_safe_browsing_test_data" ]
-      data += [ "$root_out_dir/test_data/chrome/safe_browsing_dmg/" ]
-    }
-  }
-
-  if (enable_plugins) {
-    sources += [
-      "../browser/component_updater/component_installers_unittest.cc",
-      "../browser/metrics/chrome_stability_metrics_provider_unittest.cc",
-      "../browser/metrics/plugin_metrics_provider_unittest.cc",
-      "../browser/plugins/chrome_plugin_service_filter_unittest.cc",
-      "../browser/plugins/flash_download_interception_unittest.cc",
-      "../browser/plugins/flash_temporary_permission_tracker_unittest.cc",
-      "../browser/plugins/plugin_finder_unittest.cc",
-      "../browser/plugins/plugin_info_host_impl_unittest.cc",
-      "../browser/plugins/plugin_installer_unittest.cc",
-      "../browser/plugins/plugin_metadata_unittest.cc",
-      "../browser/plugins/plugin_prefs_unittest.cc",
-      "../common/pepper_permission_util_unittest.cc",
-    ]
-  }
-
-  if (enable_print_preview) {
-    sources += [
-      "../browser/printing/print_job_unittest.cc",
-      "../browser/printing/print_preview_dialog_controller_unittest.cc",
-      "../browser/printing/print_preview_test.cc",
-      "../browser/printing/print_preview_test.h",
-      "../browser/printing/print_test_utils.cc",
-      "../browser/printing/print_test_utils.h",
-      "../browser/printing/print_view_manager_unittest.cc",
-      "../browser/printing/test_print_job.cc",
-      "../browser/printing/test_print_job.h",
-      "../browser/printing/test_printer_query.cc",
-      "../browser/printing/test_printer_query.h",
-      "../browser/ui/webui/print_preview/extension_printer_handler_unittest.cc",
-      "../browser/ui/webui/print_preview/pdf_printer_handler_unittest.cc",
-      "../browser/ui/webui/print_preview/pdf_printer_handler_win_unittest.cc",
-      "../browser/ui/webui/print_preview/print_preview_handler_unittest.cc",
-      "../browser/ui/webui/print_preview/print_preview_ui_unittest.cc",
-      "../browser/ui/webui/print_preview/print_preview_utils_unittest.cc",
-    ]
-
-    deps += [
-      "//ipc",
-      "//printing",
-      "//printing:test_support",
-    ]
-
-    if (!is_chromeos) {
-      sources += [
-        "../browser/printing/cloud_print/cloud_print_proxy_service_unittest.cc",
-        "../common/cloud_print/cloud_print_helpers_unittest.cc",
-        "../common/service_process_util_mac_unittest.mm",
-        "../common/service_process_util_unittest.cc",
-        "../service/cloud_print/cloud_print_service_helpers_unittest.cc",
-        "../service/cloud_print/cloud_print_token_store_unittest.cc",
-        "../service/cloud_print/cloud_print_url_fetcher_unittest.cc",
-        "../service/cloud_print/connector_settings_unittest.cc",
-        "../service/cloud_print/printer_job_handler_unittest.cc",
-        "../service/cloud_print/printer_job_queue_handler_unittest.cc",
-        "../service/service_ipc_server_unittest.cc",
-        "../service/service_process_prefs_unittest.cc",
-      ]
-    }
-  }
-
-  if (enable_captive_portal_detection) {
-    sources += [
-      "../browser/captive_portal/captive_portal_service_unittest.cc",
-      "../browser/captive_portal/captive_portal_tab_helper_unittest.cc",
-      "../browser/captive_portal/captive_portal_tab_reloader_unittest.cc",
-    ]
-  }
-  if (enable_session_service) {
-    sources += [
-      "../browser/sessions/session_restore_observer_unittest.cc",
-      "../browser/sessions/session_restore_stats_collector_unittest.cc",
-      "../browser/sessions/session_service_unittest.cc",
-      "../browser/sessions/tab_loader_unittest.cc",
-    ]
-
-    if (is_mac && !mac_views_browser) {
-      sources += [
-        "../browser/ui/startup/session_crashed_infobar_delegate_unittest.cc",
-      ]
-    }
-  }
-  if (is_chromeos) {
-    deps += [
-      "//chrome/browser/chromeos:unit_tests",
-      "//chromeos/ime:gencode",
-    ]
-    sources -=
-        [ "../browser/policy/cloud/user_policy_signin_service_unittest.cc" ]
-    sources += [
-      "base/ash_test_environment_chrome.cc",
-      "base/ash_test_environment_chrome.h",
-    ]
-  }
-  if (use_x11) {
-    deps += [ "//ui/events/devices" ]
-  } else {
-    sources -= [ "../browser/password_manager/password_store_x_unittest.cc" ]
-  }
-  if (use_gnome_keyring && current_cpu == "x64") {
-    # Only add this test for 64 bit builds because otherwise we need the 32
-    # bit library on 64 bit systems when running this test.
-    sources +=
-        [ "../browser/password_manager/native_backend_gnome_x_unittest.cc" ]
-    configs += [
-      "//components/os_crypt:gnome_keyring",
-      "//components/os_crypt:gnome_keyring_direct",
-    ]
-  }
-  if (is_linux && !is_chromeos && !use_ozone) {
-    sources +=
-        [ "../browser/password_manager/native_backend_libsecret_unittest.cc" ]
-    deps += [ "//third_party/libsecret" ]
-  }
-  if (is_linux && use_aura) {
-    deps += [ "//ui/aura:test_support" ]
-    if (use_dbus) {
-      deps += [ "//dbus:test_support" ]
-    }
-  }
-  if (is_linux && is_chrome_branded && current_cpu == "x86") {
-    ldflags = [ "-Wl,--strip-debug" ]
-  }
-  if (is_mac) {
-    sources -= [
-      # This tests the function GetSpellCheckLanguages which is not used on
-      # Mac.
-      "../browser/spellchecker/spellcheck_service_unittest.cc",
-      "../browser/ui/tests/ui_gfx_image_unittest.cc",
-
-      # This tests Chrome's spellchecker which Mac doesn't use.
-      "../tools/convert_dict/convert_dict_unittest.cc",
-    ]
-
-    # The test fetches resources which means Mac need the app bundle to exist
-    # on disk so it can pull from it.
-    deps += [
-      "//third_party/google_toolbox_for_mac",
-      "//third_party/ocmock",
-    ]
-
-    sources +=
-        [ "../browser/ui/cocoa/applescript/apple_event_util_unittest.mm" ]
-
-    # TODO(ellyjones): remove this needless if (true). These files are
-    # test sources for the cocoa code; this block should be moved back inline at
-    # the place this variable is used below.
-    if (true) {
-      cocoa_test_sources = [
-        "../browser/ui/cocoa/accelerators_cocoa_unittest.mm",
-        "../browser/ui/cocoa/animatable_image_unittest.mm",
-        "../browser/ui/cocoa/animatable_view_unittest.mm",
-        "../browser/ui/cocoa/app_menu/app_menu_button_cell_unittest.mm",
-        "../browser/ui/cocoa/app_menu/app_menu_controller_unittest.mm",
-        "../browser/ui/cocoa/app_menu/menu_tracked_root_view_unittest.mm",
-        "../browser/ui/cocoa/autofill/autofill_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/autofill/autofill_tooltip_controller_unittest.mm",
-        "../browser/ui/cocoa/autofill/credit_card_autofill_touch_bar_controller_unittest.mm",
-        "../browser/ui/cocoa/autofill/password_generation_popup_view_cocoa_unittest.mm",
-        "../browser/ui/cocoa/background_gradient_view_unittest.mm",
-        "../browser/ui/cocoa/base_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_all_tabs_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_bridge_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_folder_button_cell_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_folder_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_folder_hover_state_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_folder_view_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_folder_window_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_toolbar_view_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_unittest_helper.h",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_unittest_helper.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bar_view_cocoa_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_button_cell_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_button_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_editor_base_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_folder_target_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_menu_bridge_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_menu_cocoa_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_model_observer_for_cocoa_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_name_folder_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_tree_browser_cell_unittest.mm",
-        "../browser/ui/cocoa/browser/zoom_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/browser_window_cocoa_unittest.mm",
-        "../browser/ui/cocoa/browser_window_controller_unittest.mm",
-        "../browser/ui/cocoa/browser_window_layout_unittest.mm",
-        "../browser/ui/cocoa/browser_window_touch_bar_unittest.mm",
-        "../browser/ui/cocoa/browser_window_utils_unittest.mm",
-        "../browser/ui/cocoa/bubble_anchor_helper_views_unittest.mm",
-        "../browser/ui/cocoa/bubble_view_unittest.mm",
-        "../browser/ui/cocoa/chrome_browser_window_unittest.mm",
-        "../browser/ui/cocoa/clickhold_button_cell_unittest.mm",
-        "../browser/ui/cocoa/color_panel_cocoa_unittest.mm",
-        "../browser/ui/cocoa/confirm_quit_panel_controller_unittest.mm",
-        "../browser/ui/cocoa/constrained_window/constrained_window_alert_unittest.mm",
-        "../browser/ui/cocoa/constrained_window/constrained_window_button_unittest.mm",
-        "../browser/ui/cocoa/constrained_window/constrained_window_custom_window_unittest.mm",
-        "../browser/ui/cocoa/constrained_window/constrained_window_sheet_controller_unittest.mm",
-        "../browser/ui/cocoa/content_settings/collected_cookies_mac_unittest.mm",
-        "../browser/ui/cocoa/content_settings/cookie_details_unittest.mm",
-        "../browser/ui/cocoa/content_settings/cookie_details_view_controller_unittest.mm",
-        "../browser/ui/cocoa/download/download_item_button_unittest.mm",
-        "../browser/ui/cocoa/download/download_item_cell_unittest.mm",
-        "../browser/ui/cocoa/download/download_item_controller_unittest.mm",
-        "../browser/ui/cocoa/download/download_shelf_controller_unittest.mm",
-        "../browser/ui/cocoa/download/download_shelf_mac_unittest.mm",
-        "../browser/ui/cocoa/download/download_shelf_view_cocoa_unittest.mm",
-        "../browser/ui/cocoa/download/download_util_mac_unittest.mm",
-        "../browser/ui/cocoa/download/md_download_item_view_unittest.mm",
-        "../browser/ui/cocoa/draggable_button_unittest.mm",
-        "../browser/ui/cocoa/extensions/browser_actions_container_view_unittest.mm",
-        "../browser/ui/cocoa/extensions/chooser_dialog_cocoa_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/extension_install_prompt_test_utils.h",
-        "../browser/ui/cocoa/extensions/extension_install_prompt_test_utils.mm",
-        "../browser/ui/cocoa/extensions/extension_install_view_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/extension_installed_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/media_galleries_dialog_cocoa_unittest.mm",
-        "../browser/ui/cocoa/extensions/toolbar_actions_bar_bubble_mac_unittest.mm",
-        "../browser/ui/cocoa/find_bar/find_bar_bridge_unittest.mm",
-        "../browser/ui/cocoa/find_bar/find_bar_cocoa_controller_unittest.mm",
-        "../browser/ui/cocoa/find_bar/find_bar_text_field_cell_unittest.mm",
-        "../browser/ui/cocoa/find_bar/find_bar_text_field_unittest.mm",
-        "../browser/ui/cocoa/find_bar/find_bar_view_unittest.mm",
-        "../browser/ui/cocoa/find_pasteboard_unittest.mm",
-        "../browser/ui/cocoa/first_run_dialog_controller_unittest.mm",
-        "../browser/ui/cocoa/floating_bar_backing_view_unittest.mm",
-        "../browser/ui/cocoa/framed_browser_window_unittest.mm",
-        "../browser/ui/cocoa/fullscreen/fullscreen_toolbar_controller_unittest.mm",
-        "../browser/ui/cocoa/fullscreen_window_unittest.mm",
-        "../browser/ui/cocoa/gradient_button_cell_unittest.mm",
-        "../browser/ui/cocoa/harmony_button_unittest.mm",
-        "../browser/ui/cocoa/history_menu_bridge_unittest.mm",
-        "../browser/ui/cocoa/history_menu_cocoa_controller_unittest.mm",
-        "../browser/ui/cocoa/history_overlay_controller_unittest.mm",
-        "../browser/ui/cocoa/hover_close_button_unittest.mm",
-        "../browser/ui/cocoa/hung_renderer_controller_unittest.mm",
-        "../browser/ui/cocoa/image_button_cell_unittest.mm",
-        "../browser/ui/cocoa/info_bubble_view_unittest.mm",
-        "../browser/ui/cocoa/info_bubble_window_unittest.mm",
-        "../browser/ui/cocoa/infobars/confirm_infobar_controller_unittest.mm",
-        "../browser/ui/cocoa/infobars/infobar_background_view_unittest.mm",
-        "../browser/ui/cocoa/infobars/infobar_container_controller_unittest.mm",
-        "../browser/ui/cocoa/infobars/mock_confirm_infobar_delegate.cc",
-        "../browser/ui/cocoa/infobars/mock_confirm_infobar_delegate.h",
-        "../browser/ui/cocoa/infobars/translate_infobar_unittest.mm",
-        "../browser/ui/cocoa/location_bar/autocomplete_text_field_cell_unittest.mm",
-        "../browser/ui/cocoa/location_bar/autocomplete_text_field_editor_unittest.mm",
-        "../browser/ui/cocoa/location_bar/autocomplete_text_field_unittest.mm",
-        "../browser/ui/cocoa/location_bar/autocomplete_text_field_unittest_helper.h",
-        "../browser/ui/cocoa/location_bar/autocomplete_text_field_unittest_helper.mm",
-        "../browser/ui/cocoa/location_bar/image_decoration_unittest.mm",
-        "../browser/ui/cocoa/location_bar/keyword_hint_decoration_unittest.mm",
-        "../browser/ui/cocoa/location_bar/location_bar_view_mac_unittest.mm",
-        "../browser/ui/cocoa/location_bar/manage_passwords_decoration_unittest.mm",
-        "../browser/ui/cocoa/location_bar/page_info_bubble_decoration_unittest.mm",
-        "../browser/ui/cocoa/location_bar/selected_keyword_decoration_unittest.mm",
-        "../browser/ui/cocoa/location_bar/zoom_decoration_unittest.mm",
-        "../browser/ui/cocoa/md_hover_button_unittest.mm",
-        "../browser/ui/cocoa/media_picker/desktop_media_picker_controller_unittest.mm",
-        "../browser/ui/cocoa/menu_button_unittest.mm",
-        "../browser/ui/cocoa/notifications/notification_builder_mac_unittest.mm",
-        "../browser/ui/cocoa/notifications/notification_response_builder_mac_unittest.mm",
-        "../browser/ui/cocoa/nsmenuitem_additions_unittest.mm",
-        "../browser/ui/cocoa/nsview_additions_unittest.mm",
-        "../browser/ui/cocoa/omnibox/omnibox_popup_cell_unittest.mm",
-        "../browser/ui/cocoa/omnibox/omnibox_popup_matrix_unittest.mm",
-        "../browser/ui/cocoa/omnibox/omnibox_popup_separator_view_unittest.mm",
-        "../browser/ui/cocoa/omnibox/omnibox_popup_view_mac_unittest.mm",
-        "../browser/ui/cocoa/omnibox/omnibox_view_mac_unittest.mm",
-        "../browser/ui/cocoa/page_info/page_info_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/page_info/permission_selector_button_unittest.mm",
-        "../browser/ui/cocoa/profiles/avatar_button_controller_unittest.mm",
-        "../browser/ui/cocoa/profiles/avatar_button_unittest.mm",
-        "../browser/ui/cocoa/profiles/avatar_icon_controller_unittest.mm",
-        "../browser/ui/cocoa/profiles/profile_menu_controller_unittest.mm",
-        "../browser/ui/cocoa/profiles/user_manager_mac_unittest.mm",
-        "../browser/ui/cocoa/scoped_menu_bar_lock_unittest.mm",
-        "../browser/ui/cocoa/screen_capture_notification_ui_cocoa_unittest.mm",
-        "../browser/ui/cocoa/spinner_view_unittest.mm",
-        "../browser/ui/cocoa/status_bubble_mac_unittest.mm",
-        "../browser/ui/cocoa/status_icons/status_icon_mac_unittest.mm",
-        "../browser/ui/cocoa/styled_text_field_cell_unittest.mm",
-        "../browser/ui/cocoa/styled_text_field_unittest.mm",
-        "../browser/ui/cocoa/tab_contents/sad_tab_mac_unittest.mm",
-        "../browser/ui/cocoa/tabbed_browser_window_unittest.mm",
-        "../browser/ui/cocoa/tabs/alert_indicator_button_cocoa_unittest.mm",
-        "../browser/ui/cocoa/tabs/tab_controller_unittest.mm",
-        "../browser/ui/cocoa/tabs/tab_strip_controller_unittest.mm",
-        "../browser/ui/cocoa/tabs/tab_strip_view_unittest.mm",
-        "../browser/ui/cocoa/tabs/tab_view_unittest.mm",
-        "../browser/ui/cocoa/test/cocoa_profile_test.h",
-        "../browser/ui/cocoa/test/cocoa_profile_test.mm",
-        "../browser/ui/cocoa/test/run_loop_testing_unittest.mm",
-        "../browser/ui/cocoa/test/styled_text_field_test_helper.h",
-        "../browser/ui/cocoa/test/styled_text_field_test_helper.mm",
-        "../browser/ui/cocoa/toolbar/app_toolbar_button_cell_unittest.mm",
-        "../browser/ui/cocoa/toolbar/app_toolbar_button_unittest.mm",
-        "../browser/ui/cocoa/toolbar/reload_button_unittest_cocoa.mm",
-        "../browser/ui/cocoa/toolbar/toolbar_button_unittest.mm",
-        "../browser/ui/cocoa/toolbar/toolbar_controller_unittest.mm",
-        "../browser/ui/cocoa/toolbar/toolbar_view_unittest.mm",
-        "../browser/ui/cocoa/translate/translate_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/url_drop_target_unittest.mm",
-        "../browser/ui/cocoa/vertical_gradient_view_unittest.mm",
-        "../browser/ui/cocoa/view_resizer_pong.h",
-        "../browser/ui/cocoa/view_resizer_pong.mm",
-        "../browser/ui/cocoa/window_size_autosaver_unittest.mm",
-      ]
-    }
-
-    sources += cocoa_test_sources
-
-    if (mac_views_browser) {
-      sources -= [
-        "../browser/ui/cocoa/bookmarks/bookmark_all_tabs_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_editor_base_controller_unittest.mm",
-        "../browser/ui/cocoa/bookmarks/bookmark_editor_controller_unittest.mm",
-        "../browser/ui/cocoa/content_settings/collected_cookies_mac_unittest.mm",
-        "../browser/ui/cocoa/content_settings/cookie_details_unittest.mm",
-        "../browser/ui/cocoa/content_settings/cookie_details_view_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/chooser_dialog_cocoa_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/extension_install_view_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/extension_installed_bubble_controller_unittest.mm",
-        "../browser/ui/cocoa/extensions/media_galleries_dialog_cocoa_unittest.mm",
-        "../browser/ui/cocoa/page_info/page_info_bubble_controller_unittest.mm",
-      ]
-    }
-
-    # TODO(mark): We really want this for all non-static library targets,
-    # but when we tried to pull it up to the common.gypi level, it broke
-    # other things like the ui and startup tests. *shrug*
-    ldflags = [ "-Wl,-ObjC" ]
-  }
-  if (!is_mac) {
-    deps += [
-      "//chrome:packed_resources",
-      "//chrome/tools/convert_dict:lib",
-      "//third_party/hunspell",
-    ]
-  }
-  if (is_win || is_mac || is_chromeos) {
-    sources += [ "../browser/extensions/api/networking_private/networking_private_crypto_unittest.cc" ]
-  }
-  if (enable_rlz_support) {
-    sources += [ "../browser/rlz/chrome_rlz_tracker_delegate_unittest.cc" ]
-    deps += [
-      "//chrome/browser:rlz",
-      "//components/rlz",
-      "//rlz:test_support",
-    ]
-  }
-  if (is_win) {
-    if (!is_component_build) {
-      # The PDB gets too large for incremental linking.
-      configs -= [ "//build/config/win:default_incremental_linking" ]
-      configs +=
-          [ "//build/config/win:default_large_module_incremental_linking" ]
-    }
-
-    sources += [
-      "../browser/notifications/notification_image_retainer_unittest.cc",
-      "../browser/notifications/notification_template_builder_unittest.cc",
-      "../browser/ui/desktop_ios_promotion/desktop_ios_promotion_bubble_controller_unittest.cc",
-      "../browser/ui/desktop_ios_promotion/desktop_ios_promotion_util_unittest.cc",
-      "../browser/ui/desktop_ios_promotion/sms_service_unittest.cc",
-      "../browser/ui/input_method/input_method_engine_unittest.cc",
-      "../test/data/resource.rc",
-    ]
-    deps += [
-      "//chrome:other_version",
-      "//chrome/app:chrome_dll_resources",
-      "//chrome/install_static:install_static_util",
-      "//chrome/installer/util:strings",
-      "//chrome_elf:blacklist_test_dll_1",
-      "//third_party/iaccessible2",
-      "//third_party/isimpledom",
-      "//third_party/wtl",
-      "//ui/resources",
-    ]
-    data_deps += [
-      "//chrome/browser/safe_browsing/incident_reporting/verifier_test:verifier_test_dll_1",
-      "//chrome/browser/safe_browsing/incident_reporting/verifier_test:verifier_test_dll_2",
-      ":conflicts_dll",
-    ]
-
-    libs = [
-      "comsupp.lib",
-      "oleacc.lib",
-      "rpcrt4.lib",
-      "runtimeobject.lib",
-      "urlmon.lib",
-      "winmm.lib",
-    ]
-
-    ldflags = [
-      "/DELAYLOAD:api-ms-win-core-winrt-error-l1-1-0.dll",
-      "/DELAYLOAD:api-ms-win-core-winrt-l1-1-0.dll",
-      "/DELAYLOAD:api-ms-win-core-winrt-string-l1-1-0.dll",
-    ]
-
-    if (is_chrome_branded) {
-      sources += [
-        "../browser/conflicts/incompatible_applications_updater_win_unittest.cc",
-        "../browser/conflicts/installed_applications_win_unittest.cc",
-        "../browser/conflicts/module_blacklist_cache_util_win_unittest.cc",
-        "../browser/conflicts/module_list_filter_win_unittest.cc",
-        "../browser/conflicts/registry_key_watcher_win_unittest.cc",
-        "../browser/google/google_update_win_unittest.cc",
-      ]
-    }
-  }
-  if (is_android) {
-    sources -= [
-      "../browser/ui/bookmarks/bookmark_ui_utils_desktop_unittest.cc",
-      "../browser/ui/sync/sync_promo_ui_unittest.cc",
-      "../browser/ui/sync/tab_contents_synced_tab_delegate_unittest.cc",
-    ]
-  }
-  if (!is_android && !is_chromeos) {
-    sources += [
-      "../browser/media/webrtc/native_desktop_media_list_unittest.cc",
-      "../browser/metrics/desktop_session_duration/desktop_session_duration_tracker_unittest.cc",
-      "../browser/metrics/upgrade_metrics_provider_unittest.cc",
-      "../browser/signin/force_signin_verifier_unittest.cc",
-      "../browser/signin/signin_global_error_unittest.cc",
-      "../browser/signin/signin_ui_util_unittest.cc",
-      "../browser/signin/signin_util_unittest.cc",
-      "../browser/ui/webui/signin/signin_create_profile_handler_unittest.cc",
-      "../browser/ui/webui/signin/signin_error_handler_unittest.cc",
-      "../browser/ui/webui/signin/sync_confirmation_handler_unittest.cc",
-      "../browser/upgrade_detector_impl_unittest.cc",
-    ]
-  }
-  if (toolkit_views) {
-    deps += [
-      "//components/web_modal:test_support",
-      "//ui/views",
-      "//ui/views:test_support",
-    ]
-    sources += [
-      "../../ui/views/controls/webview/webview_unittest.cc",
-      "../browser/ui/views/apps/app_info_dialog/app_info_dialog_views_unittest.cc",
-      "../browser/ui/views/apps/app_info_dialog/app_info_permissions_panel_unittest.cc",
-      "../browser/ui/views/confirm_bubble_views_unittest.cc",
-      "../browser/ui/views/fullscreen_control/fullscreen_control_popup_unittest.cc",
-      "../browser/ui/views/global_error_bubble_view_unittest.cc",
-      "../browser/ui/views/harmony/layout_provider_unittest.cc",
-      "../browser/ui/views/hover_button_unittest.cc",
-      "../browser/ui/views/media_router/cast_dialog_sink_button_unittest.cc",
-      "../browser/ui/views/media_router/cast_dialog_view_unittest.cc",
-      "../browser/ui/views/media_router/media_router_views_ui_unittest.cc",
-      "../browser/ui/views/page_info/page_info_bubble_view_unittest.cc",
-      "../browser/ui/views/payments/payment_request_item_list_unittest.cc",
-      "../browser/ui/views/payments/validating_textfield_unittest.cc",
-      "../browser/ui/views/payments/view_stack_unittest.cc",
-    ]
-    if (is_chromeos) {
-      sources += [ "../browser/ui/views/ime_driver/input_method_bridge_chromeos_unittest.cc" ]
-    } else {
-      sources += [
-        "../browser/ui/views/relaunch_notification/relaunch_notification_controller_unittest.cc",
-        "../browser/ui/views/relaunch_notification/relaunch_required_dialog_view_unittest.cc",
-      ]
-    }
-    if (!is_chromeos && (!is_mac || mac_views_browser)) {
-      sources += [
-        "../browser/ui/views/frame/opaque_browser_frame_view_layout_unittest.cc",
-        "../browser/ui/views/sync/one_click_signin_dialog_view_unittest.cc",
-      ]
-    }
-    if (enable_native_window_nav_buttons) {
-      sources += [ "../browser/ui/views/frame/desktop_linux_browser_frame_view_layout_unittest.cc" ]
-    }
-    if (!is_mac || mac_views_browser) {
-      sources += [
-        "../browser/ui/views/accelerator_table_unittest.cc",
-        "../browser/ui/views/accelerator_table_unittest_mac.mm",
-        "../browser/ui/views/autofill/autofill_popup_view_native_views_unittest.cc",
-        "../browser/ui/views/bookmarks/bookmark_bar_view_unittest.cc",
-        "../browser/ui/views/bookmarks/bookmark_bubble_view_unittest.cc",
-        "../browser/ui/views/bookmarks/bookmark_context_menu_unittest.cc",
-        "../browser/ui/views/bookmarks/bookmark_editor_view_unittest.cc",
-        "../browser/ui/views/bookmarks/bookmark_menu_delegate_unittest.cc",
-        "../browser/ui/views/device_chooser_content_view_unittest.cc",
-        "../browser/ui/views/download/download_item_view_unittest.cc",
-        "../browser/ui/views/extensions/chooser_dialog_view_unittest.cc",
-        "../browser/ui/views/extensions/media_galleries_dialog_views_unittest.cc",
-        "../browser/ui/views/frame/browser_non_client_frame_view_unittest.cc",
-        "../browser/ui/views/frame/browser_view_layout_unittest.cc",
-        "../browser/ui/views/frame/browser_view_unittest.cc",
-        "../browser/ui/views/frame/test_with_browser_view.cc",
-        "../browser/ui/views/frame/test_with_browser_view.h",
-        "../browser/ui/views/frame/web_contents_close_handler_unittest.cc",
-        "../browser/ui/views/infobars/infobar_view_unittest.cc",
-        "../browser/ui/views/location_bar/icon_label_bubble_view_unittest.cc",
-        "../browser/ui/views/media_router/web_contents_display_observer_view_unittest.cc",
-        "../browser/ui/views/omnibox/omnibox_result_view_unittest.cc",
-        "../browser/ui/views/omnibox/omnibox_view_views_unittest.cc",
-        "../browser/ui/views/status_icons/status_tray_win_unittest.cc",
-        "../browser/ui/views/sync/bubble_sync_promo_view_unittest.cc",
-        "../browser/ui/views/tab_contents/chrome_web_contents_view_delegate_views_unittest.cc",
-        "../browser/ui/views/tabs/alert_indicator_button_unittest.cc",
-        "../browser/ui/views/tabs/fake_base_tab_strip_controller.cc",
-        "../browser/ui/views/tabs/fake_base_tab_strip_controller.h",
-        "../browser/ui/views/tabs/stacked_tab_strip_layout_unittest.cc",
-        "../browser/ui/views/tabs/tab_strip_layout_unittest.cc",
-        "../browser/ui/views/tabs/tab_strip_unittest.cc",
-        "../browser/ui/views/tabs/tab_unittest.cc",
-        "../browser/ui/views/toolbar/reload_button_unittest.cc",
-        "../browser/ui/views/toolbar/toolbar_action_view_unittest.cc",
-        "../browser/ui/views/toolbar/toolbar_actions_bar_bubble_views_unittest.cc",
-        "../browser/ui/views/translate/translate_bubble_view_unittest.cc",
-        "../browser/ui/views/webshare/webshare_target_picker_view_unittest.cc",
-      ]
-    }
-    if ((is_linux && !is_chromeos) || is_win) {
-      sources += [ "../browser/ui/views/message_center/popups_only_ui_delegate_unittest.cc" ]
-    }
-    if (use_aura) {
-      sources += [
-        "../browser/ui/views/apps/shaped_app_window_targeter_unittest.cc",
-
-        # Get these compiling on Mac - see http://crbug.com/657883.
-        "../browser/ui/views/crypto_module_password_dialog_view_unittest.cc",
-        "../browser/ui/views/desktop_capture/desktop_media_picker_views_unittest.cc",
-      ]
-    }
-  }
-  if (!is_android && use_nss_certs) {
-    sources += [ "../common/net/x509_certificate_model_nss_unittest.cc" ]
-  }
-  if (is_desktop_linux || is_mac) {
-    sources += [ "../browser/net/trial_comparison_cert_verifier_unittest.cc" ]
-  }
-  if (enable_supervised_users) {
-    sources += [
-      "../browser/content_settings/content_settings_supervised_provider_unittest.cc",
-      "../browser/supervised_user/child_accounts/child_account_service_unittest.cc",
-      "../browser/supervised_user/child_accounts/family_info_fetcher_unittest.cc",
-      "../browser/supervised_user/child_accounts/permission_request_creator_apiary_unittest.cc",
-      "../browser/supervised_user/experimental/safe_search_url_reporter_unittest.cc",
-      "../browser/supervised_user/supervised_user_pref_store_unittest.cc",
-      "../browser/supervised_user/supervised_user_service_unittest.cc",
-      "../browser/supervised_user/supervised_user_settings_service_unittest.cc",
-      "../browser/supervised_user/supervised_user_url_filter_unittest.cc",
-      "../browser/supervised_user/supervised_user_whitelist_service_unittest.cc",
-    ]
-  }
-  if (enable_supervised_users && !is_android && !is_chromeos) {
-    sources += [ "../browser/supervised_user/supervised_user_creation_policy_handler_unittest.cc" ]
-  }
-  if (safe_browsing_mode == 1 && enable_extensions) {
-    sources += [ "../browser/extensions/blacklist_unittest.cc" ]
-  }
-  if (enable_app_list) {
-    sources += [
-      "../browser/ui/app_list/app_context_menu_unittest.cc",
-      "../browser/ui/app_list/app_list_syncable_service_unittest.cc",
-      "../browser/ui/app_list/app_list_test_util.cc",
-      "../browser/ui/app_list/app_list_test_util.h",
-      "../browser/ui/app_list/arc/arc_app_test.cc",
-      "../browser/ui/app_list/arc/arc_app_test.h",
-      "../browser/ui/app_list/arc/arc_app_unittest.cc",
-      "../browser/ui/app_list/arc/arc_app_utils_unittest.cc",
-      "../browser/ui/app_list/arc/arc_vpn_provider_unittest.cc",
-      "../browser/ui/app_list/extension_app_model_builder_unittest.cc",
-      "../browser/ui/app_list/internal_app/internal_app_model_builder_unittest.cc",
-      "../browser/ui/app_list/search/answer_card/answer_card_result_unittest.cc",
-      "../browser/ui/app_list/search/answer_card/answer_card_search_provider_unittest.cc",
-      "../browser/ui/app_list/search/arc/arc_app_data_search_provider_unittest.cc",
-      "../browser/ui/app_list/search/arc/arc_app_shortcuts_search_provider_unittest.cc",
-      "../browser/ui/app_list/search/arc/arc_playstore_search_provider_unittest.cc",
-      "../browser/ui/app_list/search/launcher_search/launcher_search_icon_image_loader_unittest.cc",
-      "../browser/ui/app_list/search/settings_shortcut/settings_shortcut_provider_unittest.cc",
-      "../browser/ui/app_list/search/settings_shortcut/settings_shortcut_result_unittest.cc",
-      "../browser/ui/app_list/search/tests/app_search_provider_unittest.cc",
-      "../browser/ui/app_list/search/tests/mixer_unittest.cc",
-      "../browser/ui/app_list/search/tests/omnibox_result_unittest.cc",
-      "../browser/ui/app_list/search/tests/term_break_iterator_unittest.cc",
-      "../browser/ui/app_list/search/tests/tokenized_string_char_iterator_unittest.cc",
-      "../browser/ui/app_list/search/tests/tokenized_string_match_unittest.cc",
-      "../browser/ui/app_list/search/tests/tokenized_string_unittest.cc",
-      "../browser/ui/app_list/test/fake_app_list_model_updater.cc",
-      "../browser/ui/app_list/test/fake_app_list_model_updater.h",
-      "../browser/ui/app_list/test/fake_profile.cc",
-      "../browser/ui/app_list/test/fake_profile.h",
-    ]
-    deps += [
-      # TODO(wutao): Put new icons resources to ash/public/cpp/vector_icons/
-      # when UX provides them.
-      "//ash/resources/vector_icons",
-      "//components/arc:arc_test_support",
-      "//ui/app_list:test_support",
-    ]
-  }
-
-  if (is_win || is_mac || (is_linux && !is_chromeos)) {
-    sources += [ "../browser/password_manager/password_store_signin_notifier_impl_unittest.cc" ]
-  }
-
-  # TODO(crbug.com/349182): Replace "is_chrome_branded" with "enable_widevine".
-  if (is_chrome_branded && is_win) {
-    sources += [ "../gpu/widevine_cdm_proxy_factory_unittest.cc" ]
-  }
-}
-
 static_library("test_support_unit") {
   testonly = true
   sources = [
diff --git a/components/components_strings.grd b/components/components_strings.grd
index 4ee9c7b..ea5faaa 100644
--- a/components/components_strings.grd
+++ b/components/components_strings.grd
@@ -262,7 +262,7 @@
       <message name="IDS_PLUGIN_NOT_SUPPORTED" desc="The placeholder text for an unsupported plugin.">
         This plugin is not supported
       </message>
-      <if expr="not is_android">
+      <if expr="is_android or not is_android">
         <if expr="not use_titlecase">
           <message name="IDS_PRINT" desc="The text label of the Print... menu item. Opens a dialog box to select print settings">
             &amp;Print...
diff --git a/components/guest_view/browser/BUILD.gn b/components/guest_view/browser/BUILD.gn
index 00bd7eb..bf8117e 100644
--- a/components/guest_view/browser/BUILD.gn
+++ b/components/guest_view/browser/BUILD.gn
@@ -6,7 +6,6 @@
 # assert to prevent the accidental building of GuestViews on mobile
 # platforms. If you're now using GuestViews on mobile, go ahead and
 # remove this assert.
-assert(!is_android && !is_ios)
 
 static_library("browser") {
   output_name = "guest_view_browser"
diff --git a/components/guest_view/renderer/BUILD.gn b/components/guest_view/renderer/BUILD.gn
index 51327be..cc056f9 100644
--- a/components/guest_view/renderer/BUILD.gn
+++ b/components/guest_view/renderer/BUILD.gn
@@ -6,7 +6,6 @@
 # assert to prevent the accidental building of GuestViews on mobile
 # platforms. If you're now using GuestViews on mobile, go ahead and
 # remove this assert.
-assert(!is_android && !is_ios)
 
 static_library("renderer") {
   sources = [
diff --git a/components/keep_alive_registry/BUILD.gn b/components/keep_alive_registry/BUILD.gn
index a2d8813..111b69e 100644
--- a/components/keep_alive_registry/BUILD.gn
+++ b/components/keep_alive_registry/BUILD.gn
@@ -2,8 +2,6 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-assert(!is_android)
-
 source_set("keep_alive_registry") {
   sources = [
     "keep_alive_registry.cc",
diff --git a/components/web_modal/BUILD.gn b/components/web_modal/BUILD.gn
index 40e7775..fdf334b 100644
--- a/components/web_modal/BUILD.gn
+++ b/components/web_modal/BUILD.gn
@@ -2,8 +2,6 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-assert(!is_android && !is_ios)
-
 static_library("web_modal") {
   sources = [
     "modal_dialog_host.cc",
diff --git a/components/zoom/BUILD.gn b/components/zoom/BUILD.gn
index 208334a..42451b0 100644
--- a/components/zoom/BUILD.gn
+++ b/components/zoom/BUILD.gn
@@ -2,8 +2,6 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-assert(!is_android && !is_ios, "Desktop zoom is not used on mobile platforms.")
-
 static_library("zoom") {
   sources = [
     "page_zoom.cc",
diff --git a/components/zoom/zoom_controller.cc b/components/zoom/zoom_controller.cc
index eb5732c..bab295e 100644
--- a/components/zoom/zoom_controller.cc
+++ b/components/zoom/zoom_controller.cc
@@ -27,6 +27,7 @@ namespace zoom {
 
 double ZoomController::GetZoomLevelForWebContents(
     const content::WebContents* web_contents) {
+#if 0
   if (!web_contents)
     return 0.0;
 
@@ -35,6 +36,8 @@ double ZoomController::GetZoomLevelForWebContents(
     return zoom_controller->GetZoomLevel();
 
   return content::HostZoomMap::GetZoomLevel(web_contents);
+#endif
+  return 0.0;
 }
 
 ZoomController::ZoomController(content::WebContents* web_contents)
@@ -44,6 +47,7 @@ ZoomController::ZoomController(content::WebContents* web_contents)
       zoom_level_(1.0),
       browser_context_(web_contents->GetBrowserContext()) {
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
+#if 0
   host_zoom_map_ = content::HostZoomMap::GetForWebContents(web_contents);
   zoom_level_ = host_zoom_map_->GetDefaultZoomLevel();
 
@@ -51,6 +55,7 @@ ZoomController::ZoomController(content::WebContents* web_contents)
       base::Bind(&ZoomController::OnZoomLevelChanged, base::Unretained(this)));
 
   UpdateState(std::string());
+#endif
 }
 
 ZoomController::~ZoomController() {
@@ -58,54 +63,75 @@ ZoomController::~ZoomController() {
 }
 
 bool ZoomController::IsAtDefaultZoom() const {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   return content::ZoomValuesEqual(GetZoomLevel(), GetDefaultZoomLevel());
+#endif
+  return true;
 }
 
 ZoomController::RelativeZoom ZoomController::GetZoomRelativeToDefault() const {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   double current_level = GetZoomLevel();
   double default_level = GetDefaultZoomLevel();
   if (content::ZoomValuesEqual(current_level, default_level))
+#endif
     return ZOOM_AT_DEFAULT_ZOOM;
+#if 0
   if (current_level > default_level)
     return ZOOM_ABOVE_DEFAULT_ZOOM;
   return ZOOM_BELOW_DEFAULT_ZOOM;
+#endif
 }
 
 void ZoomController::AddObserver(ZoomObserver* observer) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   observers_.AddObserver(observer);
+#endif
 }
 
 void ZoomController::RemoveObserver(ZoomObserver* observer) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   observers_.RemoveObserver(observer);
+#endif
 }
 
 double ZoomController::GetZoomLevel() const {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   return zoom_mode_ == ZOOM_MODE_MANUAL
              ? zoom_level_
              : content::HostZoomMap::GetZoomLevel(web_contents());
+#endif
+  return 0.0;
 }
 
 int ZoomController::GetZoomPercent() const {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   double zoom_factor = content::ZoomLevelToZoomFactor(GetZoomLevel());
   // Round double for return.
+#endif
+  double zoom_factor = 0;
   return static_cast<int>(zoom_factor * 100 + 0.5);
 }
 
 bool ZoomController::SetZoomLevel(double zoom_level) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   // A client did not initiate this zoom change.
   return SetZoomLevelByClient(zoom_level, nullptr);
+#endif
+  return false;
 }
 
 bool ZoomController::SetZoomLevelByClient(
     double zoom_level,
     const scoped_refptr<const ZoomRequestClient>& client) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   content::NavigationEntry* entry =
       web_contents()->GetController().GetLastCommittedEntry();
@@ -177,10 +203,12 @@ bool ZoomController::SetZoomLevelByClient(
 
   DCHECK(!event_data_);
   last_client_ = nullptr;
+#endif
   return true;
 }
 
 void ZoomController::SetZoomMode(ZoomMode new_mode) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   if (new_mode == zoom_mode_)
     return;
@@ -272,9 +300,11 @@ void ZoomController::SetZoomMode(ZoomMode new_mode) {
   DCHECK(!event_data_);
 
   zoom_mode_ = new_mode;
+#endif
 }
 
 void ZoomController::ResetZoomModeOnNavigationIfNeeded(const GURL& url) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   if (zoom_mode_ != ZOOM_MODE_ISOLATED && zoom_mode_ != ZOOM_MODE_MANUAL)
     return;
@@ -298,10 +328,12 @@ void ZoomController::ResetZoomModeOnNavigationIfNeeded(const GURL& url) {
   // call below.
   zoom_map->ClearTemporaryZoomLevel(process_id, view_id);
   zoom_mode_ = ZOOM_MODE_DEFAULT;
+#endif
 }
 
 void ZoomController::DidFinishNavigation(
     content::NavigationHandle* navigation_handle) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   if (!navigation_handle->IsInMainFrame() || !navigation_handle->HasCommitted())
     return;
@@ -316,18 +348,22 @@ void ZoomController::DidFinishNavigation(
   // zoom level from the old one.
   UpdateState(std::string());
   DCHECK(!event_data_);
+#endif
 }
 
 void ZoomController::WebContentsDestroyed() {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   // At this point we should no longer be sending any zoom events with this
   // WebContents.
   observers_.Clear();
+#endif
 }
 
 void ZoomController::RenderFrameHostChanged(
     content::RenderFrameHost* old_host,
     content::RenderFrameHost* new_host) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   // If our associated HostZoomMap changes, update our event subscription.
   content::HostZoomMap* new_host_zoom_map =
@@ -338,15 +374,19 @@ void ZoomController::RenderFrameHostChanged(
   host_zoom_map_ = new_host_zoom_map;
   zoom_subscription_ = host_zoom_map_->AddZoomLevelChangedCallback(
       base::Bind(&ZoomController::OnZoomLevelChanged, base::Unretained(this)));
+#endif
 }
 
 void ZoomController::OnZoomLevelChanged(
     const content::HostZoomMap::ZoomLevelChange& change) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   UpdateState(change.host);
+#endif
 }
 
 void ZoomController::UpdateState(const std::string& host) {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   // If |host| is empty, all observers should be updated.
   if (!host.empty()) {
@@ -386,17 +426,23 @@ void ZoomController::UpdateState(const std::string& host) {
     for (auto& observer : observers_)
       observer.OnZoomChanged(zoom_change_data);
   }
+#endif
 }
 
 void ZoomController::SetPageScaleFactorIsOneForTesting(bool is_one) {
+#if 0
   int process_id = web_contents()->GetRenderViewHost()->GetProcess()->GetID();
   int view_id = web_contents()->GetRenderViewHost()->GetRoutingID();
   host_zoom_map_->SetPageScaleFactorIsOneForView(process_id, view_id, is_one);
+#endif
 }
 
 bool ZoomController::PageScaleFactorIsOne() const {
+#if 0
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   return content::HostZoomMap::PageScaleFactorIsOne(web_contents());
+#endif
+  return true;
 }
 
 }  // namespace zoom
diff --git a/content/public/common/webplugininfo.h b/content/public/common/webplugininfo.h
index 2735b5d..ab46988 100644
--- a/content/public/common/webplugininfo.h
+++ b/content/public/common/webplugininfo.h
@@ -12,7 +12,9 @@
 
 #include "base/files/file_path.h"
 #include "content/common/content_export.h"
+#if 0
 #include "third_party/skia/include/core/SkColor.h"
+#endif
 
 namespace base {
 class Version;
@@ -58,7 +60,9 @@ struct CONTENT_EXPORT WebPluginInfo {
     PLUGIN_TYPE_BROWSER_PLUGIN
   };
 
+#if 0
   static constexpr SkColor kDefaultBackgroundColor = SkColorSetRGB(38, 38, 38);
+#endif
 
   WebPluginInfo();
   WebPluginInfo(const WebPluginInfo& rhs);
@@ -103,7 +107,9 @@ struct CONTENT_EXPORT WebPluginInfo {
   int32_t pepper_permissions;
 
   // The color to use as the background before the plugin loads.
+#if 0
   SkColor background_color = kDefaultBackgroundColor;
+#endif
 };
 
 }  // namespace content
diff --git a/content/public/common/webplugininfo_param_traits.h b/content/public/common/webplugininfo_param_traits.h
index 85ebcee..c100990 100644
--- a/content/public/common/webplugininfo_param_traits.h
+++ b/content/public/common/webplugininfo_param_traits.h
@@ -30,5 +30,7 @@ IPC_STRUCT_TRAITS_BEGIN(content::WebPluginInfo)
   IPC_STRUCT_TRAITS_MEMBER(mime_types)
   IPC_STRUCT_TRAITS_MEMBER(type)
   IPC_STRUCT_TRAITS_MEMBER(pepper_permissions)
+#if 0
   IPC_STRUCT_TRAITS_MEMBER(background_color)
+#endif
 IPC_STRUCT_TRAITS_END()
diff --git a/content/renderer/renderer_blink_platform_impl.cc b/content/renderer/renderer_blink_platform_impl.cc
index 4205c92..8608528 100644
--- a/content/renderer/renderer_blink_platform_impl.cc
+++ b/content/renderer/renderer_blink_platform_impl.cc
@@ -769,7 +769,7 @@ void RendererBlinkPlatformImpl::GetPluginList(
     bool refresh,
     const blink::WebSecurityOrigin& mainFrameOrigin,
     blink::WebPluginListBuilder* builder) {
-#if BUILDFLAG(ENABLE_PLUGINS)
+#if false && BUILDFLAG(ENABLE_PLUGINS)
   std::vector<WebPluginInfo> plugins;
   if (!plugin_refresh_allowed_)
     refresh = false;
diff --git a/extensions/BUILD.gn b/extensions/BUILD.gn
index 0953b5fc..935879b 100644
--- a/extensions/BUILD.gn
+++ b/extensions/BUILD.gn
@@ -197,42 +197,6 @@ repack("shell_and_test_pak") {
   ]
 }
 
-test("extensions_unittests") {
-  sources = [
-    "test/extensions_unittests_main.cc",
-    "test/logging_timer_unittest.cc",
-  ]
-
-  data = [
-    "test/data/",
-    "//chrome/test/data/extensions/",
-    "//components/test/data/cast_certificate/",
-    "$root_out_dir/content_shell.pak",
-    "$root_out_dir/extensions_shell_and_test.pak",
-  ]
-
-  deps = [
-    ":extensions_resources",
-    ":shell_and_test_pak",
-    ":test_support",
-    "//base/test:test_support",
-    "//content/public/common",
-    "//content/test:test_support",
-    "//extensions/browser:unit_tests",
-    "//extensions/common",
-    "//extensions/common:unit_tests",
-    "//extensions/renderer:unit_tests",
-    "//extensions/shell:unit_tests",
-    "//services/data_decoder:lib",
-    "//services/service_manager/public/cpp/test:test_support",
-    "//ui/gl:test_support",
-  ]
-
-  data_deps = [
-    "//third_party/mesa:osmesa",
-  ]
-}
-
 test("extensions_browsertests") {
   data = [
     "//extensions/test/data/",
diff --git a/extensions/browser/BUILD.gn b/extensions/browser/BUILD.gn
index 40b145b..64522d5 100644
--- a/extensions/browser/BUILD.gn
+++ b/extensions/browser/BUILD.gn
@@ -40,6 +40,7 @@ jumbo_source_set("browser_sources") {
   visibility = [ "./*" ]
 
   sources = [
+    "api/system_cpu/cpu_info_provider_linux.cc",
     "api_activity_monitor.cc",
     "api_activity_monitor.h",
     "app_sorting.h",
diff --git a/extensions/browser/api/idle/idle_manager.cc b/extensions/browser/api/idle/idle_manager.cc
index a4c156c..280da13 100644
--- a/extensions/browser/api/idle/idle_manager.cc
+++ b/extensions/browser/api/idle/idle_manager.cc
@@ -83,15 +83,22 @@ DefaultIdleProvider::~DefaultIdleProvider() {
 
 void DefaultIdleProvider::CalculateIdleState(int idle_threshold,
                                              ui::IdleCallback notify) {
+#if 0
   ui::CalculateIdleState(idle_threshold, notify);
+#endif
 }
 
 void DefaultIdleProvider::CalculateIdleTime(ui::IdleTimeCallback notify) {
+#if 0
   ui::CalculateIdleTime(notify);
+#endif
 }
 
 bool DefaultIdleProvider::CheckIdleStateIsLocked() {
+#if 0
   return ui::CheckIdleStateIsLocked();
+#endif
+  return false;
 }
 
 ui::IdleState IdleTimeToIdleState(bool locked,
diff --git a/extensions/browser/api/messaging/message_service.cc b/extensions/browser/api/messaging/message_service.cc
index 3d39acb..162fe46 100644
--- a/extensions/browser/api/messaging/message_service.cc
+++ b/extensions/browser/api/messaging/message_service.cc
@@ -390,10 +390,12 @@ void MessageService::OpenChannelToNativeApp(
 
   AddChannel(std::move(channel), receiver_port_id);
 #else  // !(defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX))
+#if 0
   const char kNativeMessagingNotSupportedError[] =
       "Native Messaging is not supported on this platform.";
   DispatchOnDisconnect(
       source, receiver_port_id, kNativeMessagingNotSupportedError);
+#endif
 #endif  // !(defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX))
 }
 
diff --git a/extensions/browser/browser_context_keyed_service_factories.cc b/extensions/browser/browser_context_keyed_service_factories.cc
index 44885c9..6992b80 100644
--- a/extensions/browser/browser_context_keyed_service_factories.cc
+++ b/extensions/browser/browser_context_keyed_service_factories.cc
@@ -88,7 +88,9 @@ void EnsureBrowserContextKeyedServiceFactoriesBuilt() {
   NetworkingPrivateEventRouterFactory::GetInstance();
 #endif
   PowerAPI::GetFactoryInstance();
+#if 0
   ProcessManagerFactory::GetInstance();
+#endif
   RendererStartupHelperFactory::GetInstance();
   RuntimeAPI::GetFactoryInstance();
   StorageFrontend::GetFactoryInstance();
diff --git a/extensions/browser/guest_view/web_view/web_view_guest.cc b/extensions/browser/guest_view/web_view/web_view_guest.cc
index 8611c34..dff09b4 100644
--- a/extensions/browser/guest_view/web_view/web_view_guest.cc
+++ b/extensions/browser/guest_view/web_view/web_view_guest.cc
@@ -138,6 +138,7 @@ static std::string TerminationStatusToString(base::TerminationStatus status) {
     case base::TERMINATION_STATUS_PROCESS_WAS_KILLED_BY_OOM:
       return "oom killed";
 #endif
+    case base::TERMINATION_STATUS_OOM_PROTECTED:
     case base::TERMINATION_STATUS_OOM:
       return "oom";
     case base::TERMINATION_STATUS_PROCESS_WAS_KILLED:
diff --git a/extensions/common/manifest_handlers/mime_types_handler.cc b/extensions/common/manifest_handlers/mime_types_handler.cc
index 7d208c6..0c63974f 100644
--- a/extensions/common/manifest_handlers/mime_types_handler.cc
+++ b/extensions/common/manifest_handlers/mime_types_handler.cc
@@ -84,7 +84,10 @@ SkColor MimeTypesHandler::GetBackgroundColor() const {
       extension_id_ == extension_misc::kQuickOfficeComponentExtensionId) {
     return kQuickOfficeExtensionBackgroundColor;
   }
+#if 0
   return content::WebPluginInfo::kDefaultBackgroundColor;
+#endif
+  return 0;
 }
 
 base::FilePath MimeTypesHandler::GetPluginPath() const {
diff --git a/extensions/common/permissions/usb_device_permission.cc b/extensions/common/permissions/usb_device_permission.cc
index debe76f..1caeac6 100644
--- a/extensions/common/permissions/usb_device_permission.cc
+++ b/extensions/common/permissions/usb_device_permission.cc
@@ -134,6 +134,7 @@ bool UsbDevicePermission::FromValue(
 
 PermissionIDSet UsbDevicePermission::GetPermissions() const {
   PermissionIDSet ids;
+#if 0
 
   std::set<uint16_t> unknown_product_vendors;
   bool found_unknown_vendor = false;
@@ -170,6 +171,7 @@ PermissionIDSet UsbDevicePermission::GetPermissions() const {
   if (found_unknown_vendor)
     ids.insert(APIPermission::kUsbDeviceUnknownVendor);
 
+#endif
   return ids;
 }
 
diff --git a/services/device/public/cpp/hid/BUILD.gn b/services/device/public/cpp/hid/BUILD.gn
index 6ec1c2c..fdb6010 100644
--- a/services/device/public/cpp/hid/BUILD.gn
+++ b/services/device/public/cpp/hid/BUILD.gn
@@ -7,7 +7,6 @@ import("//build/config/features.gni")
 source_set("hid") {
   # HID is not implemented on Android and we want to be particularly careful
   # about not bloating binary size by accidentially including it.
-  assert(!is_android)
 
   sources = [
     "fake_input_service_linux.cc",
diff --git a/ui/aura/mus/os_exchange_data_provider_mus.cc b/ui/aura/mus/os_exchange_data_provider_mus.cc
index eb01aa5..f009c72 100644
--- a/ui/aura/mus/os_exchange_data_provider_mus.cc
+++ b/ui/aura/mus/os_exchange_data_provider_mus.cc
@@ -317,7 +317,7 @@ bool OSExchangeDataProviderMus::HasHtml() const {
 }
 #endif
 
-#if defined(USE_AURA) || defined(OS_MACOSX)
+#if defined(USE_AURA) || defined(OS_MACOSX) || true
 void OSExchangeDataProviderMus::SetDragImage(
     const gfx::ImageSkia& image,
     const gfx::Vector2d& cursor_offset) {
diff --git a/ui/aura/mus/os_exchange_data_provider_mus.h b/ui/aura/mus/os_exchange_data_provider_mus.h
index 27a5419..0e6dd91 100644
--- a/ui/aura/mus/os_exchange_data_provider_mus.h
+++ b/ui/aura/mus/os_exchange_data_provider_mus.h
@@ -86,7 +86,7 @@ class AURA_EXPORT OSExchangeDataProviderMus
   bool HasHtml() const override;
 #endif
 
-#if defined(USE_AURA) || defined(OS_MACOSX)
+#if defined(USE_AURA) || defined(OS_MACOSX) || true
   void SetDragImage(const gfx::ImageSkia& image,
                     const gfx::Vector2d& cursor_offset) override;
   gfx::ImageSkia GetDragImage() const override;
diff --git a/ui/events/event.h b/ui/events/event.h
index 5668526..a76a2c0 100644
--- a/ui/events/event.h
+++ b/ui/events/event.h
@@ -383,10 +383,12 @@ class EVENTS_EXPORT LocatedEvent : public Event {
   template <class T> void ConvertLocationToTarget(T* source, T* target) {
     if (!target || target == source)
       return;
+#if 0
     gfx::Point offset = gfx::ToFlooredPoint(location_);
     T::ConvertPointToTarget(source, target, &offset);
     gfx::Vector2d diff = gfx::ToFlooredPoint(location_) - offset;
     location_ = location_ - diff;
+#endif
   }
 
  protected:
diff --git a/ui/views/button_drag_utils.cc b/ui/views/button_drag_utils.cc
index c898239..7f212cb 100644
--- a/ui/views/button_drag_utils.cc
+++ b/ui/views/button_drag_utils.cc
@@ -90,7 +90,9 @@ void SetDragImage(const GURL& url,
           .context(),
       size));
   gfx::ImageSkia image(gfx::ImageSkiaRep(bitmap, raster_scale));
+#if 0
   data->provider().SetDragImage(image, press_point);
+#endif
 }
 
 }  // namespace button_drag_utils
diff --git a/ui/views/controls/menu/menu_controller.cc b/ui/views/controls/menu/menu_controller.cc
index 00590f0..fa79673 100644
--- a/ui/views/controls/menu/menu_controller.cc
+++ b/ui/views/controls/menu/menu_controller.cc
@@ -1300,7 +1300,9 @@ void MenuController::StartDrag(SubmenuView* source,
 
   OSExchangeData data;
   item->GetDelegate()->WriteDragData(item, &data);
+#if 0
   data.provider().SetDragImage(image, press_loc.OffsetFromOrigin());
+#endif
 
   StopScrolling();
   int drag_ops = item->GetDelegate()->GetDragOperations(item);
diff --git a/ui/views/controls/menu/menu_host.cc b/ui/views/controls/menu/menu_host.cc
index f14a1c0..9d2d28f 100644
--- a/ui/views/controls/menu/menu_host.cc
+++ b/ui/views/controls/menu/menu_host.cc
@@ -21,7 +21,7 @@
 #include "ui/views/widget/native_widget_private.h"
 #include "ui/views/widget/widget.h"
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && false
 #include "ui/aura/window.h"
 #endif
 
@@ -29,7 +29,7 @@ namespace views {
 
 namespace internal {
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && false
 // This class adds itself as the pre target handler for the |window|
 // passed in. It currently handles touch events and forwards them to the
 // controller. Reason for this approach is views does not get raw touch
@@ -81,7 +81,7 @@ class PreMenuEventDispatchHandler : public ui::EventHandler,
 #endif  // OS_MACOSX
 
 void TransferGesture(Widget* source, Widget* target) {
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || true
   NOTIMPLEMENTED();
 #else   // !defined(OS_MACOSX)
   ui::GestureRecognizer::Get()->TransferEventsTo(
@@ -134,7 +134,7 @@ void MenuHost::InitMenuHost(Widget* parent,
 #endif
   Init(params);
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && false
   pre_dispatch_handler_.reset(new internal::PreMenuEventDispatchHandler(
       menu_controller, submenu_, GetNativeView()));
 #endif
@@ -194,7 +194,7 @@ void MenuHost::DestroyMenuHost() {
   HideMenuHost();
   destroying_ = true;
   static_cast<MenuHostRootView*>(GetRootView())->ClearSubmenu();
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && false
   pre_dispatch_handler_.reset();
 #endif
   Close();
diff --git a/ui/views/controls/menu/menu_host.h b/ui/views/controls/menu/menu_host.h
index b49f589..10df096 100644
--- a/ui/views/controls/menu/menu_host.h
+++ b/ui/views/controls/menu/menu_host.h
@@ -94,7 +94,7 @@ class MenuHost : public Widget, public WidgetObserver {
   // If true and capture is lost we don't notify the delegate.
   bool ignore_capture_lost_;
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && false
   // Handles raw touch events at the moment.
   std::unique_ptr<internal::PreMenuEventDispatchHandler> pre_dispatch_handler_;
 #endif
diff --git a/ui/views/controls/textfield/textfield.cc b/ui/views/controls/textfield/textfield.cc
index 3c1d189..38df586 100644
--- a/ui/views/controls/textfield/textfield.cc
+++ b/ui/views/controls/textfield/textfield.cc
@@ -1206,11 +1206,13 @@ void Textfield::WriteDragDataForView(View* sender,
                         GetWidget()->GetCompositor()->is_pixel_canvas())
           .context(),
       label.size()));
+#if 0
   const gfx::Vector2d kOffset(-15, 0);
   gfx::ImageSkia image(gfx::ImageSkiaRep(bitmap, raster_scale));
   data->provider().SetDragImage(image, kOffset);
   if (controller_)
     controller_->OnWriteDragData(data);
+#endif
 }
 
 int Textfield::GetDragOperationsForView(View* sender, const gfx::Point& p) {
diff --git a/ui/views/controls/webview/unhandled_keyboard_event_handler.cc b/ui/views/controls/webview/unhandled_keyboard_event_handler.cc
index d7bd936..7e7a8fb 100644
--- a/ui/views/controls/webview/unhandled_keyboard_event_handler.cc
+++ b/ui/views/controls/webview/unhandled_keyboard_event_handler.cc
@@ -54,8 +54,10 @@ void UnhandledKeyboardEventHandler::HandleKeyboardEvent(
     ignore_next_char_event_ = false;
   }
 
+#if 0
   if (event.os_event && !event.skip_in_browser)
     HandleNativeKeyboardEvent(event.os_event, focus_manager);
+#endif
 }
 
 }  // namespace views
diff --git a/ui/views/controls/webview/unhandled_keyboard_event_handler_default.cc b/ui/views/controls/webview/unhandled_keyboard_event_handler_default.cc
index 8d30e36..534694c 100644
--- a/ui/views/controls/webview/unhandled_keyboard_event_handler_default.cc
+++ b/ui/views/controls/webview/unhandled_keyboard_event_handler_default.cc
@@ -13,7 +13,9 @@ namespace views {
 void UnhandledKeyboardEventHandler::HandleNativeKeyboardEvent(
     gfx::NativeEvent event,
     FocusManager* focus_manager) {
+#if 0
   focus_manager->OnKeyEvent(*static_cast<ui::KeyEvent*>(event));
+#endif
 }
 
 }  // namespace views
diff --git a/ui/views/controls/webview/web_dialog_view.cc b/ui/views/controls/webview/web_dialog_view.cc
index 323d9f8..51df918 100644
--- a/ui/views/controls/webview/web_dialog_view.cc
+++ b/ui/views/controls/webview/web_dialog_view.cc
@@ -282,10 +282,12 @@ void WebDialogView::MoveContents(WebContents* source, const gfx::Rect& pos) {
 // they're all browser-specific. (This may change in the future.)
 void WebDialogView::HandleKeyboardEvent(content::WebContents* source,
                                         const NativeWebKeyboardEvent& event) {
+#if 0
   if (!event.os_event)
     return;
 
   GetWidget()->native_widget_private()->RepostNativeEvent(event.os_event);
+#endif
 }
 
 void WebDialogView::CloseContents(WebContents* source) {
-- 
2.7.4

